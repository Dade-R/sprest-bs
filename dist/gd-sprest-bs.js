/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./build/components/core.js":
/*!**********************************!*\
  !*** ./build/components/core.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/components/core.js?");

/***/ }),

/***/ "./build/components/datetime.js":
/*!**************************************!*\
  !*** ./build/components/datetime.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.DateTimeControlType = exports.DateTime = void 0;\n\n__webpack_require__(/*! flatpickr/dist/flatpickr.min.js */ \"./node_modules/.pnpm/flatpickr@4.6.9/node_modules/flatpickr/dist/flatpickr.min.js\");\n\nvar core_1 = __webpack_require__(/*! ./core */ \"./build/components/core.js\");\n/**\r\n * Date/Time\r\n */\n\n\nexports.DateTime = function (props) {\n  // Create the date/time element\n  var elDateTime = document.createElement(\"div\");\n  elDateTime.className = \"date-time\"; // Create the textbox\n\n  var textbox = core_1.Components.InputGroup({\n    el: elDateTime,\n    label: props.label\n  }); // See if we are disabling the textbox\n\n  if (props.disabled) {\n    // Disable the input element\n    textbox.el.querySelector(\"input\").disabled = true;\n  } // Get the options and default the values\n\n\n  var options = props.options || {};\n  options.enableTime = props.showTime;\n  options.defaultDate = props.value ? new Date(props.value) : null;\n  options.dateFormat = options.dateFormat || \"m-d-Y\" + (props.showTime ? \" H:i K\" : \"\"); // Apply the plugin\n\n  var datetime = flatpickr(textbox.el.querySelector(\"input\"), options); // Create the element\n\n  var el = document.createElement(\"div\");\n  el.appendChild(elDateTime); // See if we are rendering it to an element\n\n  if (props.el) {\n    // Ensure the parent element exists\n    if (props.el.parentElement && props.el.parentElement.classList) {\n      // Set the bootstrap class\n      props.el.parentElement.classList.contains(\"bs\") ? null : props.el.parentElement.classList.add(\"bs\");\n    } // Append the elements\n\n\n    while (el.children.length > 0) {\n      props.el.appendChild(el.children[0]);\n    } // Update the element\n\n\n    el = props.el;\n  } else {\n    // Set the bootstrap class\n    el.classList.add(\"bs\");\n  } // Create the object\n\n\n  var obj = {\n    el: elDateTime,\n    flatpickrObj: datetime,\n    getDate: function getDate() {\n      return datetime.selectedDates[0];\n    },\n    getValue: function getValue() {\n      return textbox.getValue();\n    },\n    setValue: function setValue(dt, dtFormat) {\n      // Default the format\n      dtFormat = dtFormat || (props.options ? props.options.dateFormat : null); // Set the date/time\n\n      datetime.setDate(dt, true, dtFormat);\n    }\n  }; // Execute the assign to event\n\n  props.assignTo ? props.assignTo(obj) : null; // Return the object\n\n  return obj;\n}; // Customize the form control\n\n\nexports.DateTimeControlType = 100;\ncore_1.Components.FormControlTypes[\"DateTime\"] = exports.DateTimeControlType;\ncore_1.Components.CustomControls.registerType(exports.DateTimeControlType, function (props) {\n  var dt = null; // Set the created method\n\n  var onRendered = props.onControlRendered;\n\n  props.onControlRendered = function (ctrl) {\n    // Render a date/time\n    dt = exports.DateTime({\n      className: props.className,\n      disabled: props.isReadonly,\n      el: ctrl.el,\n      options: props.options,\n      showTime: props.showTime,\n      value: props.value\n    }); // See if the label exists\n\n    var elLabel = ctrl[\"_elLabel\"];\n\n    if (elLabel) {\n      // Set the id and aria properties\n      elLabel ? elLabel.id = (props.id || props.name) + \"_label\" : null;\n      dt.el.querySelector(\"input\").setAttribute(\"aria-labelledby\", elLabel.id);\n    } // Set the control\n\n\n    ctrl.setControl(dt); // Call the custom render event\n\n    onRendered ? onRendered(ctrl) : null;\n  };\n\n  var onValidate = props.onValidate;\n\n  props.onValidate = function (ctrl, result) {\n    // See if the field is required\n    if (ctrl.required) {\n      // Get the date field elements\n      var elDateElements = dt.el.querySelectorAll(\".form-control\");\n\n      for (var i = 0; i < elDateElements.length; i++) {\n        // Get the visible input element\n        var elDateElement = elDateElements[i];\n\n        if (elDateElement.type != \"hidden\") {\n          // See if the value exists\n          if (result.value) {\n            // Update the classes\n            elDateElement.classList.remove(\"is-invalid\");\n            elDateElement.classList.add(\"is-valid\");\n          } else {\n            // Update the classes\n            elDateElement.classList.remove(\"is-valid\");\n            elDateElement.classList.add(\"is-invalid\");\n          }\n        }\n      }\n    } // Call the onvalidate event\n\n\n    var returnVal = onValidate ? onValidate(ctrl, result) : null; // Return the result\n\n    return returnVal || result;\n  }; // Register a people picker\n\n\n  props.onGetValue = function (ctrl) {\n    // Return the value\n    return dt ? dt.getDate() : ctrl.value;\n  };\n});\n\n//# sourceURL=webpack://gd-sprest-bs/./build/components/datetime.js?");

/***/ }),

/***/ "./build/components/field.js":
/*!***********************************!*\
  !*** ./build/components/field.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Field = void 0;\n\nvar core_1 = __webpack_require__(/*! ./core */ \"./build/components/core.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n\nvar datetime_1 = __webpack_require__(/*! ./datetime */ \"./build/components/datetime.js\");\n\nvar peoplePicker_1 = __webpack_require__(/*! ./peoplePicker */ \"./build/components/peoplePicker.js\");\n/**\r\n * Field\r\n */\n\n\nexports.Field = function (props) {\n  var control;\n  var lookupFieldInfo = null;\n  var mmsFieldInfo = null; // Method to get the choice options\n\n  var getChoiceItems = function getChoiceItems(isCheckbox, field, selectedValues) {\n    var items = []; // Update the selected values\n\n    selectedValues = selectedValues && selectedValues.results ? selectedValues.results : [selectedValues]; // Parse the choices\n\n    for (var i = 0; i < field.Choices.results.length; i++) {\n      var choice = field.Choices.results[i];\n      var isSelected = false; // Determine if this choice is selected\n\n      for (var j = 0; j < selectedValues.length; j++) {\n        // See if this choice is selected\n        if (choice == selectedValues[j]) {\n          // Set the flag and break from the loop\n          isSelected = true;\n          break;\n        }\n      } // See if this is a checkbox\n\n\n      if (isCheckbox) {\n        // Add the item\n        items.push({\n          isSelected: isSelected,\n          label: choice\n        });\n      } else {\n        // Add the item\n        items.push({\n          isSelected: isSelected,\n          label: choice,\n          text: choice,\n          value: choice\n        });\n      }\n    } // See if this is a dropdown and no selected values exists, and this is a required field\n\n\n    if (!isCheckbox && items.length > 0 && selectedValues.length == 0 && field.Required) {\n      // Select the first item\n      items[0].isSelected = true;\n    } // Return the items\n\n\n    return items;\n  }; // Method to generate the lookup dropdown items\n\n\n  var getLookupItems = function getLookupItems(field, lookupItems, selectedValues) {\n    var items = []; // Update the selected values\n\n    selectedValues = selectedValues && selectedValues.results ? selectedValues.results : [selectedValues]; // Parse the lookup items\n\n    for (var i = 0; i < lookupItems.length; i++) {\n      var item = lookupItems[i];\n      var isSelected = false; // Determine if this lookup is selected\n\n      for (var j = 0; j < selectedValues.length; j++) {\n        var id = selectedValues[j] ? selectedValues[j].Id : null; // See if this choice is selected\n\n        if (item.Id == id) {\n          // Set the flag and break from the loop\n          isSelected = true;\n          break;\n        }\n      } // Add the item\n\n\n      items.push({\n        data: item,\n        isSelected: isSelected,\n        text: item[field.LookupField],\n        value: item.Id.toString()\n      });\n    } // See if no selected values exists, and this is a required field\n\n\n    if (items.length > 0 && selectedValues.length == 0 && field.Required) {\n      // Select the first item\n      items[0].isSelected = true;\n    } // Return the items\n\n\n    return items;\n  }; // Method to get the mms dropdown items\n\n\n  var getMMSItems = function getMMSItems(term, selectedValues) {\n    if (selectedValues === void 0) {\n      selectedValues = [];\n    }\n\n    var items = []; // See if information exists\n\n    if (term.info) {\n      var isSelected = false; // Parse the selected values\n\n      for (var i = 0; i < selectedValues.length; i++) {\n        // See if this item is selected\n        if (selectedValues[i] == term.info.id) {\n          isSelected = true;\n          break;\n        }\n      } // Add the heading\n\n\n      items.push({\n        data: term,\n        isHeader: true,\n        isSelected: isSelected,\n        text: term.info.name,\n        value: term.info.id\n      });\n    } // Parse the terms\n\n\n    for (var termName in term) {\n      var child = term[termName]; // Skip the info and parent properties\n\n      if (termName == \"info\" || termName == \"parent\") {\n        continue;\n      } // Get the child items\n\n\n      var childItems = getMMSItems(child, selectedValues); // Add the item\n\n      items = items.concat(childItems);\n    } // See if no selected values exists, and this is a required field\n\n\n    if (items.length > 0 && selectedValues.length == 0 && isRequired) {\n      // Select the first item\n      items[0].isSelected = true;\n    } // Return the items\n\n\n    return items;\n  }; // Set the properties based on the field link\n\n\n  var fieldLink = props.listInfo.fieldLinks ? props.listInfo.fieldLinks[props.field.InternalName] : null;\n  var isReadonly = fieldLink && typeof fieldLink.ReadOnly === \"boolean\" ? fieldLink.ReadOnly : props.field.ReadOnlyField;\n  var isRequired = fieldLink && typeof fieldLink.Required === \"boolean\" ? fieldLink.Required : props.field.Required; // See if this is an internal field\n\n  if (props.field.CanBeDeleted == false) {\n    // Override the property based on the field property\n    isReadonly = isReadonly || props.field.ReadOnlyField;\n  } // Set the default properties for the control\n\n\n  var controlProps = {\n    description: props.field.Description,\n    errorMessage: props.errorMessage,\n    id: props.field.InternalName,\n    isReadonly: isReadonly,\n    label: (isRequired ? \"* \" : \"\") + props.field.Title,\n    name: props.field.InternalName,\n    onControlRendering: function onControlRendering(control) {\n      // Execute the event\n      return props.onControlRendering ? props.onControlRendering(control, props.field) : null;\n    },\n    onControlRendered: function onControlRendered(formControl) {\n      // Save the control\n      control = formControl; // Execute the event\n\n      return props.onControlRendered ? props.onControlRendered(control, props.field) : null;\n    },\n    required: isRequired,\n    type: core_1.Components.FormControlTypes.TextField,\n    value: props.value\n  }; // Define a base validation method\n\n  var baseValidation = null; // See if this is a new form, a default value exists and no value has been defined\n\n  if (props.controlMode == gd_sprest_1.SPTypes.ControlMode.New && props.field.DefaultValue && props.value == null) {\n    // Set the default value\n    controlProps.value = props.field.DefaultValue;\n  } // Set the type\n\n\n  var onControlRendered = null;\n  var onControlRendering = null;\n\n  switch (props.field.FieldTypeKind) {\n    // Boolean\n    case gd_sprest_1.SPTypes.FieldType.Boolean:\n      // Set the type\n      controlProps.type = core_1.Components.FormControlTypes.Checkbox; // Create the item\n\n      controlProps.items = [{\n        label: controlProps.label\n      }]; // Clear the label\n\n      controlProps.label = \"\";\n      break;\n    // Choice\n\n    case gd_sprest_1.SPTypes.FieldType.Choice:\n      var displayRadioButtons = props.field.SchemaXml.indexOf('Format=\"RadioButtons\"') > 0 ? true : false; // See if we are displaying radio buttons\n\n      if (displayRadioButtons) {\n        // Set the type\n        controlProps.type = core_1.Components.FormControlTypes.Switch;\n      } else {\n        // Set the type\n        controlProps.type = core_1.Components.FormControlTypes.Dropdown;\n      } // Get the items\n\n\n      var items = getChoiceItems(displayRadioButtons, props.field, props.value); // See if this is not a required field\n\n      if (!isRequired) {\n        // Add a blank entry\n        items = [{\n          text: \"\",\n          value: null\n        }].concat(items);\n      } // Set the items\n\n\n      controlProps.items = items;\n      break;\n    // Currency Field\n\n    case gd_sprest_1.SPTypes.FieldType.Currency:\n      // Set the type\n      controlProps.type = core_1.Components.FormControlTypes.TextField; // Set the rendered event\n\n      onControlRendered = controlProps.onControlRendered;\n\n      controlProps.onControlRendered = function (formControl) {\n        // Save the control\n        control = formControl; // Call the event\n\n        onControlRendered ? onControlRendered(formControl) : null;\n      };\n\n      break;\n    // Date/Time\n\n    case gd_sprest_1.SPTypes.FieldType.DateTime:\n      // Set the time flag\n      var showTime = props.field.DisplayFormat == gd_sprest_1.SPTypes.DateFormat.DateTime;\n      controlProps.showTime = showTime; // Set the type\n\n      controlProps.type = datetime_1.DateTimeControlType;\n      break;\n    // Lookup\n\n    case gd_sprest_1.SPTypes.FieldType.Lookup:\n      // Default the lookup field props will determine the default type\n      controlProps.type = props.field.AllowMultipleValues ? core_1.Components.FormControlTypes.MultiDropdown : core_1.Components.FormControlTypes.Dropdown; // See if this field is readonly and a value exists\n\n      if (isReadonly) {\n        // Update the value\n        controlProps.type = core_1.Components.FormControlTypes.Readonly; // Ensure a value exists\n\n        if (props.value) {\n          // Set the rendered event\n          onControlRendered = controlProps.onControlRendered;\n\n          controlProps.onControlRendered = function (formControl) {\n            // Set the class name\n            control.el.classList.add(\"form-control\");\n            control.el.style.backgroundColor = \"#e9ecef\"; // Override the html rendered\n\n            control.el.innerHTML = props.listInfo.fieldValuesAsHtml[props.field.InternalName];\n          };\n        }\n      } else {\n        // Set the rendering event\n        onControlRendering = controlProps.onControlRendering;\n\n        controlProps.onControlRendering = function (newProps) {\n          // Update the control properties\n          controlProps = newProps; // Display a loading message\n\n          controlProps.loadingMessage = \"Loading the Lookup Data\"; // Return a promise\n\n          return new Promise(function (resolve, reject) {\n            // Load the field information\n            gd_sprest_1.Helper.ListFormField.create({\n              field: props.field,\n              listName: props.listInfo.list.Title,\n              name: props.field.InternalName,\n              webUrl: props.listInfo.webUrl\n            }).then( // Success\n            function (fieldInfo) {\n              // Save the field information\n              lookupFieldInfo = fieldInfo; // Set the lookup filter\n\n              lookupFieldInfo.lookupFilter = props.lookupFilter; // Update the multi property\n\n              controlProps.multi = lookupFieldInfo.multi; // Get the drop down information\n\n              gd_sprest_1.Helper.ListFormField.loadLookupData(lookupFieldInfo, 500).then( // Success\n              function (items) {\n                // Get the dropdown items\n                var ddlItems = getLookupItems(props.field, items, props.value); // See if this is not a required field and not a multi-select\n\n                if (!isRequired && !lookupFieldInfo.multi) {\n                  // Add a blank entry\n                  ddlItems = [{\n                    text: \"\",\n                    value: null\n                  }].concat(ddlItems);\n                } // Set the items\n\n\n                controlProps.items = ddlItems; // Clear the element\n\n                controlProps.el ? controlProps.el.innerHTML = \"\" : null; // Call the event\n\n                var returnVal = onControlRendering ? onControlRendering(controlProps) : null;\n\n                if (returnVal && returnVal.then) {\n                  // Wait for the promise to complete\n                  returnVal.then(function (props) {\n                    // Resolve the promise\n                    resolve(props || controlProps);\n                  });\n                } else {\n                  // Resolve the promise\n                  resolve(controlProps);\n                }\n              }, // Error\n              function (msg) {\n                // Set the error message\n                var errorMessage = \"Error loading the lookup field values for '\" + props.field.InternalName + \"'.\"; // Display an error message\n\n                core_1.Components.Alert({\n                  el: controlProps.el,\n                  content: errorMessage,\n                  type: core_1.Components.AlertTypes.Danger\n                }); // Call the error event\n\n                props.onError ? props.onError(errorMessage) : null;\n              });\n            }, // Error\n            function (msg) {\n              // Set the error message\n              var errorMessage = \"Error loading the field information for field '\" + props.field.InternalName + \"'.\"; // Display an error message\n\n              controlProps.el.innerHTML = \"\";\n              core_1.Components.Alert({\n                el: controlProps.el,\n                content: \"Error loading the lookup field information.\",\n                type: core_1.Components.AlertTypes.Danger\n              }); // Call the error event\n\n              props.onError ? props.onError(errorMessage) : null; // Reject the request\n\n              reject(msg);\n            });\n          });\n        };\n      }\n\n      break;\n    // Multi-Choice\n\n    case gd_sprest_1.SPTypes.FieldType.MultiChoice:\n      var isChoice = props.field.SchemaXml.indexOf('Format=\"RadioButtons\"') > 0 ? true : false; // Set the type\n\n      controlProps.type = isChoice ? core_1.Components.FormControlTypes.MultiSwitch : core_1.Components.FormControlTypes.MultiDropdown; // Update the value\n\n      controlProps.value = (props.value ? props.value.results : null) || props.value; // Set the items\n\n      controlProps.items = getChoiceItems(isChoice, props.field, props.value);\n      break;\n    // Note\n\n    case gd_sprest_1.SPTypes.FieldType.Note:\n      // Set the properties\n      controlProps.type = core_1.Components.FormControlTypes.TextArea;\n      controlProps.rows = props.field.NumberOfLines;\n      break;\n    // Number Field\n\n    case gd_sprest_1.SPTypes.FieldType.Number:\n      var numberField_1 = props.field;\n      var numberProps = controlProps; // Set the default value\n\n      numberProps.value = numberProps.value == null ? numberField_1.DefaultValue : numberProps.value; // See if this is a percentage\n\n      var isPercent = numberField_1.ShowAsPercentage;\n\n      if (isPercent == null) {\n        // Set the value from the schema (2013 environments)\n        isPercent = numberField_1.SchemaXml.toLowerCase().indexOf('percentage=\"true\"') > 0;\n      }\n\n      if (isPercent) {\n        // Set the type\n        numberProps.type = core_1.Components.FormControlTypes.Range; // Default the max\n\n        numberProps.max = numberField_1.MaximumValue == 1 || numberField_1.MaximumValue == Number.MAX_VALUE ? 100 : numberField_1.MaximumValue; // Set the min value\n\n        numberProps.min = numberField_1.MinimumValue == -1.7976931348623157e+308 ? 0 : numberField_1.MinimumValue; // Set the value\n\n        numberProps.value = numberProps.value == null || numberProps.value == Number.MIN_VALUE ? 0 : numberProps.value;\n        numberProps.value = numberProps.value * (numberProps.max == 100 && numberProps.value < 1 ? 100 : 1);\n      } // Else, see if the min/max values are defined\n      else if (typeof numberField_1.MaximumValue == \"number\" && numberField_1.MaximumValue != Number.MAX_VALUE && typeof numberField_1.MinimumValue == \"number\" && numberField_1.MinimumValue != Number.MIN_VALUE) {\n          // Update the properties to display a range\n          numberProps.type = core_1.Components.FormControlTypes.Range;\n          numberProps.max = numberField_1.MaximumValue;\n          numberProps.min = numberField_1.MinimumValue;\n          numberProps.value = typeof numberProps.value == \"number\" ? numberProps.value : numberProps.min; // Set validation\n\n          if (numberField_1.MinimumValue || numberField_1.MaximumValue) {\n            // Add validation\n            baseValidation = function baseValidation(control, result) {\n              // Ensure the value is a number\n              if (/^[0-9]*$/.test(result.value) == false) {\n                // Update the validation and return it\n                result.isValid = false;\n                result.invalidMessage = \"The value must be a number.\";\n                return result;\n              } // Validate the min value\n\n\n              if (numberField_1.MinimumValue && result.value < numberField_1.MinimumValue) {\n                // Update the validation and return it\n                result.isValid = false;\n                result.invalidMessage = \"The value must be greater than or equal to \" + numberField_1.MinimumValue;\n                return result;\n              } // Validate the max value\n\n\n              if (numberField_1.MaximumValue && result.value > numberField_1.MaximumValue) {\n                // Update the validation and return it\n                result.isValid = false;\n                result.invalidMessage = \"The value must be less than or equal to \" + numberField_1.MaximumValue;\n                return result;\n              } // Valid\n\n\n              result.isValid = true; // Return the result\n\n              return result;\n            };\n          }\n        } else {\n          // Set the type\n          numberProps.type = core_1.Components.FormControlTypes.TextField;\n        }\n\n      break;\n    // URL\n\n    case gd_sprest_1.SPTypes.FieldType.URL:\n      var desc_1 = null;\n      var url_1 = null;\n      var value_1 = props.value; // See if a value exists\n\n      if (props.value) {\n        // Update the value\n        controlProps.value = props.value.Url;\n      } // Set the render event\n\n\n      onControlRendered = controlProps.onControlRendered;\n\n      controlProps.onControlRendered = function (formControl) {\n        // Save the control\n        control = formControl; // Clear the element\n\n        control.el.innerHTML = \"\"; // Render the description\n\n        desc_1 = core_1.Components.FormControl({\n          className: \"mb-1\",\n          el: control.el,\n          placeholder: \"Description\",\n          type: core_1.Components.FormControlTypes.TextField,\n          value: value_1 ? value_1.Description : null\n        }); // Render the url\n\n        url_1 = core_1.Components.FormControl({\n          el: control.el,\n          placeholder: \"Url\",\n          type: core_1.Components.FormControlTypes.TextField,\n          value: value_1 ? value_1.Url : null\n        }); // Set the get value event\n\n        control.props.onGetValue = function (controlProps) {\n          // Return the value\n          return {\n            Description: desc_1.getValue(),\n            Url: url_1.getValue()\n          };\n        }; // Call the event\n\n\n        onControlRendered ? onControlRendered(formControl) : null;\n      }; // Set the validate event\n\n\n      baseValidation = function baseValidation(control, result) {\n        var descValid,\n            urlValid = false; // Get the form control elements\n\n        var elFormControl = control.el.querySelectorAll(\".form-control\");\n        var elDesc = elFormControl[0];\n        var elUrl = elFormControl[1]; // See if the description exists\n\n        if (elDesc) {\n          // Clear the classes\n          elDesc.classList.remove(\"is-invalid\");\n          elDesc.classList.remove(\"is-valid\"); // Set the flag\n\n          descValid = control.required ? desc_1.getValue() ? true : false : true; // Set the class\n\n          elDesc.classList.add(descValid ? \"is-valid\" : \"is-invalid\");\n        } // See if the url exists\n\n\n        if (elUrl) {\n          // Clear the classes\n          elUrl.classList.remove(\"is-invalid\");\n          elUrl.classList.remove(\"is-valid\"); // Set the flag\n\n          urlValid = control.required ? url_1.getValue() ? true : false : true; // Set the class\n\n          elUrl.classList.add(urlValid ? \"is-valid\" : \"is-invalid\");\n        } // Set the validation falg\n\n\n        result.isValid = descValid && urlValid; // Return the result\n\n        return result;\n      };\n\n      break;\n    // User\n\n    case gd_sprest_1.SPTypes.FieldType.User:\n      // Set the type\n      controlProps.type = isReadonly ? core_1.Components.FormControlTypes.Readonly : peoplePicker_1.PeoplePickerControlType; // Set the flag to allow multiple selections\n\n      controlProps.multi = props.field.AllowMultipleValues; // Set the rendered event\n\n      onControlRendered = controlProps.onControlRendered;\n\n      controlProps.onControlRendered = function (formControl) {\n        // Save the control\n        control = formControl; // See if this field is readonly and a value exists\n\n        if (props.value && isReadonly) {\n          // Set the class name\n          control.el.classList.add(\"form-control\");\n          control.el.style.backgroundColor = \"#e9ecef\"; // Override the html rendered\n\n          control.el.innerHTML = props.listInfo.fieldValuesAsHtml[props.field.InternalName];\n        } // Call the event\n\n\n        onControlRendered ? onControlRendered(formControl) : null;\n      };\n\n      break;\n  } // See if this is the document name field\n\n\n  if (props.field.InternalName == \"FileLeafRef\") {\n    // Set base validation\n    baseValidation = function baseValidation(control, result) {\n      var value = result.value; // Ensure the value exists\n\n      result.isValid = value ? true : false;\n\n      if (result.isValid) {\n        // See if it ends w/ a .\n        if (value[value.length - 1] == '.') {\n          // Update the validation\n          result.isValid = false;\n          result.invalidMessage = \"The value cannot end with a '.' character.\";\n        } // Else, see if it contains invalid characters\n        else if (/[\"\\#\\%\\*\\:\\<\\>\\?\\/\\\\\"]/.test(value) || value.indexOf('\\\\') >= 0) {\n            // Update the validation\n            result.isValid = false;\n            result.invalidMessage = \"The value cannot contain the following characters: \\\" % * : <, > ? / \\\\ |\";\n          }\n      } // Return the validation result\n\n\n      return result;\n    };\n  } // See if this is a taxonomy field\n\n\n  if (/^TaxonomyFieldType/.test(props.field.TypeAsString)) {\n    // Set the type\n    controlProps.type = core_1.Components.FormControlTypes.Dropdown; // Set a render event\n\n    onControlRendering = controlProps.onControlRendering;\n\n    controlProps.onControlRendering = function (newProps) {\n      // Update the control properties\n      controlProps = newProps; // Return a promise\n\n      return new Promise(function (resolve, reject) {\n        // Display a loading message\n        controlProps.loadingMessage = \"Loading the MMS Data\"; // Load the field information\n\n        gd_sprest_1.Helper.ListFormField.create({\n          field: props.field,\n          listName: props.listInfo.list.Title,\n          name: props.field.InternalName,\n          webUrl: props.listInfo.webUrl\n        }).then( // Success\n        function (fieldInfo) {\n          // Save the field information\n          mmsFieldInfo = fieldInfo; // Set the type\n\n          controlProps.type = mmsFieldInfo.multi ? core_1.Components.FormControlTypes.MultiDropdown : core_1.Components.FormControlTypes.Dropdown; // Load the value field\n\n          gd_sprest_1.Helper.ListFormField.loadMMSValueField(mmsFieldInfo).then( // Success\n          function (valueField) {\n            // Set the value field\n            mmsFieldInfo.valueField = valueField; // See if this is a new form\n\n            if (props.controlMode == gd_sprest_1.SPTypes.ControlMode.New) {\n              var fieldValue = []; // Get the default values\n\n              var values = (props.field.DefaultValue || \"\").split(\";#\");\n\n              for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(\"|\");\n\n                if (value.length == 2) {\n                  // Add the term id\n                  fieldValue.push(value[1]);\n                }\n              } // Update the field value\n\n\n              controlProps.value = fieldValue;\n            } else {\n              var fieldValue = props.value; // Get the field value\n\n              var values = fieldValue && fieldValue.results ? fieldValue.results : [fieldValue]; // Clear the field values\n\n              fieldValue = []; // Parse the values\n\n              for (var i = 0; i < values.length; i++) {\n                // Ensure the value exists\n                if (values[i] && values[i].TermGuid) {\n                  // Add the value\n                  fieldValue.push(values[i].TermGuid);\n                }\n              } // Update the field value\n\n\n              controlProps.value = fieldValue;\n            } // Load the terms\n\n\n            gd_sprest_1.Helper.ListFormField.loadMMSData(mmsFieldInfo).then( // Success\n            function (terms) {\n              // Get the items\n              var items = getMMSItems(gd_sprest_1.Helper.Taxonomy.toObject(terms), controlProps.value); // See if this is not a required field and not a multi-select\n\n              if (!isRequired && !mmsFieldInfo.multi) {\n                // Add a blank entry\n                items = [{\n                  text: \"\",\n                  value: null\n                }].concat(items);\n              } // Set the items\n\n\n              controlProps.items = items; // Clear the element\n\n              controlProps.el ? controlProps.el.innerHTML = \"\" : null; // Call the event\n\n              var returnVal = onControlRendering ? onControlRendering(controlProps) : null;\n\n              if (returnVal && returnVal.then) {\n                // Wait for the promise to complete\n                returnVal.then(function (props) {\n                  // Resolve the promise\n                  resolve(props || controlProps);\n                });\n              } else {\n                // Resolve the promise\n                resolve(controlProps);\n              }\n            }, // Error\n            function (msg) {\n              // Set the error message\n              var errorMessage = \"Error loading the mms terms for '\" + props.field.InternalName + \"'.\"; // Display an error message\n\n              core_1.Components.Alert({\n                el: controlProps.el,\n                content: errorMessage,\n                type: core_1.Components.AlertTypes.Danger\n              }); // Call the error event\n\n              props.onError ? props.onError(errorMessage) : null;\n            });\n          }, // Error\n          function (msg) {\n            // Set the error message\n            var errorMessage = \"Error loading the mms value field for '\" + props.field.InternalName + \"'.\"; // Display an error message\n\n            core_1.Components.Alert({\n              el: controlProps.el,\n              content: errorMessage,\n              type: core_1.Components.AlertTypes.Danger\n            }); // Call the error event\n\n            props.onError ? props.onError(errorMessage) : null; // Reject the request\n\n            reject(msg);\n          });\n        }, function (msg) {\n          // Display an error message\n          core_1.Components.Alert({\n            el: controlProps.el,\n            content: msg,\n            type: core_1.Components.AlertTypes.Danger\n          }); // Call the error event\n\n          props.onError ? props.onError(msg) : null;\n        });\n      });\n    };\n  } // Create the field\n\n\n  var field = {\n    control: control,\n    controlProps: controlProps,\n    getValue: function getValue() {\n      var fieldValue = {\n        name: props.field.InternalName,\n        value: control ? control.getValue() : null\n      }; // Update the field name/value, based on the type\n\n      switch (props.field.FieldTypeKind) {\n        // Boolean\n        case gd_sprest_1.SPTypes.FieldType.Boolean:\n          // Update the value\n          fieldValue.value = fieldValue.value ? true : false;\n          break;\n        // Choice\n\n        case gd_sprest_1.SPTypes.FieldType.Choice:\n          // See if this is a dropdown\n          if (controlProps.type == core_1.Components.FormControlTypes.Dropdown) {\n            // See if there is a value\n            var ddlValue = fieldValue.value;\n\n            if (ddlValue) {\n              // Update the field value\n              fieldValue.value = ddlValue.value || ddlValue.text;\n            }\n          } else {\n            // See if there is a value\n            var cbValue = fieldValue.value;\n\n            if (cbValue) {\n              // Update the field value\n              fieldValue.value = cbValue.label;\n            }\n          }\n\n          break;\n        // Number Field\n\n        case gd_sprest_1.SPTypes.FieldType.Currency:\n          // Ensure a value exists, otherwise null\n          fieldValue.value = fieldValue.value || null;\n          break;\n        // Date/Time\n\n        case gd_sprest_1.SPTypes.FieldType.DateTime:\n          // Ensure a value exists, otherwise null\n          fieldValue.value = fieldValue.value ? fieldValue.value.toISOString() : null;\n          break;\n        // Lookup\n\n        case gd_sprest_1.SPTypes.FieldType.Lookup:\n          // Append 'Id' to the field name\n          fieldValue.name += fieldValue.name.lastIndexOf(\"Id\") == fieldValue.name.length - 2 ? \"\" : \"Id\"; // See if this is a multi-value field\n\n          if (lookupFieldInfo.multi) {\n            var values_1 = fieldValue.value || [];\n            fieldValue.value = {\n              results: []\n            }; // Parse the values\n\n            for (var j = 0; j < values_1.length; j++) {\n              // Add the value\n              fieldValue.value.results.push(values_1[j].value || values_1[j].text);\n            }\n          } else {\n            // Update the field value\n            fieldValue.value = fieldValue.value ? fieldValue.value.value || fieldValue.value.text : null; // Ensure a value exists, otherwise null\n\n            fieldValue.value = fieldValue.value || null;\n          }\n\n          break;\n        // Multi-Choice\n\n        case gd_sprest_1.SPTypes.FieldType.MultiChoice:\n          var values = fieldValue.value || [];\n          fieldValue.value = {\n            results: []\n          }; // Parse the values\n\n          for (var j = 0; j < values.length; j++) {\n            // See if this is a dropdown\n            if (controlProps.type == core_1.Components.FormControlTypes.MultiDropdown) {\n              // See if there is a value\n              var ddlValue = values[j]; // Add the values\n\n              fieldValue.value.results.push(ddlValue.value || ddlValue.text);\n            } else {\n              // See if there is a value\n              var cbValue = values[j]; // Add the values\n\n              fieldValue.value.results.push(cbValue.label);\n            }\n          }\n\n          break;\n        // Number Field\n\n        case gd_sprest_1.SPTypes.FieldType.Number:\n          var numberField = props.field; // Ensure a field value exists\n\n          if (fieldValue.value) {\n            // See if this is a percentage\n            if (numberField.ShowAsPercentage) {\n              // Update the value\n              fieldValue.value = fieldValue.value / 100;\n            }\n          } else {\n            // Ensure the value is null\n            fieldValue.value = null;\n          }\n\n          break;\n        // URL\n\n        case gd_sprest_1.SPTypes.FieldType.URL:\n          // See if the field value exists\n          if (fieldValue.value && fieldValue.value.Url) {\n            // Set the url, and validate the format\n            var url = fieldValue.value.Url;\n\n            if (url && /^http/.test(url.toLowerCase()) == false) {\n              // Update the url, otherwise the request will fail\n              url = \"https://\" + url;\n            } // Add the metadata\n\n\n            fieldValue.value = {\n              __metadata: {\n                type: \"Types.SP.FieldUrlValue\"\n              },\n              Description: fieldValue.value.Description || \"\",\n              Url: url\n            };\n          } else {\n            // Ensure the value is null\n            fieldValue.value = null;\n          }\n\n          break;\n        // User\n\n        case gd_sprest_1.SPTypes.FieldType.User:\n          // Append 'Id' to the field name\n          fieldValue.name += fieldValue.name.lastIndexOf(\"Id\") == fieldValue.name.length - 2 ? \"\" : \"Id\"; // See if this is a multi-value field\n\n          if (props.field.AllowMultipleValues) {\n            var values_2 = fieldValue.value || []; // Default the value\n\n            fieldValue.value = {\n              results: []\n            }; // Parse the options\n\n            for (var j = 0; j < values_2.length; j++) {\n              var userValue = values_2[j]; // Add the field value\n\n              userValue.Id ? fieldValue.value.results.push(userValue.Id) : null;\n            }\n          } else {\n            var userValue = fieldValue.value ? fieldValue.value[0] : null; // Set the field value\n\n            fieldValue.value = userValue && userValue.Id ? userValue.Id : null;\n          }\n\n          break;\n        // MMS\n\n        default:\n          // See if this is a MMS field\n          if (mmsFieldInfo) {\n            // See if this is a multi field\n            if (mmsFieldInfo.multi) {\n              // Update the field name to the value field\n              fieldValue.name = mmsFieldInfo ? mmsFieldInfo.valueField.InternalName : fieldValue.name + \"_0\"; // Parse the field values\n\n              var fieldValues = fieldValue.value || [];\n              fieldValue.value = [];\n\n              for (var j = 0; j < fieldValues.length; j++) {\n                var termInfo = fieldValues[j]; // Add the field value\n\n                fieldValue.value.push(-1 + \";#\" + termInfo.text + \"|\" + termInfo.value);\n              } // Set the field value\n\n\n              fieldValue.value = fieldValue.value.join(\";#\");\n            } else {\n              // Update the value\n              fieldValue.value = fieldValue.value && fieldValue.value.value ? {\n                __metadata: {\n                  type: \"Types.SP.Taxonomy.TaxonomyFieldValue\"\n                },\n                Label: fieldValue.value.text,\n                TermGuid: fieldValue.value.value,\n                WssId: -1\n              } : null;\n            }\n          }\n\n          break;\n      } // Return the field value\n\n\n      return fieldValue;\n    },\n    isValid: function isValid() {\n      // See if there is base validation\n      if (baseValidation) {\n        // Validate the field\n        var baseResult = baseValidation(controlProps, {\n          isValid: false,\n          value: control.getValue()\n        }); // Validate the current control\n\n        var result = controlProps.onValidate ? controlProps.onValidate(controlProps, baseResult) : baseResult; // Return the flag\n\n        if (typeof result === \"boolean\") {\n          // Update the validation\n          baseResult.isValid = result;\n          control.updateValidation(control.el, baseResult); // Return the result\n\n          return result;\n        } // Update the validation\n\n\n        control.updateValidation(control.el, result); // Return the flag\n\n        return result.isValid;\n      } // Validate the control\n\n\n      return control ? control.isValid : false;\n    }\n  }; // Execute the assign to event\n\n  props.assignTo ? props.assignTo(field) : null; // Return the field\n\n  return field;\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/components/field.js?");

/***/ }),

/***/ "./build/components/index.js":
/*!***********************************!*\
  !*** ./build/components/index.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar datetime_1 = __webpack_require__(/*! ./datetime */ \"./build/components/datetime.js\");\n\nvar field_1 = __webpack_require__(/*! ./field */ \"./build/components/field.js\");\n\nvar listForm_1 = __webpack_require__(/*! ./listForm */ \"./build/components/listForm.js\");\n\nvar listFormDialog_1 = __webpack_require__(/*! ./listFormDialog */ \"./build/components/listFormDialog.js\");\n\nvar peoplePicker_1 = __webpack_require__(/*! ./peoplePicker */ \"./build/components/peoplePicker.js\"); // Extend the core components\n\n\nvar core_1 = __webpack_require__(/*! ./core */ \"./build/components/core.js\");\n\ncore_1.Components[\"DateTime\"] = datetime_1.DateTime;\ncore_1.Components[\"Field\"] = field_1.Field;\ncore_1.Components[\"ListForm\"] = listForm_1.ListForm;\ncore_1.Components[\"ListFormDialog\"] = listFormDialog_1.ListFormDialog;\ncore_1.Components[\"PeoplePicker\"] = peoplePicker_1.PeoplePicker; // Export the components\n\n__exportStar(__webpack_require__(/*! ./core */ \"./build/components/core.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/components/index.js?");

/***/ }),

/***/ "./build/components/listForm.js":
/*!**************************************!*\
  !*** ./build/components/listForm.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ListForm = void 0;\n\nvar core_1 = __webpack_require__(/*! ./core */ \"./build/components/core.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n\nvar datetime_1 = __webpack_require__(/*! ./datetime */ \"./build/components/datetime.js\");\n\nvar field_1 = __webpack_require__(/*! ./field */ \"./build/components/field.js\"); // Extend the list form\n\n\nexports.ListForm = gd_sprest_1.Helper.ListForm; // Method to get the fields to render\n\nvar getFieldsToRender = function getFieldsToRender(props) {\n  var fieldNames = []; // See if the \"include\" fields property is defined\n\n  if (props.includeFields) {\n    // Set the field names\n    fieldNames = props.includeFields;\n  } else {\n    // Parse the fields\n    for (var fieldName in props.info.fields) {\n      // See if the \"exclude\" property is set\n      if (props.excludeFields) {\n        var renderFl = true; // Parse the fields\n\n        for (var i = 0; i < props.excludeFields.length; i++) {\n          // See if we are excluding this field\n          if (props.excludeFields[i] == fieldName) {\n            // Set the flag\n            renderFl = false;\n            break;\n          }\n        } // Skip this field, if we are not rendering it\n\n\n        if (!renderFl) {\n          continue;\n        }\n      } // Add the field name\n\n\n      fieldNames.push(fieldName);\n    }\n  } // Return the field names\n\n\n  return fieldNames;\n}; // Method to render a display form for an item\n\n\nexports.ListForm.renderDisplayForm = function (props) {\n  var form = null; // Render a loading message\n\n  var progress = core_1.Components.Progress({\n    el: props.el,\n    isAnimated: true,\n    isStriped: true,\n    label: \"Loading the Form\",\n    size: 100\n  });\n  var hasUserField = false;\n  var mapper = {};\n  var rows = []; // See if we are rendering attachments\n\n  if (props.info.attachments) {\n    // Render the attachments\n    rows.push({\n      columns: [{\n        control: {\n          id: \"ListFormAttachments\",\n          label: \"Attachments\",\n          name: \"Attachments\",\n          onControlRendered: function onControlRendered(control) {\n            var items = []; // Parse the attachments\n\n            for (var i = 0; i < props.info.attachments.length; i++) {\n              var attachment = props.info.attachments[i]; // Add the item\n\n              items.push({\n                buttons: [{\n                  className: \"mr-1\",\n                  href: attachment.ServerRelativeUrl,\n                  isSmall: true,\n                  text: attachment.FileName\n                }]\n              });\n            } // Render a toolbar\n\n\n            core_1.Components.Toolbar({\n              el: control.el,\n              items: items\n            });\n          }\n        }\n      }]\n    });\n  } // Parse the fields to render\n\n\n  var fieldNames = getFieldsToRender(props);\n\n  for (var i = 0; i < fieldNames.length; i++) {\n    var fieldName = fieldNames[i];\n    var field = props.info.fields[fieldName];\n    var value = props.info.fieldValuesAsText[fieldName] || \"\";\n    var html = props.info.fieldValuesAsHtml[fieldName] || props.info.fieldValuesAsHtml[fieldName.replace(/\\_/g, \"_x005f_\")] || \"\"; // Ensure the field exists\n\n    if (field == null) {\n      // Log\n      console.error(\"[List Form] Field '\" + fieldName + \"' does not exist. Check the list or query.\");\n      continue;\n    } // See if we are hiding the field\n\n\n    if (field.SchemaXml.indexOf('ShowInDisplayForm=\"FALSE\"') > 0) {\n      continue;\n    } // See if this is a note field\n\n\n    if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.Note) {\n      // Update the html\n      html = html.replace(/\\r?\\n/g, '<br />');\n    } // Else, see if this is a user field\n    else if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.User) {\n        // Set the flag\n        hasUserField = true;\n      } // Else, see if this is a choice field\n      else if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.Choice || field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.MultiChoice) {\n          // Update the html\n          html = value;\n        } // Set the control\n\n\n    mapper[fieldName] = {\n      data: html,\n      description: field.Description,\n      isReadonly: true,\n      label: field.Title,\n      name: field.InternalName,\n      type: core_1.Components.FormControlTypes.TextField,\n      value: html\n    }; // Update the type, based on the field\n\n    switch (field.FieldTypeKind) {\n      case gd_sprest_1.SPTypes.FieldType.DateTime:\n        mapper[fieldName].type = datetime_1.DateTimeControlType;\n        break;\n\n      case gd_sprest_1.SPTypes.FieldType.Note:\n        mapper[fieldName].type = core_1.Components.FormControlTypes.TextArea;\n        break;\n    } // Detect html\n\n\n    if (/<*>/g.test(html)) {\n      // Update the control to be read-only\n      mapper[fieldName].type = core_1.Components.FormControlTypes.Readonly; // Set the rendered event\n\n      mapper[fieldName].onControlRendered = function (control) {\n        // Set the class name\n        control.el.classList.add(\"form-control\");\n        control.el.style.backgroundColor = \"#e9ecef\"; // Override the html rendered\n\n        control.el.innerHTML = control.props.data;\n      };\n    } // Add the row\n\n\n    rows.push({\n      columns: [{\n        control: mapper[fieldName]\n      }]\n    });\n  } // See if there is a template\n\n\n  if (props.template) {\n    var updateControl = function updateControl(refControl) {\n      // Get the control from the mapper\n      var control = refControl ? mapper[refControl.name] : null; // Ensure the controls exists\n\n      if (control && refControl) {\n        // Parse the control keys\n        for (var key in control) {\n          // Skip if a value is already defined\n          if (refControl[key]) {\n            continue;\n          } // Update the property\n\n\n          refControl[key] = control[key];\n        }\n      }\n    }; // Parse the template\n\n\n    for (var i = 0; i < props.template.length; i++) {\n      var row = props.template[i]; // Parse the columns if there are columns\n\n      var columns = row.columns || [];\n\n      for (var j = 0; j < columns.length; j++) {\n        var column = columns[j]; // Update the control\n\n        updateControl(column.control);\n      }\n    }\n  } // Remove the progress bar\n\n\n  progress.el.parentElement ? progress.el.parentElement.removeChild(progress.el) : null; // Counter for each control\n\n  var ctrlCounter = 0; // Render the form\n\n  form = core_1.Components.Form({\n    el: props.el,\n    className: props.className,\n    groupClassName: props.groupClassName,\n    rowClassName: props.rowClassName,\n    onControlRendered: function onControlRendered(control) {\n      // See if all of the controls have been rendered\n      if (++ctrlCounter == rows.length) {\n        // See if an event exists\n        if (props.onFormRendered) {\n          // Execute the form rendered event in another thread\n          setTimeout(function () {\n            props.onFormRendered(form);\n          }, 10);\n        }\n      } // Return the control rendered event\n\n\n      return props.onControlRendered ? props.onControlRendered(control, props.info.fields[control.props.name]) : null;\n    },\n    onControlRendering: function onControlRendering(control) {\n      return props.onControlRendering ? props.onControlRendering(control, props.info.fields[control.name]) : null;\n    },\n    rows: props.template || rows\n  }); // See if we are displaying a user field\n\n  if (hasUserField) {\n    // Enable the persona\n    window[\"ProcessImn\"]();\n  } // Execute the assign to event\n\n\n  props.assignTo ? props.assignTo(form) : null; // Return the form informaiton\n\n  return {\n    get el() {\n      return form ? form.el : null;\n    }\n\n  };\n}; // Render the edit form\n\n\nexports.ListForm.renderEditForm = function (props) {\n  var mapper = {};\n  var rows = [];\n  var value = {};\n  var attachments = {\n    \"delete\": [],\n    \"new\": []\n  }; // Method to add a refresh alert\n\n  var addRefreshLink = function addRefreshLink() {\n    // Ensure the link doesn't already exist\n    if (props.el.querySelector(\".refresh-btn\")) {\n      return;\n    } // Create the refresh button\n\n\n    var alert = core_1.Components.ButtonGroup({\n      className: \"refresh-btn\",\n      buttonType: core_1.Components.ButtonTypes.Danger,\n      buttons: [{\n        text: \"Refresh Form\",\n        onClick: function onClick() {\n          // Clear the element and reload the form\n          props.el.innerHTML = \"\"; // Render the form\n\n          exports.ListForm.renderEditForm(props);\n        }\n      }, {\n        text: \"Refresh Page\",\n        onClick: function onClick() {\n          // Refresh the page\n          document.location.href = document.location.href;\n        }\n      }]\n    }); // Add the element at the top\n\n    props.el.insertBefore(alert.el, props.el.children[0]);\n  }; // Method to remove the attachments\n\n\n  var removeAttachments = function removeAttachments(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure attachments exists\n      if (attachments[\"delete\"].length == 0) {\n        resolve();\n        return;\n      } // Get the web\n\n\n      props.info.list.ParentWeb().execute(function (web) {\n        // Parse the attachments\n        gd_sprest_1.Helper.Executor(attachments[\"delete\"], function (attachment) {\n          // Get the attachment file\n          web.getFileByServerRelativeUrl(attachment.ServerRelativeUrl)[\"delete\"]().execute(); // Parse the attachments\n\n          for (var i = 0; i < props.info.attachments.length; i++) {\n            // See if this is the target attachment\n            if (props.info.attachments[i].ServerRelativeUrl == attachment.ServerRelativeUrl) {\n              // Remove this item\n              props.info.attachments.splice(i, 1);\n              break;\n            }\n          }\n        }).then(function () {\n          // Wait for the files to be deleted\n          web.done(function () {\n            // Clear the attachments\n            attachments[\"delete\"] = []; // Resolve the promise\n\n            resolve();\n          });\n        });\n      });\n    });\n  }; // Method to save the attachments\n\n\n  var saveAttachments = function saveAttachments(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure attachments exists\n      if (attachments[\"new\"].length == 0) {\n        resolve();\n        return;\n      } // Parse the attachments\n\n\n      gd_sprest_1.Helper.Executor(attachments[\"new\"], function (attachment) {\n        // Get the item's attachments\n        props.info.list.Items(info.item.Id).AttachmentFiles() // Add the file\n        .add(attachment.name, attachment.data) // Execute the request\n        .execute(function (attachment) {\n          // Ensure attachments exist\n          info.attachments = info.attachments || []; // Append the attachment\n\n          info.attachments.push(attachment);\n        });\n      }).then(function () {\n        // Wait for the files to upload\n        props.info.list.done(function () {\n          // Clear the attachments\n          attachments[\"new\"] = []; // Resolve the promise\n\n          resolve();\n        });\n      });\n    });\n  }; // Render a loading message\n\n\n  var progress = core_1.Components.Progress({\n    el: props.el,\n    isAnimated: true,\n    isStriped: true,\n    label: \"Loading the Form\",\n    size: 100\n  }); // See if we are rendering attachments\n\n  if (props.info.attachments) {\n    // Render the attachments\n    rows.push({\n      columns: [{\n        control: {\n          id: \"ListFormAttachments\",\n          label: \"Attachments\",\n          name: \"Attachments\",\n          onControlRendered: function onControlRendered(control) {\n            // Render a toolbar\n            var toolbar = core_1.Components.Toolbar({\n              el: control.el,\n              items: [{\n                buttons: [{\n                  className: \"upload-btn mr-1\",\n                  isSmall: true,\n                  text: \"Upload\",\n                  type: core_1.Components.ButtonTypes.Secondary,\n                  onClick: function onClick(btn, ev) {\n                    var elUpload = ev.currentTarget; // Display an upload dialog\n\n                    gd_sprest_1.Helper.ListForm.showFileDialog().then(function (fileInfo) {\n                      // Get the buttons and remove any duplicates\n                      var buttons = elUpload.parentElement.querySelectorAll(\".btn\");\n\n                      for (var i = 0; i < buttons.length; i++) {\n                        var button = buttons[i]; // See if this is the associated button\n\n                        if (button.innerText.replace(/X$/, '') == fileInfo.name) {\n                          // Get the badge\n                          var badge = button.querySelector(\".badge\");\n\n                          if (badge) {\n                            // Remove the button\n                            badge.click();\n                          }\n\n                          break;\n                        }\n                      } // Save the file information\n\n\n                      attachments[\"new\"].push(fileInfo); // Append the attachment\n\n                      elUpload.parentElement.appendChild(core_1.Components.Popover({\n                        isDismissible: true,\n                        type: core_1.Components.PopoverTypes.Bottom,\n                        btnProps: {\n                          className: \"mr-1\",\n                          isSmall: true,\n                          text: fileInfo.name\n                        },\n                        options: {\n                          content: core_1.Components.Button({\n                            data: fileInfo,\n                            isSmall: true,\n                            text: \"Remove\",\n                            type: core_1.Components.ButtonTypes.Danger,\n                            onClick: function onClick(btn, ev) {\n                              var fileName = btn.data.name; // Parse the array\n\n                              for (var i = 0; i < attachments[\"new\"].length; i++) {\n                                // See if this is the target attachment\n                                if (attachments[\"new\"][i].name == fileName) {\n                                  // Remove this attachment\n                                  attachments[\"new\"].splice(i, 1);\n                                  break;\n                                }\n                              } // Get the files\n\n\n                              var files = btnGroup.querySelectorAll(\".btn[data-toggle='popover']\");\n\n                              for (var i = 0; i < files.length; i++) {\n                                var file = files[i]; // See if this is the target button\n\n                                if (file.innerText == fileName) {\n                                  // Remove this popover\n                                  file.parentElement.removeChild(file);\n                                  break;\n                                }\n                              }\n                            }\n                          }).el\n                        }\n                      }).el);\n                    });\n                  }\n                }]\n              }]\n            }); // Get the button group\n\n            var btnGroup = toolbar.el.querySelector(\".btn-group\");\n\n            if (btnGroup) {\n              // Parse the attachments\n              for (var i = 0; i < props.info.attachments.length; i++) {\n                var attachment = props.info.attachments[i]; // Add the attachment\n\n                btnGroup.appendChild(core_1.Components.Popover({\n                  isDismissible: true,\n                  type: core_1.Components.PopoverTypes.Bottom,\n                  btnProps: {\n                    className: \"mr-1\",\n                    isSmall: true,\n                    text: attachment.FileName\n                  },\n                  options: {\n                    content: core_1.Components.Button({\n                      data: attachment,\n                      isSmall: true,\n                      text: \"Remove\",\n                      type: core_1.Components.ButtonTypes.Danger,\n                      onClick: function onClick(btn, ev) {\n                        var attachment = btn.data; // Add this file for deletion\n\n                        attachments[\"delete\"].push(attachment); // Get the files\n\n                        var files = btnGroup.querySelectorAll(\".btn[data-toggle='popover']\");\n\n                        for (var i_1 = 0; i_1 < files.length; i_1++) {\n                          var file = files[i_1]; // See if this is the target button\n\n                          if (file.innerText == attachment.FileName) {\n                            // Remove this popover\n                            file.parentElement.removeChild(file);\n                            break;\n                          }\n                        }\n                      }\n                    }).el\n                  }\n                }).el);\n              }\n            }\n          }\n        }\n      }]\n    });\n  } // Parse the fields to render\n\n\n  var fieldNames = getFieldsToRender(props);\n\n  for (var i = 0; i < fieldNames.length; i++) {\n    var fieldName = fieldNames[i];\n    var field = props.info.fields[fieldName]; // Ensure the field exists\n\n    if (field == null) {\n      // Log\n      console.error(\"[List Form] Field '\" + fieldName + \"' does not exist. Check the list or query.\");\n      continue;\n    } // See if the item exists\n\n\n    value[fieldName] = null;\n\n    if (props.info.item) {\n      // Set the value\n      value[fieldName] = props.info.item[fieldName]; // See if this is a lookup or user field\n\n      if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.Lookup || field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.User) {\n        // Update the value\n        value[fieldName] = value[fieldName + \"Id\"] || (value[fieldName] ? value[fieldName].Id : null) || value[fieldName];\n      } // See if this is a file leaf ref\n\n\n      if (fieldName == \"FileLeafRef\") {\n        // Update the value\n        value[fieldName] = value[fieldName] || props.info.item.Title;\n      }\n    } // Determine the control mode\n\n\n    var controlMode = props.controlMode || (props.info.item ? gd_sprest_1.SPTypes.ControlMode.Edit : gd_sprest_1.SPTypes.ControlMode.New); // See if this is an edit form and we are hiding this field\n\n    if (controlMode == gd_sprest_1.SPTypes.ControlMode.Edit && field.SchemaXml.indexOf('ShowInEditForm=\"FALSE\"') > 0) {\n      continue;\n    } // See if this is a new form and we are hiding this field\n\n\n    if (controlMode == gd_sprest_1.SPTypes.ControlMode.New && field.SchemaXml.indexOf('ShowInNewForm=\"FALSE\"') > 0) {\n      continue;\n    } // See if thi sis a new form and this is an associated lookup field\n\n\n    if (controlMode == gd_sprest_1.SPTypes.ControlMode.New && field.IsDependentLookup) {\n      continue;\n    } // See if this is a display form and we are hiding this field\n\n\n    if (controlMode == gd_sprest_1.SPTypes.ControlMode.Display && field.SchemaXml.indexOf('ShowInDisplayForm=\"FALSE\"') > 0) {\n      continue;\n    } // See if this is a read-only field\n\n\n    if (field.ReadOnlyField) {\n      // Do not render in the new form\n      if (props.controlMode == gd_sprest_1.SPTypes.ControlMode.New) {\n        continue;\n      }\n    } // Do not render a hidden taxonomy field\n\n\n    if (field.Hidden && field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.Note && /_0$/.test(field.Title)) {\n      continue;\n    } // See if this is an invalid field type\n\n\n    if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.Invalid) {\n      // Ensure it's not a taxonomy field\n      if (!/^TaxonomyFieldType/.test(field.TypeAsString)) {\n        continue;\n      }\n    } // Else, see if this is a calculated column\n    else if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.Calculated) {\n        // Do not render in the new/edit forms\n        if (props.controlMode != gd_sprest_1.SPTypes.ControlMode.Display) {\n          continue;\n        }\n      } // See if this is a lookup field\n\n\n    var lookupFilter = null;\n\n    if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.Lookup) {\n      // Call the filter event\n      lookupFilter = props.onFilterLookupField ? props.onFilterLookupField(field) : null;\n    } // Create the control\n\n\n    var fieldControl = field_1.Field({\n      controlMode: props.controlMode,\n      field: field,\n      listInfo: props.info,\n      lookupFilter: lookupFilter,\n      value: value[fieldName],\n      onControlRendered: function onControlRendered(control, field) {\n        // Update the mapper\n        mapper[field.InternalName].control = control;\n      },\n      onValidate: props.onValidate,\n      onError: function onError(msg) {\n        // Add the refresh link\n        addRefreshLink(); // Call the event\n\n        props.onError ? props.onError(msg) : null;\n      }\n    }); // Update the mapper\n\n    mapper[fieldName] = fieldControl; // Add the row\n\n    rows.push({\n      columns: [{\n        control: fieldControl.controlProps\n      }]\n    });\n  } // See if there is a template\n\n\n  if (props.template) {\n    var updateControl = function updateControl(refControl) {\n      // Get the control from the mapper\n      var control = refControl && mapper[refControl.name] ? mapper[refControl.name].controlProps : null; // Ensure the controls exists\n\n      if (control && refControl) {\n        // Parse the control keys\n        for (var key in control) {\n          // Skip if a value is already defined\n          if (refControl[key]) {\n            continue;\n          } // Update the property\n\n\n          refControl[key] = control[key];\n        }\n      }\n    }; // Parse the template\n\n\n    for (var i = 0; i < props.template.length; i++) {\n      var row = props.template[i]; // Parse the columns if there are columns\n\n      var columns = row.columns || [];\n\n      for (var j = 0; j < columns.length; j++) {\n        var column = columns[j]; // Update the control\n\n        updateControl(column.control);\n      }\n    }\n  } // Remove the progress bar\n\n\n  progress.el.parentElement ? progress.el.parentElement.removeChild(progress.el) : null; // Counter for each control\n\n  var ctrlCounter = 0; // Render the form\n\n  var form = core_1.Components.Form({\n    el: props.el,\n    className: props.className,\n    groupClassName: props.groupClassName,\n    rowClassName: props.rowClassName,\n    onControlRendered: function onControlRendered(control) {\n      // See if all of the controls have been rendered\n      if (++ctrlCounter == rows.length) {\n        // See if an event exists\n        if (props.onFormRendered) {\n          // Execute the form rendered event in another thread\n          setTimeout(function () {\n            props.onFormRendered(form);\n          }, 10);\n        }\n      } // Return the event\n\n\n      return props.onControlRendered ? props.onControlRendered(control, props.info.fields[control.props.name]) : null;\n    },\n    onControlRendering: function onControlRendering(control) {\n      var updateReadOnly = function updateReadOnly(control) {\n        // See if this control is readonly\n        if (control.isReadonly) {\n          var html_1 = props.info.fieldValuesAsHtml && props.info.fieldValuesAsHtml[field.InternalName] || \"\"; // Update the control properties\n\n          control.type = core_1.Components.FormControlTypes.Readonly; // Detect html\n\n          if (/<*>/g.test(html_1)) {\n            // Update the control properties\n            control.data = html_1;\n          } // Set the rendered event\n\n\n          control.onControlRendered = function (control) {\n            // Set the class name\n            control.el.classList.add(\"form-control\");\n            control.el.style.backgroundColor = \"#e9ecef\"; // Override the html rendered\n\n            control.el.innerHTML = html_1 || control.props.value;\n          }; // See if this is a user field\n\n\n          if (field.FieldTypeKind == gd_sprest_1.SPTypes.FieldType.User && window[\"ProcessImn\"]) {\n            // Enable the persona\n            window[\"ProcessImn\"]();\n          }\n        }\n      }; // Execute the rendering event\n\n\n      var field = props.info.fields[control.name];\n      var returnVal = props.onControlRendering ? props.onControlRendering(control, field) : null;\n\n      if (returnVal && returnVal.then) {\n        // Wait for the event to complete\n        returnVal.then(function (ctrlProps) {\n          // Update the properties\n          updateReadOnly(ctrlProps || control);\n        });\n      } else {\n        // Update the properties\n        updateReadOnly(control);\n      }\n    },\n    rows: props.template || rows,\n    value: value\n  }); // Method to get the values\n\n  var getValues = function getValues() {\n    var values = {}; // Parse the fields\n\n    for (var fieldName in props.info.fields) {\n      // Get the form field and skip readonly fields\n      var formField = mapper[fieldName];\n\n      if (formField == null || formField.controlProps.isReadonly) {\n        continue;\n      } // Get the field value\n\n\n      var fieldValue = formField.getValue(); // Set the item value\n\n      values[fieldValue.name] = fieldValue.value; // See if this is the file leaf ref\n\n      if (fieldValue.name == \"FileLeafRef\") {\n        // Update the 'Title'\n        values[\"Title\"] = values[\"Title\"] || values[fieldValue.name];\n      }\n    } // Return the form values\n\n\n    return values;\n  }; // Create the form object\n\n\n  var formObj = {\n    appendControls: function appendControls(controls) {\n      form.appendControls(controls);\n    },\n    appendRows: function appendRows(rows) {\n      form.appendRows(rows);\n    },\n    el: form.el,\n    getControl: function getControl(fieldName) {\n      return mapper[fieldName] ? mapper[fieldName].control : null;\n    },\n    getValues: getValues,\n    isValid: function isValid() {\n      var isValid = true; // Parse the fields\n\n      for (var fieldName in props.info.fields) {\n        // Skip readonly fields\n        var formField = mapper[fieldName];\n\n        if (formField == null || formField.controlProps.isReadonly) {\n          continue;\n        } // Validate the form field and update the status flag\n\n\n        var controlIsValid = formField.isValid();\n        isValid = isValid && controlIsValid;\n      } // Return the flag\n\n\n      return isValid;\n    },\n    save: function save() {\n      var onSaving = function onSaving(values) {\n        return new Promise(function (resolve) {\n          // See if a save event exists\n          var returnVal = props.onSaving ? props.onSaving(values) : null;\n\n          if (returnVal && returnVal.then) {\n            // Wait for the promise to complete\n            returnVal.then(function (newValues) {\n              // Resolve the promise\n              resolve(newValues || values);\n            });\n          } else {\n            // Resolve the promise\n            resolve(values);\n          }\n        });\n      }; // Return a promise\n\n\n      return new Promise(function (resolve, reject) {\n        // Call the saving event\n        onSaving(getValues()).then(function (values) {\n          // Update the item\n          exports.ListForm.saveItem(props.info, values).then(function (info) {\n            // Remove the attachments\n            removeAttachments(info).then(function () {\n              // Save the attachments\n              saveAttachments(info).then(function () {\n                // Update the info\n                props.info = info; // Resolve the promise\n\n                resolve(props.info.item);\n              });\n            });\n          }, reject);\n        });\n      });\n    }\n  }; // Execute the assign to event\n\n  props.assignTo ? props.assignTo(formObj) : null; // Return the form\n\n  return formObj;\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/components/listForm.js?");

/***/ }),

/***/ "./build/components/listFormDialog.js":
/*!********************************************!*\
  !*** ./build/components/listFormDialog.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ListFormDialog = void 0;\n\nvar core_1 = __webpack_require__(/*! ./core */ \"./build/components/core.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n\nvar listForm_1 = __webpack_require__(/*! ./listForm */ \"./build/components/listForm.js\");\n/**\r\n * List Form Dialog\r\n */\n\n\nexports.ListFormDialog = function (props) {\n  var form = null;\n  var modalProps = props.modalProps || {}; // Method to save the form\n\n  var saveForm = function saveForm() {\n    // Hide the form\n    form.el.classList.add(\"d-none\"); // Hide the footer\n\n    elFooter.classList.add(\"d-none\"); // Add a progress\n\n    var progress = core_1.Components.Progress({\n      el: form.el.parentElement,\n      isAnimated: true,\n      isStriped: true,\n      size: 100\n    }).el; // Return a promise\n\n    return new Promise(function (resolve, reject) {\n      // Ensure the form is valid\n      if (!form.isValid()) {\n        // Remove the progress\n        form.el.parentElement.removeChild(progress); // Show the form\n\n        form.el.classList.remove(\"d-none\"); // Show the footer\n\n        elFooter.classList.remove(\"d-none\"); // Reject the promise\n\n        reject(\"Form is invalid\"); // Return\n\n        return;\n      } // Save the form\n\n\n      form.save().then(function (item) {\n        // Remove the progress\n        form.el.parentElement.removeChild(progress); // Show the form\n\n        form.el.classList.remove(\"d-none\"); // Show the footer\n\n        elFooter.classList.remove(\"d-none\"); // Call the save event\n\n        props.onSaved ? props.onSaved(item) : null; // Resolve the promise\n\n        resolve(item);\n      }, reject);\n    });\n  }; // Update the properties\n\n\n  modalProps.el = modalProps.el || props.el;\n  modalProps.title = modalProps.title || props.listName;\n  modalProps.body = core_1.Components.Progress({\n    isAnimated: true,\n    isStriped: true,\n    label: \"Loading the Form...\",\n    size: 100\n  }).el.outerHTML; // Set the on render event\n\n  modalProps.onRenderBody = function (el) {\n    // Create an instance of the list form\n    listForm_1.ListForm.create({\n      excludeFields: props.excludeFields,\n      fields: props.fields,\n      item: props.item,\n      itemId: props.itemId,\n      listName: props.listName,\n      loadAttachments: props.loadAttachments,\n      query: props.query,\n      webUrl: props.webUrl\n    }).then( // Success\n    function (info) {\n      // Clear the modal body\n      el.innerHTML = \"\"; // Ensure the item exists, otherwise default to the new form\n\n      var controlMode = props.item || props.itemId > 0 ? props.controlMode : gd_sprest_1.SPTypes.ControlMode.New; // Check the control mode\n\n      switch (controlMode) {\n        // Edit Form\n        case gd_sprest_1.SPTypes.ControlMode.Edit:\n        case gd_sprest_1.SPTypes.ControlMode.New:\n          // Render the list form\n          form = listForm_1.ListForm.renderEditForm({\n            controlMode: props.controlMode,\n            el: el,\n            onControlRendered: props.onControlRendered,\n            onControlRendering: props.onControlRendering,\n            onSaving: props.onSaving,\n            info: info,\n            template: props.template\n          });\n          break;\n        // Default - Display Form\n\n        default:\n          // Render the list form\n          listForm_1.ListForm.renderDisplayForm({\n            el: el,\n            info: info,\n            onControlRendered: props.onControlRendered,\n            onControlRendering: props.onControlRendering,\n            template: props.template\n          });\n          break;\n      } // Display the actions\n\n\n      elFooter.classList.remove(\"d-none\");\n    }, // Error\n    function () {\n      // Log the error\n      console.error(\"Error loading the list form information.\"); // Clear the modal\n\n      el.innerHTML = \"\"; // Display an error message\n\n      core_1.Components.Alert({\n        el: el,\n        content: \"Error loading the list form information.\",\n        type: core_1.Components.AlertTypes.Danger\n      });\n    });\n  }; // Set the render footer event\n\n\n  modalProps.onRenderFooter = function (el) {\n    // Parse the actions\n    var actions = props.actions || null;\n\n    if (actions == null) {\n      // Default the actions based on the control mode\n      switch (props.controlMode) {\n        // Edit\n        case gd_sprest_1.SPTypes.ControlMode.Edit:\n          // Set the actions\n          actions = {\n            spacing: 3,\n            items: [{\n              buttons: [{\n                text: \"Close\",\n                onClick: function onClick() {\n                  dialog.hide();\n                }\n              }]\n            }, {\n              buttons: [{\n                text: \"Update\",\n                onClick: saveForm\n              }]\n            }]\n          };\n          break;\n        // New\n\n        case gd_sprest_1.SPTypes.ControlMode.New:\n          // Set the actions\n          actions = {\n            spacing: 3,\n            items: [{\n              buttons: [{\n                text: \"Close\",\n                onClick: function onClick() {\n                  dialog.hide();\n                }\n              }]\n            }, {\n              buttons: [{\n                text: \"Save\",\n                onClick: saveForm\n              }]\n            }]\n          };\n          break;\n        // Default - Display\n\n        default:\n          actions = {\n            spacing: 3,\n            items: [{\n              buttons: [{\n                text: \"Close\",\n                onClick: function onClick() {\n                  dialog.hide();\n                }\n              }]\n            }]\n          };\n          break;\n      }\n    } // Set the element\n\n\n    actions.el = el; // Render the toolbar\n\n    core_1.Components.Toolbar(actions);\n  }; // Create the dialog\n\n\n  var dialog = core_1.Components.Modal(modalProps); // Hide the actions\n\n  var elFooter = dialog.el.querySelector(\".modal-footer\");\n  elFooter.classList.add(\"d-none\"); // Add the class name\n\n  dialog.el.classList.add(\"listformdialog\"); // Set the save method\n\n  form == null ? null : dialog.saveForm = saveForm; // See if we are displaying it by default\n\n  if (props.visible) {\n    // Display the dialog\n    dialog.show();\n  } // Execute the assign to event\n\n\n  props.assignTo ? props.assignTo(dialog) : null; // Return the dialog\n\n  return dialog;\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/components/listFormDialog.js?");

/***/ }),

/***/ "./build/components/peoplePicker.js":
/*!******************************************!*\
  !*** ./build/components/peoplePicker.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PeoplePickerControlType = exports.PeoplePicker = void 0;\n\nvar core_1 = __webpack_require__(/*! ./core */ \"./build/components/core.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n/**\r\n * People Picker\r\n */\n\n\nexports.PeoplePicker = function (props) {\n  var _filterText = null;\n  var _users = []; // Method to add a user\n\n  var addUser = function addUser(userInfo) {\n    var user = typeof userInfo === \"string\" ? JSON.parse(userInfo) : userInfo; // Adds the button\n\n    var addButton = function addButton(userInfo) {\n      // See if the picker is read only\n      if (props.readOnly) {\n        // Render a button\n        core_1.Components.Button({\n          el: elSelectedUsers,\n          className: \"mr-1 mb-1\",\n          isSmall: true,\n          text: userInfo.Title\n        });\n      } else {\n        // Render a button\n        var btn_1 = core_1.Components.Button({\n          data: userInfo,\n          el: elSelectedUsers,\n          className: \"mr-1 mb-1\",\n          isSmall: true,\n          text: userInfo.Title,\n          badge: {\n            className: \"ml-2\",\n            content: \"&times;\",\n            isPill: true,\n            type: core_1.Components.BadgeTypes.Light,\n            onClick: function onClick() {\n              // Remove the button\n              elSelectedUsers.removeChild(btn_1.el); // Call the event\n\n              props.onChange ? props.onChange(obj.getValue()) : null;\n            }\n          }\n        }); // Set the data attribute\n\n        btn_1.el.setAttribute(\"data-user\", JSON.stringify(userInfo.stringify()));\n      } // Call the event\n\n\n      props.onChange ? props.onChange(obj.getValue()) : null;\n    }; // See if we are allowing multiple users\n\n\n    var allowMultple = typeof props.multi == \"boolean\" ? props.multi : false;\n\n    if (!allowMultple) {\n      // Remove existing users\n      while (elSelectedUsers.firstChild) {\n        elSelectedUsers.removeChild(elSelectedUsers.firstChild);\n      }\n    } // Ensure this is a user object\n\n\n    if (user.EntityData) {\n      // Ensure the group or user id is set\n      if (user.EntityData.SPGroupID) {\n        // Find the user by id\n        gd_sprest_1.Web().SiteGroups(parseInt(user.EntityData.SPGroupID)).execute(function (group) {\n          // Add the button\n          addButton(group);\n        });\n      } else if (user.EntityData.SPUserID) {\n        // Find the user by id\n        gd_sprest_1.Web().getUserById(parseInt(user.EntityData.SPUserID)).execute(function (userInfo) {\n          // Add the button\n          addButton(userInfo);\n        });\n      } else {\n        // Find the user\n        gd_sprest_1.Web().ensureUser(user.Key).execute(function (userInfo) {\n          // Add the button\n          addButton(userInfo);\n        }, addButton);\n      }\n    } else {\n      // Find the user by id\n      gd_sprest_1.Web().getUserById(user).execute(function (userInfo) {\n        // Add the button\n        addButton(userInfo);\n      });\n    }\n  }; // Method to search for the users\n\n\n  var searchUsers = function searchUsers(el, searchText, searchAll) {\n    if (searchAll === void 0) {\n      searchAll = true;\n    } // Ensure 3 characters exist\n\n\n    if (_filterText.length > 2) {\n      // Search for the user\n      gd_sprest_1.PeoplePicker().clientPeoplePickerSearchUser({\n        MaximumEntitySuggestions: props.maxResults || 25,\n        PrincipalSource: searchAll ? gd_sprest_1.SPTypes.PrincipalSources.All : gd_sprest_1.SPTypes.PrincipalSources.UserInfoList,\n        PrincipalType: props.allowGroups ? gd_sprest_1.SPTypes.PrincipalTypes.All : gd_sprest_1.SPTypes.PrincipalTypes.User,\n        QueryString: _filterText\n      }).execute(function (search) {\n        // Ensure the search text matches\n        if (_filterText != searchText) {\n          return;\n        } // Clear the users results\n\n\n        _users = []; // Set the menu header\n\n        el.innerHTML = '<h6 class=\"dropdown-header\">Search Results for \"' + searchText + '\"</h6>';\n        el.innerHTML += '<div class=\"dropdown-divider\"></div>'; // See if no users were found\n\n        if (search.ClientPeoplePickerSearchUser.length == 0) {\n          // Add a message\n          el.innerHTML += '<h6 class=\"dropdown-header\">No results were found...</h6>';\n          return;\n        } // Parse the users\n\n\n        for (var i = 0; i < search.ClientPeoplePickerSearchUser.length; i++) {\n          var exists = false;\n          var user = search.ClientPeoplePickerSearchUser[i]; // Save the user\n\n          _users.push(user); // Parse the selected users\n\n\n          for (var j = 0; j < elSelectedUsers.children.length; j++) {\n            var userInfo = JSON.parse(elSelectedUsers.children[j].getAttribute(\"data-user\")); // See if this user is already selected\n\n            if (exists = user.Key == userInfo.Key) {\n              break;\n            }\n          } // Ensure the user isn't already selected\n\n\n          if (exists) {\n            continue;\n          } // Create the item\n\n\n          var elItem = document.createElement(\"a\");\n          elItem.className = \"dropdown-item\";\n          elItem.href = \"#\";\n          elItem.innerHTML = user.DisplayText;\n          elItem.setAttribute(\"data-user\", JSON.stringify(user));\n          el.appendChild(elItem); // Set the click event\n\n          elItem.addEventListener(\"click\", function (ev) {\n            var userInfo = ev.currentTarget.getAttribute(\"data-user\"); // Add the user\n\n            addUser(userInfo); // Hide the menu\n\n            elMenu.classList.remove(\"show\"); // Clear the search text\n\n            elTextbox.querySelector(\"input\").value = \"\";\n          });\n        }\n      });\n    }\n  }; // Method to set the value\n\n\n  var setValue = function setValue(selectedUsers) {\n    if (selectedUsers === void 0) {\n      selectedUsers = [];\n    } // Clear the selected users\n\n\n    elSelectedUsers.innerHTML = \"\"; // Parse the selected users\n\n    for (var i = 0; i < selectedUsers.length; i++) {\n      // Add the user\n      addUser(selectedUsers[i]);\n    }\n  }; // Create the people picker\n\n\n  var elPeoplePicker = document.createElement(\"div\");\n  elPeoplePicker.className = \"people-picker\"; // Create the menu\n\n  var elMenu = document.createElement(\"div\");\n  elMenu.className = \"dropdown-menu\";\n  elMenu.style.position = \"relative\"; // Add the selected users\n\n  var elSelectedUsers = document.createElement(\"div\");\n  elSelectedUsers.style.position = \"relative\";\n  elPeoplePicker.appendChild(elSelectedUsers); // Create the textbox\n\n  var elTextbox = core_1.Components.InputGroup({\n    placeholder: props.placeholder == null ? \"Search\" : props.placeholder,\n    onChange: function onChange(searchText) {\n      // See if a value exists\n      if (searchText) {\n        // Set the filter text\n        _filterText = searchText; // Set the header\n\n        elMenu.innerHTML = ['<h6 class=\"dropdown-header\">', _filterText.length > 2 ? 'Searching for \"' + _filterText + '\"' : 'Search requires 3+ characters', '</h6>'].join('\\n'); // Show the dropdown\n\n        if (!elMenu.classList.contains(\"show\")) {\n          elMenu.classList.add(\"show\");\n        } // Wait 500ms before searching\n\n\n        setTimeout(function () {\n          // Ensure the filters match\n          if (searchText == _filterText) {\n            // Search for the users\n            searchUsers(elMenu, searchText, props.searchLocal ? false : true);\n          }\n        }, 500);\n      } else {\n        // Hide the dropdown\n        if (elMenu.classList.contains(\"show\")) {\n          elMenu.classList.remove(\"show\");\n        }\n      }\n    }\n  }).el;\n  props.readOnly ? elTextbox.classList.add(\"d-none\") : null;\n  elPeoplePicker.appendChild(elTextbox); // Add the dropdown menu\n\n  elPeoplePicker.appendChild(elMenu); // Set the value and ensure it's a \n\n  var value = props.value || [];\n\n  if (_typeof(props.value) != \"object\") {\n    // Set the default selected users\n    setValue([value]);\n  } else {\n    // See if this is a user object\n    var userValue = value;\n\n    if (userValue.EntityData) {\n      // Set the value\n      value = userValue.EntityData.SPGroupID || userValue.EntityData.SPUserID; // Set the default selected users\n\n      setValue([value]);\n    } // Else, see if the results exist\n    else if (value.results) {\n        var userIds = []; // Parse the results\n\n        for (var i = 0; i < value.results.length; i++) {\n          // Add the user id\n          userIds.push(value.results[i].Id);\n        } // Set the default selected users\n\n\n        setValue(userIds);\n      } else {\n        // Set the default selected users\n        setValue(value);\n      }\n  } // Create the element\n\n\n  var el = document.createElement(\"div\");\n  el.appendChild(elPeoplePicker); // See if we are rendering it to an element\n\n  if (props.el) {\n    // Ensure the parent element exists\n    if (props.el.parentElement && props.el.parentElement.classList) {\n      // Set the bootstrap class\n      props.el.parentElement.classList.contains(\"bs\") ? null : props.el.parentElement.classList.add(\"bs\");\n    } // Append the elements\n\n\n    while (el.children.length > 0) {\n      props.el.appendChild(el.children[0]);\n    } // Update the element\n\n\n    el = props.el;\n  } else {\n    // Set the bootstrap class\n    el.classList.add(\"bs\");\n  } // Create the object\n\n\n  var obj = {\n    el: elPeoplePicker,\n    getValue: function getValue() {\n      var selectedUsers = []; // Parse the selected users\n\n      for (var i = 0; i < elSelectedUsers.children.length; i++) {\n        var userInfo = JSON.parse(elSelectedUsers.children[i].getAttribute(\"data-user\"));\n        var user = gd_sprest_1.Helper.parse(userInfo); // Add this user\n\n        selectedUsers.push(user);\n      } // Return the value\n\n\n      return selectedUsers;\n    },\n    setValue: setValue\n  }; // Execute the assign to event\n\n  props.assignTo ? props.assignTo(obj) : null; // Return the people picker object\n\n  return obj;\n}; // Extend the form controls\n\n\nexports.PeoplePickerControlType = 101;\ncore_1.Components.FormControlTypes[\"PeoplePicker\"] = exports.PeoplePickerControlType;\ncore_1.Components.CustomControls.registerType(exports.PeoplePickerControlType, function (props) {\n  var picker = null; // Set the created method\n\n  var onRendered = props.onControlRendered;\n\n  props.onControlRendered = function (ctrl) {\n    // Render a people picker\n    picker = exports.PeoplePicker({\n      allowGroups: props.allowGroups,\n      className: props.className,\n      el: ctrl.el,\n      label: props.label,\n      maxResults: props.maxResults,\n      multi: props.multi,\n      placeholder: props.placeholder,\n      readOnly: props.isReadonly,\n      searchLocal: props.searchLocal,\n      value: props.value\n    }); // See if the label exists\n\n    var elLabel = ctrl[\"_elLabel\"];\n\n    if (elLabel) {\n      // Set the id and aria properties\n      elLabel ? elLabel.id = (props.id || props.name) + \"_label\" : null;\n      picker.el.querySelector(\"input\").setAttribute(\"aria-labelledby\", elLabel.id);\n    } // Set the control\n\n\n    ctrl.setControl(picker); // Call the custom render event\n\n    onRendered ? onRendered(ctrl) : null;\n  }; // Register a people picker\n\n\n  props.onGetValue = function (ctrl) {\n    // Return the value\n    return picker ? picker.getValue() : ctrl.value;\n  };\n});\n\n//# sourceURL=webpack://gd-sprest-bs/./build/components/peoplePicker.js?");

/***/ }),

/***/ "./build/icons/generate.js":
/*!*********************************!*\
  !*** ./build/icons/generate.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generateIcon = void 0; // Generates the html for an icon\n\nexports.generateIcon = function (svg, height, width) {\n  if (height === void 0) {\n    height = 32;\n  }\n\n  if (width === void 0) {\n    width = 32;\n  } // Get the icon element\n\n\n  var elDiv = document.createElement(\"div\");\n  elDiv.innerHTML = svg;\n  var icon = elDiv.firstChild;\n\n  if (icon) {\n    // Set the height/width\n    icon.setAttribute(\"height\", (height ? height : 32).toString());\n    icon.setAttribute(\"width\", (width ? width : 32).toString()); // Update the styling\n\n    icon.style.pointerEvents = \"none\"; // Support for IE\n\n    icon.setAttribute(\"focusable\", \"false\");\n  } // Return the icon\n\n\n  return icon;\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/icons/generate.js?");

/***/ }),

/***/ "./build/icons/svgs/x.js":
/*!*******************************!*\
  !*** ./build/icons/svgs/x.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.x = void 0;\n\nvar generate_1 = __webpack_require__(/*! ../generate */ \"./build/icons/generate.js\");\n\nfunction x(height, width) {\n  return generate_1.generateIcon(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-x\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\\\"/>\\n</svg>\", height, width);\n}\n\nexports.x = x;\n\n//# sourceURL=webpack://gd-sprest-bs/./build/icons/svgs/x.js?");

/***/ }),

/***/ "./build/index.js":
/*!************************!*\
  !*** ./build/index.js ***!
  \************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WebParts = void 0; // The SharePoint library\n\n__exportStar(__webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\"), exports); // SharePoint bootstrap components/webparts\n\n\nvar components_1 = __webpack_require__(/*! ./components */ \"./build/components/index.js\");\n\n__exportStar(__webpack_require__(/*! ./components */ \"./build/components/index.js\"), exports); // WebParts\n\n\nvar WebParts = __webpack_require__(/*! ./webparts */ \"./build/webparts/index.js\");\n\nexports.WebParts = WebParts; // Styling\n\n__webpack_require__(/*! ./styles */ \"./build/styles.js\"); // Ensure the global variable exists\n\n\nvar $REST = window && window[\"$REST\"];\n\nif ($REST) {\n  // Update the $REST global variable\n  $REST.Components = components_1.Components;\n  $REST.WebParts = WebParts;\n} // Ensure the SP library exists\n\n\nif (window[\"SP\"] && window[\"SP\"].SOD) {\n  // This can fail if MDS is enabled\n  try {\n    // Notify waiting scripts\n    window[\"SP\"] ? window[\"SP\"].SOD.notifyScriptLoadedAndExecuteWaitingJobs(\"gd-sprest-bs\") : null;\n    window[\"SP\"] ? window[\"SP\"].SOD.notifyScriptLoadedAndExecuteWaitingJobs(\"gd-sprest-bs.js\") : null;\n  } catch (_a) {}\n}\n\n//# sourceURL=webpack://gd-sprest-bs/./build/index.js?");

/***/ }),

/***/ "./build/styles.js":
/*!*************************!*\
  !*** ./build/styles.js ***!
  \*************************/
/***/ (function() {

eval("!function () {\n  \"use strict\";\n\n  var e,\n      t,\n      r,\n      a,\n      n = {\n    671: function _(e, t, r) {\n      var a = r(180),\n          n = r.n(a)()(function (e) {\n        return e[1];\n      });\n      n.push([e.id, '.flatpickr-calendar{background:transparent;opacity:0;display:none;text-align:center;visibility:hidden;padding:0;-webkit-animation:none;animation:none;direction:ltr;border:0;font-size:14px;line-height:24px;border-radius:5px;position:absolute;width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-touch-action:manipulation;touch-action:manipulation;background:#fff;-webkit-box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08);box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08)}.flatpickr-calendar.open,.flatpickr-calendar.inline{opacity:1;max-height:640px;visibility:visible}.flatpickr-calendar.open{display:inline-block;z-index:99999}.flatpickr-calendar.animate.open{-webkit-animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1);animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1)}.flatpickr-calendar.inline{display:block;position:relative;top:2px}.flatpickr-calendar.static{position:absolute;top:calc(100% + 2px)}.flatpickr-calendar.static.open{z-index:999;display:block}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7){-webkit-box-shadow:none !important;box-shadow:none !important}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1){-webkit-box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-calendar .hasWeeks .dayContainer,.flatpickr-calendar .hasTime .dayContainer{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.flatpickr-calendar .hasWeeks .dayContainer{border-left:0}.flatpickr-calendar.hasTime .flatpickr-time{height:40px;border-top:1px solid #e6e6e6}.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{height:auto}.flatpickr-calendar:before,.flatpickr-calendar:after{position:absolute;display:block;pointer-events:none;border:solid transparent;content:\\'\\';height:0;width:0;left:22px}.flatpickr-calendar.rightMost:before,.flatpickr-calendar.arrowRight:before,.flatpickr-calendar.rightMost:after,.flatpickr-calendar.arrowRight:after{left:auto;right:22px}.flatpickr-calendar.arrowCenter:before,.flatpickr-calendar.arrowCenter:after{left:50%;right:50%}.flatpickr-calendar:before{border-width:5px;margin:0 -5px}.flatpickr-calendar:after{border-width:4px;margin:0 -4px}.flatpickr-calendar.arrowTop:before,.flatpickr-calendar.arrowTop:after{bottom:100%}.flatpickr-calendar.arrowTop:before{border-bottom-color:#e6e6e6}.flatpickr-calendar.arrowTop:after{border-bottom-color:#fff}.flatpickr-calendar.arrowBottom:before,.flatpickr-calendar.arrowBottom:after{top:100%}.flatpickr-calendar.arrowBottom:before{border-top-color:#e6e6e6}.flatpickr-calendar.arrowBottom:after{border-top-color:#fff}.flatpickr-calendar:focus{outline:0}.flatpickr-wrapper{position:relative;display:inline-block}.flatpickr-months{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-months .flatpickr-month{background:transparent;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9);height:34px;line-height:1;text-align:center;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flatpickr-months .flatpickr-prev-month,.flatpickr-months .flatpickr-next-month{text-decoration:none;cursor:pointer;position:absolute;top:0;height:34px;padding:10px;z-index:3;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9)}.flatpickr-months .flatpickr-prev-month.flatpickr-disabled,.flatpickr-months .flatpickr-next-month.flatpickr-disabled{display:none}.flatpickr-months .flatpickr-prev-month i,.flatpickr-months .flatpickr-next-month i{position:relative}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{/*\\n      /*rtl:begin:ignore*/left:0/*\\n      /*rtl:end:ignore*/}/*\\n      /*rtl:begin:ignore*/\\n/*\\n      /*rtl:end:ignore*/\\n.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,.flatpickr-months .flatpickr-next-month.flatpickr-next-month{/*\\n      /*rtl:begin:ignore*/right:0/*\\n      /*rtl:end:ignore*/}/*\\n      /*rtl:begin:ignore*/\\n/*\\n      /*rtl:end:ignore*/\\n.flatpickr-months .flatpickr-prev-month:hover,.flatpickr-months .flatpickr-next-month:hover{color:#959ea9}.flatpickr-months .flatpickr-prev-month:hover svg,.flatpickr-months .flatpickr-next-month:hover svg{fill:#f64747}.flatpickr-months .flatpickr-prev-month svg,.flatpickr-months .flatpickr-next-month svg{width:14px;height:14px}.flatpickr-months .flatpickr-prev-month svg path,.flatpickr-months .flatpickr-next-month svg path{-webkit-transition:fill .1s;transition:fill .1s;fill:inherit}.numInputWrapper{position:relative;height:auto}.numInputWrapper input,.numInputWrapper span{display:inline-block}.numInputWrapper input{width:100%}.numInputWrapper input::-ms-clear{display:none}.numInputWrapper input::-webkit-outer-spin-button,.numInputWrapper input::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.numInputWrapper span{position:absolute;right:0;width:14px;padding:0 4px 0 2px;height:50%;line-height:50%;opacity:0;cursor:pointer;border:1px solid rgba(57,57,57,0.15);-webkit-box-sizing:border-box;box-sizing:border-box}.numInputWrapper span:hover{background:rgba(0,0,0,0.1)}.numInputWrapper span:active{background:rgba(0,0,0,0.2)}.numInputWrapper span:after{display:block;content:\"\";position:absolute}.numInputWrapper span.arrowUp{top:0;border-bottom:0}.numInputWrapper span.arrowUp:after{border-left:4px solid transparent;border-right:4px solid transparent;border-bottom:4px solid rgba(57,57,57,0.6);top:26%}.numInputWrapper span.arrowDown{top:50%}.numInputWrapper span.arrowDown:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid rgba(57,57,57,0.6);top:40%}.numInputWrapper span svg{width:inherit;height:auto}.numInputWrapper span svg path{fill:rgba(0,0,0,0.5)}.numInputWrapper:hover{background:rgba(0,0,0,0.05)}.numInputWrapper:hover span{opacity:1}.flatpickr-current-month{font-size:135%;line-height:inherit;font-weight:300;color:inherit;position:absolute;width:75%;left:12.5%;padding:7.48px 0 0 0;line-height:1;height:34px;display:inline-block;text-align:center;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.flatpickr-current-month span.cur-month{font-family:inherit;font-weight:700;color:inherit;display:inline-block;margin-left:.5ch;padding:0}.flatpickr-current-month span.cur-month:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .numInputWrapper{width:6ch;width:7ch\\\\0;display:inline-block}.flatpickr-current-month .numInputWrapper span.arrowUp:after{border-bottom-color:rgba(0,0,0,0.9)}.flatpickr-current-month .numInputWrapper span.arrowDown:after{border-top-color:rgba(0,0,0,0.9)}.flatpickr-current-month input.cur-year{background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;cursor:text;padding:0 0 0 .5ch;margin:0;display:inline-block;font-size:inherit;font-family:inherit;font-weight:300;line-height:inherit;height:auto;border:0;border-radius:0;vertical-align:initial;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-current-month input.cur-year:focus{outline:0}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{font-size:100%;color:rgba(0,0,0,0.5);background:transparent;pointer-events:none}.flatpickr-current-month .flatpickr-monthDropdown-months{appearance:menulist;background:transparent;border:none;border-radius:0;box-sizing:border-box;color:inherit;cursor:pointer;font-size:inherit;font-family:inherit;font-weight:300;height:auto;line-height:inherit;margin:-1px 0 0 0;outline:none;padding:0 0 0 .5ch;position:relative;vertical-align:initial;-webkit-box-sizing:border-box;-webkit-appearance:menulist;-moz-appearance:menulist;width:auto}.flatpickr-current-month .flatpickr-monthDropdown-months:focus,.flatpickr-current-month .flatpickr-monthDropdown-months:active{outline:none}.flatpickr-current-month .flatpickr-monthDropdown-months:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month{background-color:transparent;outline:none;padding:0}.flatpickr-weekdays{background:transparent;text-align:center;overflow:hidden;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;height:28px}.flatpickr-weekdays .flatpickr-weekdaycontainer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}span.flatpickr-weekday{cursor:default;font-size:90%;background:transparent;color:rgba(0,0,0,0.54);line-height:1;margin:0;text-align:center;display:block;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;font-weight:bolder}.dayContainer,.flatpickr-weeks{padding:1px 0 0 0}.flatpickr-days{position:relative;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;width:307.875px}.flatpickr-days:focus{outline:0}.dayContainer{padding:0;outline:0;text-align:left;width:307.875px;min-width:307.875px;max-width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-wrap:wrap;-ms-flex-pack:justify;-webkit-justify-content:space-around;justify-content:space-around;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);opacity:1}.dayContainer + .dayContainer{-webkit-box-shadow:-1px 0 0 #e6e6e6;box-shadow:-1px 0 0 #e6e6e6}.flatpickr-day{background:none;border:1px solid transparent;border-radius:150px;-webkit-box-sizing:border-box;box-sizing:border-box;color:#393939;cursor:pointer;font-weight:400;width:14.2857143%;-webkit-flex-basis:14.2857143%;-ms-flex-preferred-size:14.2857143%;flex-basis:14.2857143%;max-width:39px;height:39px;line-height:39px;margin:0;display:inline-block;position:relative;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center}.flatpickr-day.inRange,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.today.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day:hover,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.nextMonthDay:hover,.flatpickr-day:focus,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.nextMonthDay:focus{cursor:pointer;outline:0;background:#e6e6e6;border-color:#e6e6e6}.flatpickr-day.today{border-color:#959ea9}.flatpickr-day.today:hover,.flatpickr-day.today:focus{border-color:#959ea9;background:#959ea9;color:#fff}.flatpickr-day.selected,.flatpickr-day.startRange,.flatpickr-day.endRange,.flatpickr-day.selected.inRange,.flatpickr-day.startRange.inRange,.flatpickr-day.endRange.inRange,.flatpickr-day.selected:focus,.flatpickr-day.startRange:focus,.flatpickr-day.endRange:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange:hover,.flatpickr-day.endRange:hover,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.endRange.nextMonthDay{background:#569ff7;-webkit-box-shadow:none;box-shadow:none;color:#fff;border-color:#569ff7}.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange,.flatpickr-day.endRange.startRange{border-radius:50px 0 0 50px}.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange,.flatpickr-day.endRange.endRange{border-radius:0 50px 50px 0}.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1)){-webkit-box-shadow:-10px 0 0 #569ff7;box-shadow:-10px 0 0 #569ff7}.flatpickr-day.selected.startRange.endRange,.flatpickr-day.startRange.startRange.endRange,.flatpickr-day.endRange.startRange.endRange{border-radius:50px}.flatpickr-day.inRange{border-radius:0;-webkit-box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.prevMonthDay,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.notAllowed.nextMonthDay{color:rgba(57,57,57,0.3);background:transparent;border-color:transparent;cursor:default}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover{cursor:not-allowed;color:rgba(57,57,57,0.1)}.flatpickr-day.week.selected{border-radius:0;-webkit-box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7;box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7}.flatpickr-day.hidden{visibility:hidden}.rangeMode .flatpickr-day{margin-top:1px}.flatpickr-weekwrapper{float:left}.flatpickr-weekwrapper .flatpickr-weeks{padding:0 12px;-webkit-box-shadow:1px 0 0 #e6e6e6;box-shadow:1px 0 0 #e6e6e6}.flatpickr-weekwrapper .flatpickr-weekday{float:none;width:100%;line-height:28px}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{display:block;width:100%;max-width:none;color:rgba(57,57,57,0.3);background:transparent;cursor:default;border:none}.flatpickr-innerContainer{display:block;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.flatpickr-rContainer{display:inline-block;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.flatpickr-time{text-align:center;outline:0;display:block;height:0;line-height:40px;max-height:40px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-time:after{content:\"\";display:table;clear:both}.flatpickr-time .numInputWrapper{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;width:40%;height:40px;float:left}.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:#393939}.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:#393939}.flatpickr-time.hasSeconds .numInputWrapper{width:26%}.flatpickr-time.time24hr .numInputWrapper{width:49%}.flatpickr-time input{background:transparent;-webkit-box-shadow:none;box-shadow:none;border:0;border-radius:0;text-align:center;margin:0;padding:0;height:inherit;line-height:inherit;color:#393939;font-size:14px;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-time input.flatpickr-hour{font-weight:bold}.flatpickr-time input.flatpickr-minute,.flatpickr-time input.flatpickr-second{font-weight:400}.flatpickr-time input:focus{outline:0;border:0}.flatpickr-time .flatpickr-time-separator,.flatpickr-time .flatpickr-am-pm{height:inherit;float:left;line-height:inherit;color:#393939;font-weight:bold;width:2%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}.flatpickr-time .flatpickr-am-pm{outline:0;width:18%;cursor:pointer;text-align:center;font-weight:400}.flatpickr-time input:hover,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time .flatpickr-am-pm:focus{background:#eee}.flatpickr-input[readonly]{cursor:pointer}@-webkit-keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}', \"\"]), t.Z = n;\n    },\n    179: function _(e, t, r) {\n      var a = r(180),\n          n = r.n(a),\n          i = r(671),\n          o = n()(function (e) {\n        return e[1];\n      });\n      o.i(i.Z), o.push([e.id, \".wp-tabs .nav>.nav-item{cursor:pointer}.wp-tabs>.is-hidden,.wp-tabs .ms-rte-wpbox.is-hidden{left:-1000vw;position:absolute;overflow:hidden}.wp-tabs{border-spacing:0px}.wp-tabs .ms-webpart-chrome-title{display:none}.wp-tabs .wp-tab{margin-bottom:0px;margin-top:0px;padding-bottom:0px;padding-top:0px}.wp-tabs .wp-tab .ms-PartSpacingVertical{display:none}.date-time .form-control.input:read-only{color:#495057}.listformdialog .modal-dialog{max-width:60vw}.listformdialog .modal-dialog .modal-body{max-height:75vh;overflow-y:auto}#calendarFields.dropdown-menu{display:block;max-height:250px;position:relative;overflow-y:auto}#selectedFields.dropdown-menu{border:none;display:block;position:relative}.people-picker .btn>.badge{color:black;text-decoration:none}\\n\", \"\"]), t.Z = o;\n    },\n    180: function _(e) {\n      e.exports = function (e) {\n        var t = [];\n        return t.toString = function () {\n          return this.map(function (t) {\n            var r = e(t);\n            return t[2] ? \"@media \".concat(t[2], \" {\").concat(r, \"}\") : r;\n          }).join(\"\");\n        }, t.i = function (e, r, a) {\n          \"string\" == typeof e && (e = [[null, e, \"\"]]);\n          var n = {};\n          if (a) for (var i = 0; i < this.length; i++) {\n            var o = this[i][0];\n            null != o && (n[o] = !0);\n          }\n\n          for (var p = 0; p < e.length; p++) {\n            var l = [].concat(e[p]);\n            a && n[l[0]] || (r && (l[2] ? l[2] = \"\".concat(r, \" and \").concat(l[2]) : l[2] = r), t.push(l));\n          }\n        }, t;\n      };\n    },\n    565: function _(e, t, r) {\n      var a,\n          n = function () {\n        var e = {};\n        return function (t) {\n          if (void 0 === e[t]) {\n            var r = document.querySelector(t);\n            if (window.HTMLIFrameElement && r instanceof window.HTMLIFrameElement) try {\n              r = r.contentDocument.head;\n            } catch (e) {\n              r = null;\n            }\n            e[t] = r;\n          }\n\n          return e[t];\n        };\n      }(),\n          i = [];\n\n      function o(e) {\n        for (var t = -1, r = 0; r < i.length; r++) {\n          if (i[r].identifier === e) {\n            t = r;\n            break;\n          }\n        }\n\n        return t;\n      }\n\n      function p(e, t) {\n        for (var r = {}, a = [], n = 0; n < e.length; n++) {\n          var p = e[n],\n              l = t.base ? p[0] + t.base : p[0],\n              c = r[l] || 0,\n              d = \"\".concat(l, \" \").concat(c);\n          r[l] = c + 1;\n          var s = o(d),\n              f = {\n            css: p[1],\n            media: p[2],\n            sourceMap: p[3]\n          };\n          -1 !== s ? (i[s].references++, i[s].updater(f)) : i.push({\n            identifier: d,\n            updater: k(f, t),\n            references: 1\n          }), a.push(d);\n        }\n\n        return a;\n      }\n\n      function l(e) {\n        var t = document.createElement(\"style\"),\n            a = e.attributes || {};\n\n        if (void 0 === a.nonce) {\n          var i = r.nc;\n          i && (a.nonce = i);\n        }\n\n        if (Object.keys(a).forEach(function (e) {\n          t.setAttribute(e, a[e]);\n        }), \"function\" == typeof e.insert) e.insert(t);else {\n          var o = n(e.insert || \"head\");\n          if (!o) throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n          o.appendChild(t);\n        }\n        return t;\n      }\n\n      var c,\n          d = (c = [], function (e, t) {\n        return c[e] = t, c.filter(Boolean).join(\"\\n\");\n      });\n\n      function s(e, t, r, a) {\n        var n = r ? \"\" : a.media ? \"@media \".concat(a.media, \" {\").concat(a.css, \"}\") : a.css;\n        if (e.styleSheet) e.styleSheet.cssText = d(t, n);else {\n          var i = document.createTextNode(n),\n              o = e.childNodes;\n          o[t] && e.removeChild(o[t]), o.length ? e.insertBefore(i, o[t]) : e.appendChild(i);\n        }\n      }\n\n      function f(e, t, r) {\n        var a = r.css,\n            n = r.media,\n            i = r.sourceMap;\n        if (n ? e.setAttribute(\"media\", n) : e.removeAttribute(\"media\"), i && \"undefined\" != typeof btoa && (a += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i)))), \" */\")), e.styleSheet) e.styleSheet.cssText = a;else {\n          for (; e.firstChild;) {\n            e.removeChild(e.firstChild);\n          }\n\n          e.appendChild(document.createTextNode(a));\n        }\n      }\n\n      var b = null,\n          h = 0;\n\n      function k(e, t) {\n        var r, a, n;\n\n        if (t.singleton) {\n          var i = h++;\n          r = b || (b = l(t)), a = s.bind(null, r, i, !1), n = s.bind(null, r, i, !0);\n        } else r = l(t), a = f.bind(null, r, t), n = function n() {\n          !function (e) {\n            if (null === e.parentNode) return !1;\n            e.parentNode.removeChild(e);\n          }(r);\n        };\n\n        return a(e), function (t) {\n          if (t) {\n            if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;\n            a(e = t);\n          } else n();\n        };\n      }\n\n      e.exports = function (e, t) {\n        (t = t || {}).singleton || \"boolean\" == typeof t.singleton || (t.singleton = (void 0 === a && (a = Boolean(window && document && document.all && !window.atob)), a));\n        var r = p(e = e || [], t);\n        return function (e) {\n          if (e = e || [], \"[object Array]\" === Object.prototype.toString.call(e)) {\n            for (var a = 0; a < r.length; a++) {\n              var n = o(r[a]);\n              i[n].references--;\n            }\n\n            for (var l = p(e, t), c = 0; c < r.length; c++) {\n              var d = o(r[c]);\n              0 === i[d].references && (i[d].updater(), i.splice(d, 1));\n            }\n\n            r = l;\n          }\n        };\n      };\n    }\n  },\n      i = {};\n\n  function o(e) {\n    var t = i[e];\n    if (void 0 !== t) return t.exports;\n    var r = i[e] = {\n      id: e,\n      exports: {}\n    };\n    return n[e](r, r.exports, o), r.exports;\n  }\n\n  o.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e[\"default\"];\n    } : function () {\n      return e;\n    };\n    return o.d(t, {\n      a: t\n    }), t;\n  }, o.d = function (e, t) {\n    for (var r in t) {\n      o.o(t, r) && !o.o(e, r) && Object.defineProperty(e, r, {\n        enumerable: !0,\n        get: t[r]\n      });\n    }\n  }, o.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, e = o(565), t = o.n(e), r = o(179), a = {\n    insert: \"head\",\n    singleton: !1\n  }, t()(r.Z, a), r.Z.locals;\n}();\n\n//# sourceURL=webpack://gd-sprest-bs/./build/styles.js?");

/***/ }),

/***/ "./build/webparts/base/helper.js":
/*!***************************************!*\
  !*** ./build/webparts/base/helper.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Helper = void 0;\n\nvar gd_bs_1 = __webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n/**\r\n * Helper Methods\r\n */\n\n\nexports.Helper = {\n  // Method to get the webpart\n  getWebPart: function getWebPart(wpId) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the current context\n      var context = SP.ClientContext.get_current(); // Get the webpart from the current page\n\n      var page = context.get_web().getFileByServerRelativeUrl(gd_sprest_1.ContextInfo.serverRequestPath);\n      var wpMgr = page.getLimitedWebPartManager(SP.WebParts.PersonalizationScope.shared);\n      var wpDef = wpMgr.get_webParts().getById(wpId);\n      var wp = wpDef.get_webPart();\n      context.load(wp, \"Properties\"); // Execute the request\n\n      context.executeQueryAsync( // Success\n      function () {\n        // Resolve the promise\n        resolve({\n          Context: context,\n          Properties: wp.get_properties(),\n          WebPart: wp,\n          WebPartDefinition: wpDef\n        });\n      }, // Error\n      function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        } // Reject the promise\n\n\n        reject(args[1] ? args[1].get_message() : \"\");\n      });\n    });\n  },\n  // Method to get the webpart id for a specified element\n  getWebPartId: function getWebPartId(el) {\n    // Loop until we find the webpart id\n    while (el) {\n      // See if this element contains the webpart id\n      var wpId = el.getAttribute(\"webpartid\");\n\n      if (wpId) {\n        // Return the webpart id\n        return wpId;\n      } // Check the parent\n\n\n      el = el.parentElement;\n    } // Unable to detect\n\n\n    return \"\";\n  },\n  // Method to render the edit form\n  renderEditForm: function renderEditForm(wpInfo, formControls) {\n    if (formControls === void 0) {\n      formControls = [];\n    }\n\n    var rows = []; // Parse the controls\n\n    for (var i = 0; i < formControls.length; i++) {\n      // Add the control\n      rows.push({\n        columns: [{\n          control: formControls[i]\n        }]\n      });\n    } // Render the form\n\n\n    return gd_bs_1.Components.Form({\n      el: wpInfo.el.querySelector(\".wp-cfg-form\"),\n      rows: rows,\n      value: wpInfo.cfg\n    });\n  },\n  // Method to save the webpart configuration\n  saveConfiguration: function saveConfiguration(wpId, cfgId, wpCfg) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Update the webpart content elements\n      if (exports.Helper.updateWebPartContentElements(wpId, cfgId, wpCfg)) {\n        // Wiki page detected, resolve the promise and do nothing\n        resolve();\n        return;\n      } // Get the target webpart\n\n\n      exports.Helper.getWebPart(wpId).then(function (wpInfo) {\n        // Get the content\n        var content = wpInfo && wpInfo.Properties.get_fieldValues()[\"Content\"];\n\n        if (content) {\n          // Create an element so we can update the configuration\n          var el = document.createElement(\"div\");\n          el.innerHTML = content; // Get the configuration element and update it\n\n          var elCfg = el.querySelector(\"#\" + cfgId);\n          elCfg ? elCfg.innerText = JSON.stringify(wpCfg) : null; // Update the webpart\n\n          wpInfo.Properties.set_item(\"Content\", el.innerHTML);\n          wpInfo.WebPartDefinition.saveWebPartChanges();\n          wpInfo.Context.load(wpInfo.WebPartDefinition); // Execute the request\n\n          wpInfo.Context.executeQueryAsync( // Success\n          function () {\n            // Disable the edit page warning\n            if (SP && SP.Ribbon && SP.Ribbon.PageState && SP.Ribbon.PageState.PageStateHandler) {\n              SP.Ribbon.PageState.PageStateHandler.ignoreNextUnload = true;\n            } // Refresh the page\n\n\n            window.location.href = window.location.pathname + \"?DisplayMode=Design\"; // Resolve the promise\n\n            resolve();\n          }, // Error\n          function () {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var message = args[1].get_message(); // Log\n\n            console.error(\"[gd-sprest] Error saving the configuration. \" + message); // Reject the promise\n\n            reject(message);\n          });\n        }\n      });\n    });\n  },\n  // Method to update the configuration element\n  updateConfigurationInElement: function updateConfigurationInElement(cfgId, elTarget, wpCfg) {\n    // Create an element so we can update the configuration\n    var el = document.createElement(\"div\");\n    el.innerHTML = elTarget.value; // Get the configuration element and update it\n\n    var cfg = el.querySelector(\"#\" + cfgId);\n    cfg ? cfg.innerText = JSON.stringify(wpCfg) : null; // Update the value\n\n    elTarget.value = el.innerHTML;\n  },\n  // Method to update the webpart content elements\n  updateWebPartContentElements: function updateWebPartContentElements(wpId, cfgId, wpCfg) {\n    // Get the webpart element\n    var elWebPart = document.querySelector(\"div[webpartid='\" + wpId + \"']\");\n\n    if (elWebPart) {\n      var wpContent = null;\n      var wpPageContent = null; // Get the associated webpart id\n\n      var wpId2 = elWebPart.getAttribute(\"webpartid2\"); // Update the configuration\n\n      var elCfg = elWebPart.querySelector(\"#\" + cfgId);\n      elCfg ? elCfg.innerText = JSON.stringify(wpCfg) : null; // Parse the hidden elements on the page\n\n      var hiddenElements = document.querySelectorAll(\"input[type='hidden']\");\n\n      for (var i = 0; i < hiddenElements.length; i++) {\n        var elHidden = hiddenElements[i]; // See if we have found the webpart content and page content hidden elements\n\n        if (wpContent && wpPageContent) {\n          continue;\n        } // See if this is a hidden webpart content element\n\n\n        if (elHidden.name && elHidden.name.indexOf(\"scriptcontent\") == elHidden.name.length - 13) {\n          // See if it's for this webpart\n          if (elHidden.name.indexOf(wpId2) == 0) {\n            // Set the webpart content element\n            wpContent = elHidden; // Update the configuration in the webpart content element\n\n            exports.Helper.updateConfigurationInElement(cfgId, wpContent, wpCfg);\n          } // Continue the loop\n\n\n          continue;\n        } // Create an element and set the inner html to the value\n\n\n        var el = document.createElement(\"div\");\n        el.innerHTML = elHidden.value; // See if this is a hidden field element\n\n        if (el.querySelector(\"#\" + cfgId)) {\n          // Set the webpart page content\n          wpPageContent = elHidden; // Update the configuration in the webpart content element\n\n          exports.Helper.updateConfigurationInElement(cfgId, wpPageContent, wpCfg); // Continue the loop\n\n          continue;\n        }\n      } // Return true, if the page content exists\n\n\n      return wpPageContent != null;\n    } // Webpart is not in a content field\n\n\n    return false;\n  }\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/base/helper.js?");

/***/ }),

/***/ "./build/webparts/base/index.js":
/*!**************************************!*\
  !*** ./build/webparts/base/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! ./helper */ \"./build/webparts/base/helper.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./wp */ \"./build/webparts/base/wp.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./wpCfg */ \"./build/webparts/base/wpCfg.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/base/index.js?");

/***/ }),

/***/ "./build/webparts/base/wp.js":
/*!***********************************!*\
  !*** ./build/webparts/base/wp.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WebPart = void 0;\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n\nvar wpCfg_1 = __webpack_require__(/*! ./wpCfg */ \"./build/webparts/base/wpCfg.js\");\n/**\r\n * Web Part\r\n */\n\n\nexports.WebPart = function (props) {\n  var _cfg = {};\n  var _wp = null;\n  /**\r\n   * Method to add the help link to a script part editor.\r\n   * @wpId - The webpart id.\r\n   */\n\n  var addHelpLink = function addHelpLink() {\n    // Ensure the help properties exist\n    if (props.helpProps) {\n      // Get the webpart's \"Snippet\"\n      var link = document.querySelector(\"div[webpartid='\" + _wp.wpId + \"'] a[title='Edit Snippet']\");\n\n      if (link) {\n        // Create the help link\n        var helpLink = document.createElement(\"a\");\n        helpLink.href = props.helpProps.url || \"#\";\n        helpLink.style.paddingLeft = \"10px\";\n        helpLink.setAttribute(\"role\", \"button\");\n        helpLink.title = props.helpProps.title || \"Help\";\n        helpLink.innerHTML = \"<span class='ms-metadata'>\" + helpLink.title + \"</span>\";\n        helpLink.target = \"_blank\"; // Append the link\n\n        link.parentElement.appendChild(helpLink);\n      }\n    }\n  };\n  /**\r\n   * Method to get the webpart id for a specified element\r\n   * @param el - The target element.\r\n   */\n\n\n  var getWebPartId = function getWebPartId(el) {\n    // Loop until we find the webpart id\n    while (el) {\n      // See if this element contains the webpart id\n      var wpId = el.getAttribute(\"webpartid\");\n\n      if (wpId) {\n        // Return the webpart id\n        return wpId;\n      } // Check the parent\n\n\n      el = el.parentElement;\n    } // Unable to detect\n\n\n    return \"\";\n  };\n  /**\r\n   * Method to get the webpart information\r\n   */\n\n\n  var getWebPartInfo = function getWebPartInfo() {\n    var targetInfo = {\n      cfg: null,\n      el: null,\n      wpId: null\n    }; // Ensure the element id exists\n\n    if (props.elementId) {\n      // Get the webpart elements\n      var elements = document.querySelectorAll(\"#\" + props.elementId);\n\n      for (var i = 0; i < elements.length; i++) {\n        var elWebPart = elements[i]; // See if we have already configured this element\n\n        if (elWebPart.getAttribute(\"data-isConfigured\")) {\n          continue;\n        } // Get the webpart id\n\n\n        var wpId = getWebPartId(elWebPart);\n\n        if (wpId) {\n          // See if the configuration element exists\n          var elCfg = elWebPart.parentElement.querySelector(\"#\" + props.cfgElementId);\n\n          if (elCfg) {\n            try {\n              // Parse the configuration\n              var data = elCfg.innerText.trim();\n              var cfg = data.length > 0 ? JSON.parse(data) : null; // See if the webaprt id exists\n\n              if (cfg && cfg.WebPartId) {\n                // See if it's for this webpart\n                if (cfg.WebPartId == wpId) {\n                  // Set the target information\n                  targetInfo = {\n                    cfg: cfg,\n                    el: elWebPart,\n                    wpId: wpId\n                  };\n                  break;\n                }\n              } else {\n                // Set the target information\n                targetInfo = {\n                  cfg: __assign(__assign({}, cfg || {}), {\n                    WebPartId: wpId\n                  }),\n                  el: elWebPart,\n                  wpId: wpId\n                };\n                break;\n              }\n            } catch (ex) {\n              // Set the target information\n              targetInfo = {\n                cfg: {\n                  WebPartId: wpId\n                },\n                el: elWebPart,\n                wpId: wpId\n              }; // Log\n\n              console.log(\"[bs-webpart] Error parsing the configuration for the webpart element '\" + props.cfgElementId + \"'.\");\n            } // Break from the loop\n\n\n            break;\n          } else {\n            // Set the target information\n            targetInfo = {\n              cfg: {\n                WebPartId: wpId\n              },\n              el: elWebPart,\n              wpId: wpId\n            };\n            break;\n          }\n        }\n      } // Ensure elements were found\n\n\n      if (elements.length == 0) {\n        // Log\n        console.log(\"[bs-webpart] Error - Unable to find the webpart element with id '\" + props.elementId + \"'.\");\n      }\n    } else {\n      // Log\n      console.log(\"[bs-webpart] The target element id is not defined.\");\n    } // Ensure the target element exists\n\n\n    if (targetInfo.el) {\n      // Set the configuration flag\n      targetInfo.el.setAttribute(\"data-isConfigured\", \"true\");\n    } // Return the target information\n\n\n    return targetInfo;\n  };\n  /**\r\n   * Method to render the webpart\r\n   */\n\n\n  var render = function render() {\n    // Get the webpart information\n    _wp = getWebPartInfo();\n\n    if (_wp == null || _wp.el == null) {\n      // Log\n      console.log(\"[bs-webpart] The target webpart element '\" + props.elementId + \"' was not found.\");\n      return;\n    } // Set the configuration\n\n\n    _cfg = _wp.cfg; // Get the webpart element\n\n    var elWebPart = _wp.wpId ? document.querySelector(\"div[webpartid='\" + _wp.wpId + \"']\") : null;\n\n    if (elWebPart) {\n      // Add the default bootstrap class name\n      elWebPart.className += \" bs \" + (props.wpClassName || \"\");\n    } // See if a class name exists\n\n\n    if (props.className && _wp.el.className.indexOf(props.className) < 0) {\n      // Set the class name\n      _wp.el.className += \" \" + props.className;\n    } // See if the page is being edited\n\n\n    var returnVal = null;\n\n    if (gd_sprest_1.Helper.WebPart.isEditMode()) {\n      // Add the help link\n      addHelpLink(); // Add the edit class name\n\n      _wp.el.classList.add(\"is-edit\"); // Call the render event\n\n\n      if (props.onRenderEdit) {\n        // Execute the render edit event\n        returnVal = props.onRenderEdit(_wp);\n      } // See if we are displaying the default edit form\n      else if (props.editForm) {\n          // Display the edit form\n          wpCfg_1.WPCfg(_cfg, _wp, props);\n        }\n    } else {\n      // See if the configuration is defined, but has no value\n      if (_wp.cfg || (props.cfgElementId || \"\").length == 0) {\n        // Execute the render edit event\n        returnVal = props.onRenderDisplay(_wp);\n      } else {\n        // Render a message\n        _wp.el.innerHTML = '<h3>Please edit the page and configure the webpart.</h3>';\n      }\n    } // See if a promise was returned\n\n\n    if (returnVal && returnVal.then) {\n      // Wait for the request to complete\n      returnVal.then(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        } // Execute the post render event\n\n\n        props.onPostRender ? props.onPostRender(_wp) : null;\n      });\n    } else {\n      // Execute the post render event\n      props.onPostRender ? props.onPostRender(_wp) : null;\n    }\n  }; // Add a load event\n\n\n  window.addEventListener(\"load\", function () {\n    // Render the component\n    render();\n  }); // Return the webpart\n\n  return {\n    cfg: _cfg,\n    info: _wp\n  };\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/base/wp.js?");

/***/ }),

/***/ "./build/webparts/base/wpCfg.js":
/*!**************************************!*\
  !*** ./build/webparts/base/wpCfg.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPCfg = void 0;\n\nvar gd_bs_1 = __webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\");\n\nvar helper_1 = __webpack_require__(/*! ./helper */ \"./build/webparts/base/helper.js\");\n/**\r\n * WebPart Configuration\r\n */\n\n\nexports.WPCfg = function (cfg, wp, props) {\n  var _editForm = props.editForm || {}; // Method to detect if the wiki page is being edited\n\n\n  var isWikiPageInEdit = function isWikiPageInEdit() {\n    var wikiPageMode = null; // Get the form\n\n    var form = document.forms[MSOWebPartPageFormName];\n\n    if (form) {\n      // Get the wiki page mode\n      wikiPageMode = form._wikiPageMode ? form._wikiPageMode.value : null;\n    } // Determine if this wiki page is being edited\n\n\n    return wikiPageMode == \"Edit\";\n  }; // The default render method when the page is edited\n\n\n  var render = function render() {\n    var form = null; // Ensure we need to render this\n\n    if (_editForm == null) {\n      return;\n    } // Render the template\n\n\n    wp.el.innerHTML = ['<div></div>', '<div></div>'].join('\\n'); // Render the button to toggle the modal\n\n    gd_bs_1.Components.Button({\n      el: wp.el.children[0],\n      text: \"Configure WebPart\",\n      type: gd_bs_1.Components.ButtonTypes.Secondary,\n      onClick: function onClick() {\n        modal.show();\n      }\n    }); // Render the modal\n\n    var modal = gd_bs_1.Components.Modal({\n      el: wp.el.children[1],\n      id: (wp.cfg.WebPartId || \"\") + \"_modal\",\n      isCentered: true,\n      title: \"Configuration Panel\",\n      type: gd_bs_1.Components.ModalTypes.Large,\n      onRenderBody: function onRenderBody(el) {\n        var formControls = null; // Set the class name\n\n        el.classList.add(\"wp-cfg-form\"); // See if the render form event exists\n\n        if (_editForm.onRenderForm) {\n          // Call the event\n          formControls = _editForm.onRenderForm(wp) || [];\n        } // See if there is a promise\n\n\n        if (formControls.then) {\n          // Wait for the promise to be resolved\n          formControls.then(function (formControls) {\n            // Render the edit form\n            form = helper_1.Helper.renderEditForm(wp, formControls);\n          });\n        } // Else, render the edit form\n        else {\n            form = helper_1.Helper.renderEditForm(wp, formControls);\n          } // Call the render form event\n\n\n        props.onRenderForm ? props.onRenderForm(form, wp) : null;\n      },\n      onRenderFooter: function onRenderFooter(el) {\n        var actionButtons = []; // See if this is a wiki page\n\n        var disableSaveButton = isWikiPageInEdit();\n\n        if (disableSaveButton) {\n          // Get the webpart manager key name\n          var elWPMgrKeyName = document.getElementById(\"MSOSPWebPartManager_OldSelectedStorageKeyName\"); // Set the flag\n\n          disableSaveButton = elWPMgrKeyName == null || elWPMgrKeyName.value.indexOf(cfg.WebPartId) < 0;\n\n          if (disableSaveButton) {\n            // Show a message\n            el.innerHTML = \"<label>You must edit the webpart in order to save changes.</label>\";\n            return;\n          }\n        } // See if we are adding the save button\n\n\n        if (_editForm.showSaveButton != false) {\n          // Add the save button\n          actionButtons.push({\n            isDisabled: disableSaveButton,\n            text: \"Save\",\n            onClick: function onClick(ev) {\n              // Validate the form\n              if (form.isValid()) {\n                // Call the save event and set the configuration\n                var cfg_1 = _editForm.onSave ? _editForm.onSave(wp.cfg, form) : null;\n                cfg_1 = cfg_1 ? cfg_1 : wp.cfg; // Save the configuration\n\n                helper_1.Helper.saveConfiguration(wp.wpId, props.cfgElementId, cfg_1).then(function () {\n                  // Close the modal\n                  modal.toggle();\n                });\n              }\n            }\n          });\n        } // See if custom actions exist\n\n\n        if (_editForm.actions) {\n          // Add the buttons\n          actionButtons = actionButtons.concat(_editForm.actions);\n        } // Render the menu buttons\n\n\n        gd_bs_1.Components.ButtonGroup({\n          buttons: actionButtons,\n          buttonType: gd_bs_1.Components.ButtonTypes.Secondary,\n          el: el,\n          isSmall: true\n        });\n      }\n    });\n  }; // Render the webpart configuration\n\n\n  render();\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/base/wpCfg.js?");

/***/ }),

/***/ "./build/webparts/index.js":
/*!*********************************!*\
  !*** ./build/webparts/index.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! ./base */ \"./build/webparts/base/index.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./list */ \"./build/webparts/list/index.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./listFields */ \"./build/webparts/listFields/index.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./search */ \"./build/webparts/search/index.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./tabs */ \"./build/webparts/tabs/index.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./taxonomy */ \"./build/webparts/taxonomy/index.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/index.js?");

/***/ }),

/***/ "./build/webparts/listFields/index.js":
/*!********************************************!*\
  !*** ./build/webparts/listFields/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! ./wp */ \"./build/webparts/listFields/wp.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./wpCfg */ \"./build/webparts/listFields/wpCfg.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/listFields/index.js?");

/***/ }),

/***/ "./build/webparts/listFields/wp.js":
/*!*****************************************!*\
  !*** ./build/webparts/listFields/wp.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPListFields = void 0;\n\nvar list_1 = __webpack_require__(/*! ../list */ \"./build/webparts/list/index.js\");\n\nvar wpCfg_1 = __webpack_require__(/*! ./wpCfg */ \"./build/webparts/listFields/wpCfg.js\");\n/**\r\n * List Fields WebPart\r\n */\n\n\nexports.WPListFields = function (props) {\n  // Set the edit form\n  props ? props.editForm = wpCfg_1.WPListFieldsEditForm(props.editForm) : null; // Create the webpart and return it\n\n  return list_1.WPList(props);\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/listFields/wp.js?");

/***/ }),

/***/ "./build/webparts/listFields/wpCfg.js":
/*!********************************************!*\
  !*** ./build/webparts/listFields/wpCfg.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPListFieldsEditForm = void 0;\n\nvar gd_bs_1 = __webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\");\n\nvar x_1 = __webpack_require__(/*! ../../icons/svgs/x */ \"./build/icons/svgs/x.js\");\n/**\r\n * List Fields WebPart Edit Form\r\n */\n\n\nexports.WPListFieldsEditForm = function (props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _ddlFields = null;\n  var _ddlSelectedFields = null;\n  var _selectedFields = null;\n  var _tbFilter = null;\n  var _wpInfo = null; // Adds a selected field\n\n  var addField = function addField(field) {\n    // Add the selected field\n    _selectedFields.push({\n      text: field.text,\n      value: field.value,\n      onRender: function onRender(el) {\n        // Set the styling\n        el.classList.add(\"d-flex\");\n        el.classList.add(\"justify-content-between\"); // Append an icon to remove the field\n\n        el.appendChild(x_1.x(16, 16)); // Set the click event\n\n        el.addEventListener(\"click\", function () {\n          // Remove this field\n          removeField(field);\n        }); // Clear the filter\n\n        _tbFilter.setValue(\"\");\n      }\n    }); // Render the fields\n\n\n    _ddlSelectedFields.setItems(_selectedFields);\n  }; // Filters the fields dropdown items\n\n\n  var filterFields = function filterFields(filter) {\n    // Parse the items\n    var items = _ddlFields.el.querySelectorAll(\".dropdown-item\");\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      var field = (item.innerText || \"\").toLowerCase(); // See if the field contains this value\n\n      if (filter == \"\" || field.indexOf(filter) >= 0) {\n        // Show this element\n        item.classList.remove(\"d-none\");\n      } else {\n        // Hide this element\n        item.classList.add(\"d-none\");\n      }\n    }\n  }; // Gets the selected field values\n\n\n  var getSelectedFields = function getSelectedFields() {\n    var fields = []; // Get the selected fields\n\n    for (var i = 0; i < _selectedFields.length; i++) {\n      var field = _selectedFields[i]; // Ensure this is a field\n\n      if (field.text && field.value) {\n        // Save the field\n        fields.push({\n          Name: field.value,\n          Title: field.text\n        });\n      }\n    } // Return the fields\n\n\n    return fields;\n  }; // Removes a selected field\n\n\n  var removeField = function removeField(field) {\n    // Parse the selected fields\n    for (var i = 0; i < _selectedFields.length; i++) {\n      var selectedField = _selectedFields[i]; // See if this is the target field\n\n      if (selectedField.value == field.value) {\n        // Remove this field\n        _selectedFields.splice(i, 1); // Render the items\n\n\n        _ddlSelectedFields.setItems(_selectedFields); // Stop the loop\n\n\n        break;\n      }\n    }\n  }; // Renders the fields control\n\n\n  var renderFields = function renderFields(el, fields) {\n    var filter = \"\"; // Create the dropdown menu\n\n    _ddlFields = gd_bs_1.Components.Dropdown({\n      id: \"calendarFields\",\n      menuOnly: true,\n      onChange: function onChange(item) {\n        // Close the popover\n        popover.hide(); // Clear the filter\n\n        filterFields(\"\"); // Add the selected field\n\n        addField(item);\n      }\n    }); // Render the textfield\n\n    _tbFilter = gd_bs_1.Components.InputGroup({\n      el: el,\n      placeholder: \"Select a Field...\",\n      onChange: function onChange(value) {\n        // Set the filter\n        filter = value; // Wait for the user to stop typing\n\n        setTimeout(function () {\n          // Ensure the value hasn't changed\n          if (value != filter) {\n            return;\n          } // Filter the fields\n\n\n          filterFields(filter.toLowerCase()); // Display the popover\n\n          popover.show();\n        }, 250);\n      }\n    }); // Render the selected fields\n\n    _ddlSelectedFields = gd_bs_1.Components.Dropdown({\n      el: el,\n      id: \"selectedFields\",\n      menuOnly: true\n    }); // Add a click event to display the popover\n\n    _tbFilter.el.addEventListener(\"click\", function () {\n      // Display the popover\n      popover.show();\n    }); // Create a popover\n\n\n    var popover = gd_bs_1.Components.Popover({\n      el: el,\n      target: _tbFilter.el,\n      type: gd_bs_1.Components.PopoverTypes.Auto,\n      options: {\n        trigger: \"click\",\n        content: function content() {\n          // Return the dropdown menu\n          return _ddlFields.el;\n        }\n      }\n    });\n  }; // Updates the fields\n\n\n  var setItems = function setItems(fields, selectedFields) {\n    if (selectedFields === void 0) {\n      selectedFields = [];\n    } // Update the dropdown\n\n\n    _ddlFields.setItems(fields); // Parse the selected fields\n\n\n    for (var i = 0; i < selectedFields.length; i++) {\n      var fieldInfo = selectedFields[i]; // Parse the fields\n\n      for (var j = 0; j < fields.length; j++) {\n        var field = fields[j]; // See if this is the target field\n\n        if (field.value == fieldInfo.Name) {\n          // Add this field\n          addField(field);\n          break;\n        }\n      }\n    }\n  }; // Updates the fields dropdown in the edit panel\n\n\n  var updateFieldsDDL = function updateFieldsDDL(list, selectedFields) {\n    if (selectedFields === void 0) {\n      selectedFields = [];\n    }\n\n    var items = []; // Clear the dropdown\n\n    setItems([{\n      isHeader: true,\n      text: list ? \"Loading the Fields\" : \"Select a List\"\n    }]); // Ensure the list exists\n\n    if (list) {\n      // Get the fields\n      list.Fields().query({\n        OrderBy: [\"Title\"]\n      }).execute(function (fields) {\n        // Parse the fields\n        for (var i = 0; i < fields.results.length; i++) {\n          var field = fields.results[i]; // Skip the title fields\n\n          if (field.InternalName == \"LinkTitle\" || field.InternalName == \"LinkTitleNoMenu\") {\n            continue;\n          } // Skip hidden fields\n\n\n          if (field.Hidden) {\n            continue;\n          } // Set the dropdown value\n\n\n          items.push({\n            text: field.Title,\n            value: field.InternalName\n          });\n        } // Update the dropdown values\n\n\n        setItems(items, selectedFields);\n      });\n    }\n  }; // Return the edit panel\n\n\n  return {\n    actions: props.actions,\n    showSaveButton: props.showSaveButton,\n    onListChanged: function onListChanged(wpInfo, list) {\n      // Update the fields dropdown\n      updateFieldsDDL(list);\n    },\n    onRenderForm: function onRenderForm(wpInfo, list) {\n      // Save the webpart information\n      _wpInfo = wpInfo; // Clear the selected fields\n\n      _selectedFields = []; // Set the default control\n\n      var controls = [{\n        name: \"Fields\",\n        label: \"Fields\",\n        onControlRendered: function onControlRendered(ctrl) {\n          // Render the fields control\n          renderFields(ctrl.el, wpInfo.cfg.Fields); // Update the fields dropdown\n\n          updateFieldsDDL(list, wpInfo.cfg.Fields);\n        }\n      }]; // Call the render form event\n\n      var returnVal = props.onRenderForm ? props.onRenderForm(_wpInfo, list) : null;\n\n      if (returnVal) {\n        // See if this is a promise\n        if (returnVal.then) {\n          // Return a promise\n          return new Promise(function (resolve, reject) {\n            // Wait for the promise to complete\n            returnVal.then(function (formControls) {\n              if (formControls === void 0) {\n                formControls = [];\n              } // Add the form controls\n\n\n              controls = controls.concat(formControls); // Resolve the promise\n\n              resolve(controls);\n            });\n          });\n        } // Add the form controls\n\n\n        controls = controls.concat(returnVal);\n      } // Return the custom properties\n\n\n      return controls;\n    },\n    onSave: function onSave(cfg, form) {\n      // Update the configuration\n      cfg.Fields = getSelectedFields(); // Return the configuration\n\n      return props.onSave ? props.onSave(_wpInfo.cfg, form) : _wpInfo.cfg;\n    }\n  };\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/listFields/wpCfg.js?");

/***/ }),

/***/ "./build/webparts/list/index.js":
/*!**************************************!*\
  !*** ./build/webparts/list/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! ./wp */ \"./build/webparts/list/wp.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./wpCfg */ \"./build/webparts/list/wpCfg.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/list/index.js?");

/***/ }),

/***/ "./build/webparts/list/wp.js":
/*!***********************************!*\
  !*** ./build/webparts/list/wp.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPList = void 0;\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n\nvar wp_1 = __webpack_require__(/*! ../base/wp */ \"./build/webparts/base/wp.js\");\n\nvar wpCfg_1 = __webpack_require__(/*! ./wpCfg */ \"./build/webparts/list/wpCfg.js\");\n/**\r\n * List WebPart\r\n */\n\n\nexports.WPList = function (props) {\n  var _wpInfo = null; // Method to load the items using a CAML query\n\n  var loadCAML = function loadCAML(caml) {\n    if (caml === void 0) {\n      caml = \"\";\n    } // Call the load caml query event\n\n\n    caml = (props.onExecutingCAMLQuery ? props.onExecutingCAMLQuery(_wpInfo, caml) : null) || caml; // See if we are targeting a different web\n\n    var webUrl = _wpInfo.cfg.WebUrl;\n\n    if (webUrl) {\n      // Get the context information for the destination web\n      // Note - Since we are using a POST request, this would be required for cross-site collection requests\n      gd_sprest_1.ContextInfo.getWeb(webUrl).execute(function (contextInfo) {\n        // Get the web\n        gd_sprest_1.Web(webUrl, {\n          requestDigest: contextInfo.GetContextWebInformation.FormDigestValue\n        }) // Get the list\n        .Lists(_wpInfo.cfg.ListName) // Query the items\n        .getItemsByQuery(caml) // Execute the request\n        .execute(function (items) {\n          // Render the items\n          props.onRenderItems ? props.onRenderItems(_wpInfo, items.results) : null;\n        });\n      });\n    } else {\n      // Get the web\n      gd_sprest_1.Web(webUrl) // Get the list\n      .Lists(_wpInfo.cfg.ListName) // Query the items\n      .getItemsByQuery(caml) // Execute the request\n      .execute(function (items) {\n        // Render the items\n        props.onRenderItems ? props.onRenderItems(_wpInfo, items.results) : null;\n      });\n    }\n  }; // Method to load the items using an ODATA query\n\n\n  var loadODATA = function loadODATA(query) {\n    if (query === void 0) {\n      query = {};\n    } // Call the load caml query event\n\n\n    query = (props.onExecutingODATAQuery ? props.onExecutingODATAQuery(_wpInfo, query) : null) || query; // Get the web\n\n    gd_sprest_1.Web(_wpInfo.cfg.WebUrl) // Get the list\n    .Lists(_wpInfo.cfg.ListName) // Get the items\n    .Items() // Query the list\n    .query(query) // Execute the request\n    .execute(function (items) {\n      // Render the items\n      props.onRenderItems ? props.onRenderItems(_wpInfo, items.results) : null;\n    });\n  }; // Create the webpart and return it\n\n\n  return wp_1.WebPart({\n    cfgElementId: props.cfgElementId,\n    className: props.className,\n    editForm: wpCfg_1.WPListEditForm(props.editForm),\n    elementId: props.elementId,\n    wpClassName: props.wpClassName,\n    onRenderDisplay: function onRenderDisplay(wpInfo) {\n      // Save the information\n      _wpInfo = wpInfo; // Call the render event\n\n      props.onRenderDisplay ? props.onRenderDisplay(_wpInfo) : null; // See if there is a render items event and a list is defined\n\n      if (props.onRenderItems && _wpInfo.cfg.ListName) {\n        // See if we are using the CAML query\n        if (props.camlQuery || props.onExecutingCAMLQuery) {\n          loadCAML(props.camlQuery);\n        } // Else, load using the ODATA query\n        else {\n            loadODATA(props.odataQuery);\n          }\n      }\n    }\n  });\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/list/wp.js?");

/***/ }),

/***/ "./build/webparts/list/wpCfg.js":
/*!**************************************!*\
  !*** ./build/webparts/list/wpCfg.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPListEditForm = void 0;\n\nvar gd_bs_1 = __webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n/**\r\n * List WebPart Edit Form\r\n */\n\n\nexports.WPListEditForm = function (props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _ddlList = null;\n  var _lists = null;\n  var _loadingMessage = null;\n  var _wpInfo = null; // Method to load the lists\n\n  var loadLists = function loadLists(webUrl) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Set the query\n      var query = props.listQuery || {}; // Get the web\n\n      gd_sprest_1.Web(webUrl) // Get the lists\n      .Lists() // Include the fields\n      .query(query) // Execute the request\n      .execute(function (lists) {\n        var items = [{\n          text: \"\",\n          value: \"\"\n        }]; // Call the list loaded event\n\n        _lists = (props.onListsLoaded ? props.onListsLoaded(_wpInfo, lists.results) : null) || lists.results; // Parse the lists\n\n        for (var i = 0; i < _lists.length; i++) {\n          var list = _lists[i]; // Add the item\n\n          items.push({\n            text: list.Title,\n            value: list.Title\n          });\n        } // Resolve the promise\n\n\n        resolve(items);\n      }, reject);\n    });\n  }; // Method to render the form controls\n\n\n  var renderFormControls = function renderFormControls(items, webUrl) {\n    var controls = []; // Add the web url\n\n    controls.push({\n      label: \"Relative Web Url:\",\n      description: \"The web containing the list. If blank, the current web is used.\",\n      name: \"WebUrl\",\n      type: gd_bs_1.Components.FormControlTypes.TextField,\n      value: webUrl,\n      onChange: function onChange(value) {\n        // Update the configuration\n        _wpInfo.cfg.WebUrl = value;\n      }\n    }); // Add the dropdown\n\n    controls.push({\n      label: \"List:\",\n      name: \"ListName\",\n      items: items,\n      type: gd_bs_1.Components.FormControlTypes.Dropdown,\n      value: _wpInfo && _wpInfo.cfg ? _wpInfo.cfg.ListName : null,\n      onControlRendered: function onControlRendered(control) {\n        // Save a reference to the dropdown list\n        _ddlList = control.dropdown;\n      },\n      onChange: function onChange(item) {\n        if (item) {\n          // See if this is a blank item\n          if (item.text == \"\") {\n            // Call the change event\n            props.onListChanged ? props.onListChanged(_wpInfo) : null;\n            return;\n          } // Parse the list\n\n\n          for (var i = 0; i < _lists.length; i++) {\n            var list = _lists[i]; // See if this is the target list\n\n            if (list.Title == item.text) {\n              // Update the configuration\n              _wpInfo.cfg.ListName = item.value; // Call the change event\n\n              props.onListChanged ? props.onListChanged(_wpInfo, list) : null;\n              break;\n            }\n          }\n        }\n      }\n    }); // Return the controls\n\n    return controls;\n  }; // Create the form action buttons\n\n\n  var actionButtons = [{\n    text: \"Refresh\",\n    onClick: function onClick() {\n      // Clear the dropdown\n      _ddlList.setItems([{\n        isHeader: true,\n        text: \"Loading the Lists\",\n        isSelected: true\n      }]); // Load the lists\n\n\n      loadLists(_wpInfo.cfg.WebUrl).then(function (items) {\n        // Set the dropdown items\n        _ddlList.setItems(items);\n      });\n    }\n  }]; // See if custom actions exist\n\n  if (props.actions) {\n    // Add the custom commands\n    actionButtons = actionButtons.concat(props.actions);\n  } // Return the edit panel\n\n\n  return {\n    actions: actionButtons,\n    showSaveButton: props.showSaveButton,\n    onRenderForm: function onRenderForm(wpInfo) {\n      // Save the webpart information\n      _wpInfo = wpInfo; // Render a loading message\n\n      _loadingMessage = gd_bs_1.Components.Progress({\n        el: _wpInfo.el,\n        isAnimated: true,\n        isStriped: true,\n        label: \"Loading the List Information\",\n        size: 100\n      }).el; // Return a promise\n\n      return new Promise(function (resolve, reject) {\n        // Load the lists\n        loadLists(_wpInfo && _wpInfo.cfg ? _wpInfo.cfg.WebUrl : \"\").then(function (items) {\n          // Render the form controls\n          var controls = renderFormControls(items); // Parse the lists\n\n          var selectedList = null;\n\n          for (var i = 0; i < _lists.length; i++) {\n            var list = _lists[i]; // See if this is the selected list\n\n            if (list.Title == _wpInfo.cfg.ListName) {\n              // Select this list\n              selectedList = list;\n            }\n          } // Call the render form event\n\n\n          var returnVal = props.onRenderForm ? props.onRenderForm(_wpInfo, selectedList) : null;\n\n          if (returnVal) {\n            // See if this is a promise\n            if (returnVal.then) {\n              // Wait for the promise to complete\n              returnVal.then(function (formControls) {\n                if (formControls === void 0) {\n                  formControls = [];\n                } // Add the form controls\n\n\n                controls = controls.concat(formControls); // Resolve the promise\n\n                resolve(controls);\n              });\n            } // Else, see if the form controls exist\n            else if (returnVal.length > 0) {\n                // Add the form controls\n                controls = controls.concat(returnVal); // Resolve the promise\n\n                resolve(controls);\n              } // Else, resolve the promise\n              else {\n                  resolve(controls);\n                }\n          } // Else, resolve the promise\n          else {\n              resolve(controls);\n            } // Remove the loading message\n\n\n          _wpInfo.el.removeChild(_loadingMessage);\n        });\n      });\n    },\n    onSave: function onSave(cfg, form) {\n      // Update the configuration\n      cfg.ListName = _wpInfo.cfg.ListName;\n      cfg.WebUrl = _wpInfo.cfg.WebUrl; // Return the configuration\n\n      return props.onSave ? props.onSave(_wpInfo.cfg, form) : _wpInfo.cfg;\n    }\n  };\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/list/wpCfg.js?");

/***/ }),

/***/ "./build/webparts/search/index.js":
/*!****************************************!*\
  !*** ./build/webparts/search/index.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! ./wp */ \"./build/webparts/search/wp.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./wpCfg */ \"./build/webparts/search/wpCfg.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/search/index.js?");

/***/ }),

/***/ "./build/webparts/search/wp.js":
/*!*************************************!*\
  !*** ./build/webparts/search/wp.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPSearch = void 0;\n\nvar wp_1 = __webpack_require__(/*! ../list/wp */ \"./build/webparts/list/wp.js\");\n\nvar wpCfg_1 = __webpack_require__(/*! ./wpCfg */ \"./build/webparts/search/wpCfg.js\");\n/**\r\n * Search WebPart\r\n */\n\n\nexports.WPSearch = function (props) {\n  var _items = [];\n\n  var _wpInfo; // Create the webpart and return it\n\n\n  var _wp = wp_1.WPList({\n    camlQuery: props.camlQuery,\n    cfgElementId: props.cfgElementId,\n    className: props.className,\n    editForm: wpCfg_1.WPSearchEditForm(props.editForm),\n    elementId: props.elementId,\n    helpProps: props.helpProps,\n    odataQuery: props.odataQuery,\n    wpClassName: props.wpClassName,\n    onExecutingODATAQuery: function onExecutingODATAQuery(wpInfo, query) {\n      // Default the query\n      query = (props.onExecutingODATAQuery ? props.onExecutingODATAQuery(wpInfo, query) : query) || {};\n      query.Expand = query.Expand || [];\n      query.Select = query.Select || [\"*\"]; // Ensure the configuration exists\n\n      if (wpInfo.cfg) {\n        var hasTaxonomyField = false; // Parse the fields\n\n        var fields = (wpInfo.cfg.Fields || []).concat(props.searchFields || []);\n\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i]; // Add the field, based on the type\n\n          switch (field.type) {\n            // Lookup\n            case \"Lookup\":\n            case \"LookupMulti\":\n              // Add the field\n              query.Expand.push(field.name);\n              query.Select.push(field.name + \"/Title\");\n              break;\n            // Taxonomy\n\n            case \"TaxonomyFieldType\":\n            case \"TaxonomyFieldTypeMulti\":\n              // Set the flag\n              hasTaxonomyField = true; // Add the field\n\n              query.Select.push(field.name);\n              break;\n            // User\n\n            case \"User\":\n              // Add the field\n              query.Expand.push(field.name);\n              query.Select.push(field.name + \"/Title\");\n              break;\n            // Default\n\n            default:\n              query.Select.push(field.name);\n              break;\n          }\n        } // See if there is a taxonomy field\n\n\n        if (hasTaxonomyField) {\n          // Get the taxonomy field values\n          query.Expand.push(\"TaxCatchAll\");\n          query.Select.push(\"TaxCatchAll/ID\", \"TaxCatchAll/Term\");\n        }\n      } // Return the query\n\n\n      return query;\n    },\n    onRenderItems: function onRenderItems(wpInfo, items) {\n      // Save the wpinfo and items\n      _wpInfo = wpInfo;\n      _items = items; // Call the custom event\n\n      props.onRenderItems ? props.onRenderItems(wpInfo, items) : null;\n    }\n  }); // Set the filter method\n\n\n  _wp.filterItems = function (filterText) {\n    var results = []; // Ensure the filter exists\n\n    if (filterText && filterText.length > 0) {\n      // Update the filter\n      filterText = filterText.toLowerCase();\n      var fields = ((_wpInfo.cfg ? _wpInfo.cfg.Fields : null) || []).concat(props.searchFields || []); // Parse the items\n\n      for (var i = 0; i < _items.length; i++) {\n        var item = _items[i];\n        var addToResults = false; // Set the taxonomy mapper\n\n        var mapper = item[\"TaxCatchAll\"];\n        mapper = (mapper ? mapper.results : null) || []; // Parse the fields\n\n        for (var j = 0; j < fields.length; j++) {\n          var field = fields[j]; // Get the field value(s)\n\n          var fieldValues = item[field.name];\n\n          if (fieldValues) {\n            fieldValues = fieldValues.results ? fieldValues.results : [fieldValues]; // Parse the field values\n\n            for (var k = 0; k < fieldValues.length; k++) {\n              var fieldValue = fieldValues[k]; // Ensure the field value exists\n\n              if (fieldValue) {\n                // Update the value, based on the type\n                switch (field.type) {\n                  // Lookup\n                  case \"Lookup\":\n                  case \"LookupMulti\":\n                    // Set the value\n                    fieldValue = fieldValue.Title;\n                    break;\n                  // Taxonomy\n\n                  case \"TaxonomyFieldType\":\n                  case \"TaxonomyFieldTypeMulti\":\n                    // Parse the mapper\n                    for (var i_1 = 0; i_1 < mapper.length; i_1++) {\n                      // See if this is the target id\n                      if (mapper[i_1].ID == fieldValue.WssId) {\n                        // Set the value\n                        fieldValue = mapper[i_1].Term;\n                      }\n                    }\n\n                    break;\n                  // URL\n\n                  case \"URL\":\n                    // Set the value\n                    fieldValue = fieldValue.Description;\n                    break;\n                  // User\n\n                  case \"User\":\n                    // Set the value\n                    fieldValue = fieldValue.Title;\n                    break;\n                } // See if the item contains the filter\n\n\n                if (fieldValue && fieldValue.toLowerCase().indexOf(filterText) >= 0) {\n                  // Set the flag\n                  addToResults = true;\n                  break;\n                }\n              }\n            } // See if we are adding this item to the results\n\n\n            if (addToResults) {\n              // Add the item\n              results.push(item); // Break from the loop\n\n              break;\n            }\n          }\n        }\n      }\n    } else {\n      // Copy the items\n      results = _items;\n    } // Return the results\n\n\n    return results;\n  }; // Return the webpart\n\n\n  return _wp;\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/search/wp.js?");

/***/ }),

/***/ "./build/webparts/search/wpCfg.js":
/*!****************************************!*\
  !*** ./build/webparts/search/wpCfg.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPSearchEditForm = void 0;\n\nvar gd_bs_1 = __webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n/**\r\n * Search WebPart Edit Form\r\n */\n\n\nexports.WPSearchEditForm = function (props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _wpInfo = null; // Method to render the fields\n\n  var loadFields = function loadFields(list) {\n    var formControls = [];\n    var items = []; // Ensure the list exists\n\n    if (list == null) {\n      return formControls;\n    } // Parse the fields\n\n\n    var fields = (list.Fields ? list.Fields.results : null) || [];\n\n    for (var i = 0; i < fields.length; i++) {\n      var addField = false;\n      var field = fields[i]; // Add the field, based on the type\n\n      switch (field.FieldTypeKind) {\n        // Searchable Fields\n        case gd_sprest_1.SPTypes.FieldType.Choice:\n        case gd_sprest_1.SPTypes.FieldType.MultiChoice:\n        case gd_sprest_1.SPTypes.FieldType.Lookup:\n        case gd_sprest_1.SPTypes.FieldType.Text:\n        case gd_sprest_1.SPTypes.FieldType.URL:\n        case gd_sprest_1.SPTypes.FieldType.User:\n          addField = true;\n          break;\n\n        default:\n          // Allow managed metadata fields\n          addField = /^TaxonomyFieldType/.test(field.TypeAsString);\n          break;\n      } // See if we are adding the field\n\n\n      if (addField) {\n        items.push({\n          data: field.TypeAsString,\n          text: field.Title + \" [\" + field.InternalName + \"]\",\n          value: field.InternalName\n        });\n      }\n    } // Sort the options\n\n\n    items = items.sort(function (a, b) {\n      if (a.text < b.text) {\n        return -1;\n      }\n\n      if (a.text > b.text) {\n        return 1;\n      }\n\n      return 0;\n    }); // See if fields exist\n\n    var value = [];\n\n    if (_wpInfo.cfg && _wpInfo.cfg.Fields) {\n      // Parse the fields\n      for (var i = 0; i < _wpInfo.cfg.Fields.length; i++) {\n        // Add the field\n        value.push(_wpInfo.cfg.Fields[i].name);\n      }\n    } // Add the form dropdown\n\n\n    formControls.push({\n      label: \"Filter Field(s):\",\n      items: items,\n      type: gd_bs_1.Components.FormControlTypes.MultiDropdown,\n      onChange: function onChange(items) {\n        // Clear the fields\n        _wpInfo.cfg.Fields = []; // Parse the options\n\n        for (var i = 0; i < items.length; i++) {\n          var item = items[i]; // Add the field\n\n          _wpInfo.cfg.Fields.push({\n            name: item.value,\n            type: item.data\n          });\n        }\n      }\n    }); // Return the form controls\n\n    return formControls;\n  }; // Set the list query\n\n\n  var listQuery = props.listQuery || {};\n  listQuery.Expand = listQuery.Expand || [];\n  listQuery.Expand.push(\"Fields\"); // Return the edit panel\n\n  return {\n    actions: props.actions,\n    listQuery: listQuery,\n    onListsLoaded: props.onListsLoaded,\n    onRenderForm: function onRenderForm(wpInfo, list) {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // Save the webpart information\n        _wpInfo = wpInfo; // Load the fields\n\n        var formControls = loadFields(list); // Call the render form event\n\n        var returnVal = props.onRenderForm ? props.onRenderForm(_wpInfo) : null;\n\n        if (returnVal) {\n          // See if this is a promise\n          if (returnVal.then) {\n            // Wait for the promise to complete\n            returnVal.then(function (controls) {\n              if (controls === void 0) {\n                controls = [];\n              } // Add the form controls\n\n\n              formControls = formControls.concat(controls); // Resolve the promise\n\n              resolve(formControls);\n            });\n          } // Else, see if the form controls exist\n          else if (returnVal.length > 0) {\n              // Add the form controls\n              formControls = formControls.concat(returnVal); // Resolve the promise\n\n              resolve(formControls);\n            } // Else, resolve the promise\n            else {\n                resolve(formControls);\n              }\n        } // Else, resolve the promise\n        else {\n            resolve(formControls);\n          }\n      });\n    },\n    showSaveButton: props.showSaveButton,\n    onListChanged: function onListChanged(wpInfo, list) {\n      // Render the fields\n      return loadFields(list);\n    },\n    onSave: function onSave(cfg, form) {\n      // Update the configuration\n      cfg.Fields = _wpInfo.cfg.Fields || []; // Return the configuration\n\n      return props.onSave ? props.onSave(_wpInfo.cfg, form) : _wpInfo.cfg;\n    }\n  };\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/search/wpCfg.js?");

/***/ }),

/***/ "./build/webparts/tabs/index.js":
/*!**************************************!*\
  !*** ./build/webparts/tabs/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! ./wp */ \"./build/webparts/tabs/wp.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/tabs/index.js?");

/***/ }),

/***/ "./build/webparts/tabs/wp.js":
/*!***********************************!*\
  !*** ./build/webparts/tabs/wp.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPTabs = exports.WPTabTypes = void 0;\n\nvar gd_bs_1 = __webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\");\n\nvar base_1 = __webpack_require__(/*! ../base */ \"./build/webparts/base/index.js\");\n/**\r\n * Web Part Tab Types\r\n */\n\n\nvar WPTabTypes;\n\n(function (WPTabTypes) {\n  WPTabTypes[WPTabTypes[\"Pillars\"] = 1] = \"Pillars\";\n  WPTabTypes[WPTabTypes[\"Tabs\"] = 2] = \"Tabs\";\n})(WPTabTypes = exports.WPTabTypes || (exports.WPTabTypes = {}));\n/**\r\n * Web Part Tabs\r\n */\n\n\nexports.WPTabs = function (props) {\n  var _elWebPart = null;\n  var _isContentZone = false;\n  var _nav = null; // Method to get the webparts\n\n  var getWebParts = function getWebParts(wpInfo) {\n    var wps = []; // Get the webpart element and zone\n\n    var elWebPart = document.querySelector(\"div[webpartid='\" + wpInfo.cfg.WebPartId + \"']\");\n    var elWebPartZone = elWebPart ? getWebPartZone(elWebPart) : null;\n\n    if (elWebPart && elWebPartZone) {\n      // Add a class name to the webpart zone\n      elWebPartZone.className += \" wp-tabs\"; // Remove the empty elements\n\n      removeEmptyElements(elWebPartZone); // Parse the webparts in this zone\n\n      var webparts = elWebPartZone.querySelectorAll(\".ms-webpartzone-cell[id^='MSOZoneCell_WebPart']\");\n\n      for (var i = 0; i < webparts.length; i++) {\n        var webpart = webparts[i]; // See if it's this webpart\n\n        if (webpart.querySelector(\"div[webpartid='\" + wpInfo.cfg.WebPartId + \"']\")) {\n          // Save a reference\n          _elWebPart = webpart; // Set the class\n\n          _elWebPart.className += \" wp-tab\"; // Skip this webpart\n\n          continue;\n        } // Skip hidden webparts\n\n\n        var wpTitle = (webpart.querySelector(\".ms-webpart-titleText\") || {}).innerText || \"\";\n        var isHidden = webpart.firstElementChild && webpart.firstElementChild.classList.contains(\"ms-hide\");\n        isHidden = isHidden || /^\\(Hidden\\)/.test(wpTitle);\n\n        if (isHidden) {\n          continue;\n        } // See if this is within a content zone\n\n\n        if (_isContentZone) {\n          // Get the parent webpart box\n          while (webpart.parentNode) {\n            // See if this is the webpart box element\n            if (webpart.classList.contains(\"ms-rte-wpbox\")) {\n              // Find the div containing the webpart id\n              var wpElement = webpart.querySelector(\"div[webpartid*='-']\");\n\n              if (wpElement) {\n                // Set the webpart id attribute\n                webpart.setAttribute(\"wpid\", wpElement.getAttribute(\"webpartid\"));\n              } // Add this webpart and break from the loop\n\n\n              wps.push(webpart);\n              break;\n            } // Check the parent element\n\n\n            webpart = webpart.parentNode;\n          }\n        } else {\n          // Add the webpart\n          wps.push(webpart);\n        }\n      }\n    } // Return the webparts\n\n\n    return wps;\n  }; // Method to get the webpart zone\n\n\n  var getWebPartZone = function getWebPartZone(el) {\n    // Ensure the element exists\n    if (el && el.classList) {\n      // See if this is the webpart zone element\n      if (el.classList.contains(\"ms-webpart-zone\")) {\n        // Return it\n        return el;\n      } // See if this is the inner page zone\n\n\n      if (el.classList.contains(\"ms-rte-layoutszone-inner\") || el.classList.contains(\"ms-rtestate-field\")) {\n        // Set the flag\n        _isContentZone = true; // Return it\n\n        return el;\n      } // Check the parent element\n\n\n      return getWebPartZone(el.parentNode);\n    } // Return nothing\n\n\n    return null;\n  }; // Method to remove empty paragraph or new lines for webparts w/in content zones\n\n\n  var removeEmptyElements = function removeEmptyElements(elWebPartZone) {\n    var elChildren = []; // See if this webpart is within a layout zone or rich html field\n\n    if (elWebPartZone.className.indexOf(\"ms-rte-layoutszone-inner\") >= 0 || elWebPartZone.className.indexOf(\"ms-rtestate-field\") >= 0) {\n      // Set the children elements\n      elChildren = elWebPartZone.children;\n    } // Parse the children elements\n\n\n    for (var i = 0; i < elChildren.length; i++) {\n      var elChild = elWebPartZone.children[i]; // See if the last element is a new line\n\n      var elBreakLine = elChild.children[elChild.children.length - 1];\n\n      if (elBreakLine && elBreakLine.nodeName == \"BR\") {\n        // Remove the element\n        elChild.removeChild(elBreakLine);\n      } // See if this is an empty paragraph tag\n\n\n      if (elChild.nodeName == \"P\") {\n        var removeElement = false;\n        var content = elChild.innerHTML.trim(); // See if this is an empty element\n\n        if (content.length == 0) {\n          // Set the flag\n          removeElement = true;\n        } // Else, see if this is a line break\n        else if (content.length == 1 && content.charCodeAt(0) == 8203) {\n            // Set the flag\n            removeElement = true;\n          } // Remove the element\n\n\n        removeElement ? elWebPartZone.removeChild(elChild) : null;\n      }\n    }\n  }; // Method to update the visibility of the webparts\n\n\n  var updateWebParts = function updateWebParts(tab, ev) {\n    var selectedTabId = 0; // See if the tab exists\n\n    if (tab) {\n      // Parse the webparts\n      for (var i = 0; i < _webparts.length; i++) {\n        // Get the webpart\n        var wpTitle = _webparts[i].querySelector(\".ms-webpart-titleText\");\n\n        if (wpTitle && wpTitle.innerText == tab.title) {\n          // Update the selected tab id\n          selectedTabId = i;\n          break;\n        }\n      }\n    } // Else, default the selected tab to the first visible webpart\n    else {\n        // Parse the webparts\n        for (selectedTabId = 0; selectedTabId < _webparts.length; selectedTabId++) {\n          // Break if this webpart has a title\n          if (_webparts[selectedTabId].querySelector(\".ms-webpart-titleText\")) {\n            break;\n          }\n        }\n      } // Parse the webparts\n\n\n    for (var i = 0; i < _webparts.length; i++) {\n      var wp_1 = _webparts[i]; // Determine the query selector\n\n      var selector = wp_1.id ? \"#\" + wp_1.id : \".ms-rte-wpbox[wpid='\" + wp_1.getAttribute(\"wpid\") + \"']\"; // Get the webpart\n\n      var webpart = document.querySelector(selector);\n\n      if (webpart) {\n        // See if we are displaying this webpart\n        if (i == selectedTabId) {\n          // Display the webpart\n          webpart.className = webpart.className.replace(\" is-hidden\", \"\"); // See if this tab contains a calendar webpart\n\n          if (webpart.querySelector(\".ms-acal-rootdiv\")) {\n            var ev_1 = null; // Create the resize event\n\n            try {\n              ev_1 = new Event(\"resize\");\n            } // This will fail for IE\n            catch (e) {\n              // Create the event\n              ev_1 = document.createEvent(\"Event\");\n              ev_1.initEvent(\"resize\", true, false);\n            } finally {\n              // Call the window resize event to fix the events\n              ev_1 ? window.dispatchEvent(ev_1) : null;\n            }\n          } // Call the click if it exists\n\n\n          props.onClick ? props.onClick(webpart) : null;\n        } // Ensure the webpart is hidden\n        else if (webpart.classList.contains(\"is-hidden\") == false) {\n            // Hide the webpart\n            webpart.classList.add(\"is-hidden\");\n          }\n      }\n    }\n  };\n  /**\r\n   * Main\r\n   */\n\n\n  var _webparts = []; // Return the webpart\n\n  var wp = base_1.WebPart({\n    className: props.className,\n    cfgElementId: props.cfgElementId,\n    editForm: props.editForm,\n    elementId: props.elementId,\n    helpProps: props.helpProps,\n    onPostRender: props.onPostRender,\n    onRenderEdit: props.onRenderEdit,\n    wpClassName: [\"wp-tabs-main\", props.wpClassName || \"\"].join(' ').trim(),\n    onRenderDisplay: function onRenderDisplay(wpInfo) {\n      // Set the webparts\n      _webparts = getWebParts(wpInfo); // Parse the webparts\n\n      var items = [];\n\n      for (var i = 0; i < _webparts.length; i++) {\n        // Ensure a title exists\n        var wpTitle = _webparts[i].querySelector(\".ms-webpart-titleText\");\n\n        if (wpTitle) {\n          // Add the tab\n          items.push({\n            isActive: i == 0,\n            title: wpTitle.innerText,\n            onClick: updateWebParts\n          });\n        }\n      } // Render the navigation\n\n\n      _nav = gd_bs_1.Components.Nav({\n        className: props.className,\n        el: wpInfo.el,\n        isPills: props.type == WPTabTypes.Pillars,\n        isTabs: props.type != WPTabTypes.Pillars,\n        items: items\n      }); // Update the webparts\n\n      updateWebParts(); // See if a custom event exists\n\n      props.onRenderDisplay ? props.onRenderDisplay(wpInfo) : null;\n    }\n  }); // Add the custom methods\n\n  wp.getNav = function () {\n    return _nav;\n  };\n\n  wp.getTabs = function () {\n    return _webparts;\n  }; // Return the webpart\n\n\n  return wp;\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/tabs/wp.js?");

/***/ }),

/***/ "./build/webparts/taxonomy/index.js":
/*!******************************************!*\
  !*** ./build/webparts/taxonomy/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(/*! ./wp */ \"./build/webparts/taxonomy/wp.js\"), exports);\n\n__exportStar(__webpack_require__(/*! ./wpCfg */ \"./build/webparts/taxonomy/wpCfg.js\"), exports);\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/taxonomy/index.js?");

/***/ }),

/***/ "./build/webparts/taxonomy/wp.js":
/*!***************************************!*\
  !*** ./build/webparts/taxonomy/wp.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPTaxonomy = void 0;\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n\nvar wp_1 = __webpack_require__(/*! ../base/wp */ \"./build/webparts/base/wp.js\");\n\nvar wpCfg_1 = __webpack_require__(/*! ./wpCfg */ \"./build/webparts/taxonomy/wpCfg.js\");\n/**\r\n * Taxonomy WebPart\r\n */\n\n\nexports.WPTaxonomy = function (props) {\n  // Create an instance of the webpart\n  wp_1.WebPart({\n    cfgElementId: props.cfgElementId,\n    className: props.className,\n    editForm: wpCfg_1.WPTaxonomyEditForm(props.editForm || {}),\n    elementId: props.elementId,\n    helpProps: props.helpProps,\n    onPostRender: props.onPostRender,\n    onRenderEdit: props.onRenderEdit,\n    wpClassName: props.wpClassName,\n    onRenderDisplay: function onRenderDisplay(wpInfo) {\n      // See if the render term sets event exists\n      if (props.onRenderTermSets && wpInfo.cfg.TermGroupName) {\n        // Load the term group information\n        gd_sprest_1.Helper.Taxonomy.getTermSets(wpInfo.cfg.TermGroupName).then(function (termSets) {\n          // Call the render event\n          props.onRenderTermSets(wpInfo, termSets);\n        });\n      } // See if the term group and term set names exist\n\n\n      if (wpInfo.cfg.TermGroupName && wpInfo.cfg.TermSetName) {\n        // See if the render term set events exists\n        if (props.onRenderTermSet || props.onRenderTermSetTerms) {\n          // Load the term set information\n          gd_sprest_1.Helper.Taxonomy.getTermSetByGroupName(wpInfo.cfg.TermSetName, wpInfo.cfg.TermGroupName).then(function (termSet) {\n            // Call the term set render event\n            props.onRenderTermSet ? props.onRenderTermSet(wpInfo, termSet) : null; // See if we are rendering term set terms\n\n            if (props.onRenderTermSetTerms) {\n              // See if a term set id exists\n              if (wpInfo.cfg.TermSetTermId) {\n                // Load the term set terms\n                var term = gd_sprest_1.Helper.Taxonomy.findById(termSet, wpInfo.cfg.TermSetTermId); // Call the term set terms render event\n\n                props.onRenderTermSetTerms(wpInfo, term ? gd_sprest_1.Helper.Taxonomy.toArray(term) : []);\n              } else {\n                // Call the term set terms render event\n                props.onRenderTermSetTerms(wpInfo, gd_sprest_1.Helper.Taxonomy.toArray(termSet));\n              }\n            }\n          });\n        }\n      }\n    }\n  });\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/taxonomy/wp.js?");

/***/ }),

/***/ "./build/webparts/taxonomy/wpCfg.js":
/*!******************************************!*\
  !*** ./build/webparts/taxonomy/wpCfg.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WPTaxonomyEditForm = void 0;\n\nvar gd_bs_1 = __webpack_require__(/*! gd-bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js\");\n\nvar gd_sprest_1 = __webpack_require__(/*! gd-sprest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\n/**\r\n * Taxonomy WebPart Edit Form\r\n */\n\n\nexports.WPTaxonomyEditForm = function (props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _ddlTermSet;\n\n  var _ddlTerm;\n\n  var _termGroupItems = [];\n  var _termSetItems = [];\n  var _termSetTermsItems = [];\n  var _wpInfo = null; // Method to generate the form controls\n\n  var generateFormControls = function generateFormControls() {\n    var formControls = []; // Add the term groups dropdown\n\n    formControls.push({\n      label: \"Select the Term Group:\",\n      items: _termGroupItems,\n      name: \"TermGroupId\",\n      type: gd_bs_1.Components.FormControlTypes.Dropdown,\n      value: _wpInfo.cfg.TermGroupId,\n      onChange: function onChange(option) {\n        // Clear the dropdowns\n        _termSetItems = [];\n        _termSetTermsItems = [];\n\n        _ddlTermSet.setItems([]);\n\n        _ddlTerm ? _ddlTerm.setItems([]) : null; // Update the configuration\n\n        _wpInfo.cfg.TermGroupId = option ? option.value : \"\";\n        _wpInfo.cfg.TermGroupName = option ? option.text : \"\";\n        _wpInfo.cfg.TermSetId = \"\";\n        _wpInfo.cfg.TermSetName = \"\";\n        _wpInfo.cfg.TermSetTermId = \"\";\n        _wpInfo.cfg.TermSetTermName = \"\"; // Call the change event\n\n        props.onTermGroupChanged ? props.onTermGroupChanged(_wpInfo, {\n          id: _wpInfo.cfg.TermGroupId,\n          name: _wpInfo.cfg.TermGroupName\n        }) : null; // Load the term sets\n\n        loadTermSets().then(function () {\n          // Render the child dropdowns\n          _ddlTermSet.setItems(_termSetItems);\n        });\n      }\n    }); // Add the term sets dropdown\n\n    formControls.push({\n      label: \"Select a Term Set:\",\n      items: _termSetItems,\n      name: \"TermSetId\",\n      type: gd_bs_1.Components.FormControlTypes.Dropdown,\n      value: _wpInfo.cfg.TermSetId,\n      onControlRendered: function onControlRendered(control) {\n        // Save a reference to the dropdown\n        _ddlTermSet = control.dropdown;\n      },\n      onChange: function onChange(option) {\n        // Clear the dropdown\n        _termSetTermsItems = [];\n        _ddlTerm ? _ddlTerm.setItems([]) : null; // Update the configuration\n\n        _wpInfo.cfg.TermSetId = option ? option.value : \"\";\n        _wpInfo.cfg.TermSetName = option ? option.text : \"\";\n        _wpInfo.cfg.TermSetTermId = \"\";\n        _wpInfo.cfg.TermSetTermName = \"\"; // Call the change event\n\n        props.onTermSetChanged ? props.onTermSetChanged(_wpInfo, {\n          id: _wpInfo.cfg.TermSetId,\n          name: _wpInfo.cfg.TermSetName\n        }) : null; // See if we are loading the terms\n\n        if (props.showTermSetTerms) {\n          // Load the term set terms\n          loadTermSetTerms().then(function () {\n            // Render the child dropdowns\n            _ddlTerm.setItems(_termSetTermsItems);\n          });\n        }\n      }\n    }); // Ensure we are rendering the term set terms\n\n    if (props.showTermSetTerms) {\n      // Add the term set terms dropdown\n      formControls.push({\n        label: \"Select a Term Set Term:\",\n        items: _termSetTermsItems,\n        name: \"TermSetTermId\",\n        type: gd_bs_1.Components.FormControlTypes.Dropdown,\n        value: _wpInfo.cfg.TermSetTermId,\n        onControlRendered: function onControlRendered(control) {\n          // Save a reference to the dropdown\n          _ddlTerm = control.dropdown;\n        },\n        onChange: function onChange(option) {\n          // Update the configuration\n          _wpInfo.cfg.TermSetTermId = option ? option.value : \"\";\n          _wpInfo.cfg.TermSetTermName = option ? option.text : \"\"; // Call the change event\n\n          props.onTermSetTermChanged ? props.onTermSetTermChanged(_wpInfo, {\n            id: _wpInfo.cfg.TermSetTermId,\n            name: _wpInfo.cfg.TermSetTermName\n          }) : null;\n        }\n      });\n    } // Return the form controls\n\n\n    return formControls;\n  }; // Method to load the term groups\n\n\n  var loadTermGroups = function loadTermGroups() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the term groups\n      gd_sprest_1.Helper.Taxonomy.getTermGroups().then(function (groups) {\n        _termGroupItems = [{\n          text: \"\",\n          value: \"\"\n        }]; // Parse the groups\n\n        for (var i = 0; i < groups.length; i++) {\n          // Add the item\n          _termGroupItems.push({\n            text: groups[i].name,\n            value: groups[i].id\n          });\n        } // Load the term sets\n\n\n        loadTermSets().then(function () {\n          // Execute the term groups loaded event\n          _termGroupItems = props.onTermGroupsLoaded ? props.onTermGroupsLoaded(_wpInfo, _termGroupItems) : _termGroupItems; // Resolve the promise\n\n          resolve(generateFormControls());\n        });\n      });\n    });\n  }; // Method to load the term sets\n\n\n  var loadTermSets = function loadTermSets() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if a term group exists\n      if (_wpInfo.cfg.TermGroupName) {\n        // Load the term sets\n        gd_sprest_1.Helper.Taxonomy.getTermSets(_wpInfo.cfg.TermGroupName).then(function (termSets) {\n          _termSetItems = [{\n            text: \"\",\n            value: \"\"\n          }]; // Parse the term sets\n\n          for (var i = 0; i < termSets.length; i++) {\n            // Add the item\n            _termSetItems.push({\n              text: termSets[i].name,\n              value: termSets[i].id\n            });\n          } // Load the term set terms and resolve the promise\n\n\n          loadTermSetTerms().then(function () {\n            // Execute the term sets loaded event\n            _termSetItems = props.onTermSetsLoaded ? props.onTermSetsLoaded(_wpInfo, _termSetItems) : _termSetItems; // Resolve the promise\n\n            resolve();\n          });\n        });\n      } else {\n        // Resolve the promise\n        resolve();\n      }\n    });\n  }; // Method to load the term set terms\n\n\n  var loadTermSetTerms = function loadTermSetTerms() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure we are displaying term set terms and a term set is selected\n      if (props.showTermSetTerms && _wpInfo.cfg.TermSetId) {\n        // Load the term set terms\n        gd_sprest_1.Helper.Taxonomy.getTermSetByGroupName(_wpInfo.cfg.TermSetName, _wpInfo.cfg.TermGroupName).then(function (termSet) {\n          _termSetTermsItems = [{\n            text: \"\",\n            value: \"\"\n          }]; // Get the term set terms\n\n          var terms = gd_sprest_1.Helper.Taxonomy.toArray(termSet).sort(function (a, b) {\n            if (a.name < b.name) {\n              return -1;\n            }\n\n            if (a.name > b.name) {\n              return 1;\n            }\n\n            return 0;\n          }); // Parse the term set terms\n\n          for (var i = 0; i < terms.length; i++) {\n            // Add the item\n            _termSetTermsItems.push({\n              text: terms[i].name,\n              value: terms[i].id\n            });\n          } // Execute the term sets loaded event\n\n\n          _termSetTermsItems = props.onTermSetTermsLoaded ? props.onTermSetTermsLoaded(_wpInfo, _termSetTermsItems) : _termSetTermsItems; // Resolve the promise\n\n          resolve();\n        });\n      } else {\n        // Resolve the promise\n        resolve();\n      }\n    });\n  }; // Return the edit panel\n\n\n  return {\n    actions: props.actions,\n    onRenderForm: function onRenderForm(wpInfo) {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // Save the webpart information\n        _wpInfo = wpInfo; // Load the term groups\n\n        loadTermGroups().then(function (formControls) {\n          // Call the render form event\n          var returnVal = props.onRenderForm ? props.onRenderForm(_wpInfo) : null;\n\n          if (returnVal) {\n            // See if this is a promise\n            if (returnVal.then) {\n              // Wait for the promise to complete\n              returnVal.then(function (controls) {\n                if (controls === void 0) {\n                  controls = [];\n                } // Add the form controls\n\n\n                formControls = formControls.concat(controls); // Resolve the promise\n\n                resolve(formControls);\n              });\n            } // Else, see if the form controls exist\n            else if (returnVal.length > 0) {\n                // Add the form controls\n                formControls = formControls.concat(returnVal); // Resolve the promise\n\n                resolve(formControls);\n              } // Else, resolve the promise\n              else {\n                  resolve(formControls);\n                }\n          } // Else, resolve the promise\n          else {\n              resolve(formControls);\n            }\n        });\n      });\n    },\n    onSave: function onSave(cfg, form) {\n      // Update the configuration\n      cfg.TermGroupId = _wpInfo.cfg.TermGroupId;\n      cfg.TermGroupName = _wpInfo.cfg.TermGroupName;\n      cfg.TermSetId = _wpInfo.cfg.TermSetId;\n      cfg.TermSetName = _wpInfo.cfg.TermSetName;\n      cfg.TermSetTermId = _wpInfo.cfg.TermSetTermId;\n      cfg.TermSetTermName = _wpInfo.cfg.TermSetTermName; // Return the configuration\n\n      return props.onSave ? props.onSave(_wpInfo.cfg, form) : _wpInfo.cfg;\n    }\n  };\n};\n\n//# sourceURL=webpack://gd-sprest-bs/./build/webparts/taxonomy/wpCfg.js?");

/***/ }),

/***/ "./node_modules/.pnpm/flatpickr@4.6.9/node_modules/flatpickr/dist/flatpickr.min.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/flatpickr@4.6.9/node_modules/flatpickr/dist/flatpickr.min.js ***!
  \*****************************************************************************************/
/***/ (function(module) {

eval("/* flatpickr v4.6.9,, @license MIT */\n!function(e,t){ true?module.exports=t():0}(this,(function(){\"use strict\";var e=function(){return(e=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function t(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var a=Array(e),i=0;for(t=0;t<n;t++)for(var o=arguments[t],r=0,l=o.length;r<l;r++,i++)a[i]=o[r];return a}var n=[\"onChange\",\"onClose\",\"onDayCreate\",\"onDestroy\",\"onKeyDown\",\"onMonthChange\",\"onOpen\",\"onParseConfig\",\"onReady\",\"onValueUpdate\",\"onYearChange\",\"onPreCalendarPosition\"],a={_disable:[],allowInput:!1,allowInvalidPreload:!1,altFormat:\"F j, Y\",altInput:!1,altInputClass:\"form-control input\",animate:\"object\"==typeof window&&-1===window.navigator.userAgent.indexOf(\"MSIE\"),ariaDateFormat:\"F j, Y\",autoFillDefaultTime:!0,clickOpens:!0,closeOnSelect:!0,conjunction:\", \",dateFormat:\"Y-m-d\",defaultHour:12,defaultMinute:0,defaultSeconds:0,disable:[],disableMobile:!1,enableSeconds:!1,enableTime:!1,errorHandler:function(e){return\"undefined\"!=typeof console&&console.warn(e)},getWeek:function(e){var t=new Date(e.getTime());t.setHours(0,0,0,0),t.setDate(t.getDate()+3-(t.getDay()+6)%7);var n=new Date(t.getFullYear(),0,4);return 1+Math.round(((t.getTime()-n.getTime())/864e5-3+(n.getDay()+6)%7)/7)},hourIncrement:1,ignoredFocusElements:[],inline:!1,locale:\"default\",minuteIncrement:5,mode:\"single\",monthSelectorType:\"dropdown\",nextArrow:\"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",noCalendar:!1,now:new Date,onChange:[],onClose:[],onDayCreate:[],onDestroy:[],onKeyDown:[],onMonthChange:[],onOpen:[],onParseConfig:[],onReady:[],onValueUpdate:[],onYearChange:[],onPreCalendarPosition:[],plugins:[],position:\"auto\",positionElement:void 0,prevArrow:\"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",shorthandCurrentMonth:!1,showMonths:1,static:!1,time_24hr:!1,weekNumbers:!1,wrap:!1},i={weekdays:{shorthand:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],longhand:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},months:{shorthand:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],longhand:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},daysInMonth:[31,28,31,30,31,30,31,31,30,31,30,31],firstDayOfWeek:0,ordinal:function(e){var t=e%100;if(t>3&&t<21)return\"th\";switch(t%10){case 1:return\"st\";case 2:return\"nd\";case 3:return\"rd\";default:return\"th\"}},rangeSeparator:\" to \",weekAbbreviation:\"Wk\",scrollTitle:\"Scroll to increment\",toggleTitle:\"Click to toggle\",amPM:[\"AM\",\"PM\"],yearAriaLabel:\"Year\",monthAriaLabel:\"Month\",hourAriaLabel:\"Hour\",minuteAriaLabel:\"Minute\",time_24hr:!1},o=function(e,t){return void 0===t&&(t=2),(\"000\"+e).slice(-1*t)},r=function(e){return!0===e?1:0};function l(e,t){var n;return function(){var a=this;clearTimeout(n),n=setTimeout((function(){return e.apply(a,arguments)}),t)}}var c=function(e){return e instanceof Array?e:[e]};function d(e,t,n){if(!0===n)return e.classList.add(t);e.classList.remove(t)}function s(e,t,n){var a=window.document.createElement(e);return t=t||\"\",n=n||\"\",a.className=t,void 0!==n&&(a.textContent=n),a}function u(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function f(e,t){return t(e)?e:e.parentNode?f(e.parentNode,t):void 0}function m(e,t){var n=s(\"div\",\"numInputWrapper\"),a=s(\"input\",\"numInput \"+e),i=s(\"span\",\"arrowUp\"),o=s(\"span\",\"arrowDown\");if(-1===navigator.userAgent.indexOf(\"MSIE 9.0\")?a.type=\"number\":(a.type=\"text\",a.pattern=\"\\\\d*\"),void 0!==t)for(var r in t)a.setAttribute(r,t[r]);return n.appendChild(a),n.appendChild(i),n.appendChild(o),n}function g(e){try{return\"function\"==typeof e.composedPath?e.composedPath()[0]:e.target}catch(t){return e.target}}var p=function(){},h=function(e,t,n){return n.months[t?\"shorthand\":\"longhand\"][e]},v={D:p,F:function(e,t,n){e.setMonth(n.months.longhand.indexOf(t))},G:function(e,t){e.setHours(parseFloat(t))},H:function(e,t){e.setHours(parseFloat(t))},J:function(e,t){e.setDate(parseFloat(t))},K:function(e,t,n){e.setHours(e.getHours()%12+12*r(new RegExp(n.amPM[1],\"i\").test(t)))},M:function(e,t,n){e.setMonth(n.months.shorthand.indexOf(t))},S:function(e,t){e.setSeconds(parseFloat(t))},U:function(e,t){return new Date(1e3*parseFloat(t))},W:function(e,t,n){var a=parseInt(t),i=new Date(e.getFullYear(),0,2+7*(a-1),0,0,0,0);return i.setDate(i.getDate()-i.getDay()+n.firstDayOfWeek),i},Y:function(e,t){e.setFullYear(parseFloat(t))},Z:function(e,t){return new Date(t)},d:function(e,t){e.setDate(parseFloat(t))},h:function(e,t){e.setHours(parseFloat(t))},i:function(e,t){e.setMinutes(parseFloat(t))},j:function(e,t){e.setDate(parseFloat(t))},l:p,m:function(e,t){e.setMonth(parseFloat(t)-1)},n:function(e,t){e.setMonth(parseFloat(t)-1)},s:function(e,t){e.setSeconds(parseFloat(t))},u:function(e,t){return new Date(parseFloat(t))},w:p,y:function(e,t){e.setFullYear(2e3+parseFloat(t))}},D={D:\"(\\\\w+)\",F:\"(\\\\w+)\",G:\"(\\\\d\\\\d|\\\\d)\",H:\"(\\\\d\\\\d|\\\\d)\",J:\"(\\\\d\\\\d|\\\\d)\\\\w+\",K:\"\",M:\"(\\\\w+)\",S:\"(\\\\d\\\\d|\\\\d)\",U:\"(.+)\",W:\"(\\\\d\\\\d|\\\\d)\",Y:\"(\\\\d{4})\",Z:\"(.+)\",d:\"(\\\\d\\\\d|\\\\d)\",h:\"(\\\\d\\\\d|\\\\d)\",i:\"(\\\\d\\\\d|\\\\d)\",j:\"(\\\\d\\\\d|\\\\d)\",l:\"(\\\\w+)\",m:\"(\\\\d\\\\d|\\\\d)\",n:\"(\\\\d\\\\d|\\\\d)\",s:\"(\\\\d\\\\d|\\\\d)\",u:\"(.+)\",w:\"(\\\\d\\\\d|\\\\d)\",y:\"(\\\\d{2})\"},w={Z:function(e){return e.toISOString()},D:function(e,t,n){return t.weekdays.shorthand[w.w(e,t,n)]},F:function(e,t,n){return h(w.n(e,t,n)-1,!1,t)},G:function(e,t,n){return o(w.h(e,t,n))},H:function(e){return o(e.getHours())},J:function(e,t){return void 0!==t.ordinal?e.getDate()+t.ordinal(e.getDate()):e.getDate()},K:function(e,t){return t.amPM[r(e.getHours()>11)]},M:function(e,t){return h(e.getMonth(),!0,t)},S:function(e){return o(e.getSeconds())},U:function(e){return e.getTime()/1e3},W:function(e,t,n){return n.getWeek(e)},Y:function(e){return o(e.getFullYear(),4)},d:function(e){return o(e.getDate())},h:function(e){return e.getHours()%12?e.getHours()%12:12},i:function(e){return o(e.getMinutes())},j:function(e){return e.getDate()},l:function(e,t){return t.weekdays.longhand[e.getDay()]},m:function(e){return o(e.getMonth()+1)},n:function(e){return e.getMonth()+1},s:function(e){return e.getSeconds()},u:function(e){return e.getTime()},w:function(e){return e.getDay()},y:function(e){return String(e.getFullYear()).substring(2)}},b=function(e){var t=e.config,n=void 0===t?a:t,o=e.l10n,r=void 0===o?i:o,l=e.isMobile,c=void 0!==l&&l;return function(e,t,a){var i=a||r;return void 0===n.formatDate||c?t.split(\"\").map((function(t,a,o){return w[t]&&\"\\\\\"!==o[a-1]?w[t](e,i,n):\"\\\\\"!==t?t:\"\"})).join(\"\"):n.formatDate(e,t,i)}},C=function(e){var t=e.config,n=void 0===t?a:t,o=e.l10n,r=void 0===o?i:o;return function(e,t,i,o){if(0===e||e){var l,c=o||r,d=e;if(e instanceof Date)l=new Date(e.getTime());else if(\"string\"!=typeof e&&void 0!==e.toFixed)l=new Date(e);else if(\"string\"==typeof e){var s=t||(n||a).dateFormat,u=String(e).trim();if(\"today\"===u)l=new Date,i=!0;else if(/Z$/.test(u)||/GMT$/.test(u))l=new Date(e);else if(n&&n.parseDate)l=n.parseDate(e,s);else{l=n&&n.noCalendar?new Date((new Date).setHours(0,0,0,0)):new Date((new Date).getFullYear(),0,1,0,0,0,0);for(var f=void 0,m=[],g=0,p=0,h=\"\";g<s.length;g++){var w=s[g],b=\"\\\\\"===w,C=\"\\\\\"===s[g-1]||b;if(D[w]&&!C){h+=D[w];var M=new RegExp(h).exec(e);M&&(f=!0)&&m[\"Y\"!==w?\"push\":\"unshift\"]({fn:v[w],val:M[++p]})}else b||(h+=\".\");m.forEach((function(e){var t=e.fn,n=e.val;return l=t(l,n,c)||l}))}l=f?l:void 0}}if(l instanceof Date&&!isNaN(l.getTime()))return!0===i&&l.setHours(0,0,0,0),l;n.errorHandler(new Error(\"Invalid date provided: \"+d))}}};function M(e,t,n){return void 0===n&&(n=!0),!1!==n?new Date(e.getTime()).setHours(0,0,0,0)-new Date(t.getTime()).setHours(0,0,0,0):e.getTime()-t.getTime()}var y=864e5;function x(e){var t=e.defaultHour,n=e.defaultMinute,a=e.defaultSeconds;if(void 0!==e.minDate){var i=e.minDate.getHours(),o=e.minDate.getMinutes(),r=e.minDate.getSeconds();t<i&&(t=i),t===i&&n<o&&(n=o),t===i&&n===o&&a<r&&(a=e.minDate.getSeconds())}if(void 0!==e.maxDate){var l=e.maxDate.getHours(),c=e.maxDate.getMinutes();(t=Math.min(t,l))===l&&(n=Math.min(c,n)),t===l&&n===c&&(a=e.maxDate.getSeconds())}return{hours:t,minutes:n,seconds:a}}\"function\"!=typeof Object.assign&&(Object.assign=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(!e)throw TypeError(\"Cannot convert undefined or null to object\");for(var a=function(t){t&&Object.keys(t).forEach((function(n){return e[n]=t[n]}))},i=0,o=t;i<o.length;i++){var r=o[i];a(r)}return e});function E(p,v){var w={config:e(e({},a),T.defaultConfig),l10n:i};function E(e){return e.bind(w)}function k(){var e=w.config;!1===e.weekNumbers&&1===e.showMonths||!0!==e.noCalendar&&window.requestAnimationFrame((function(){if(void 0!==w.calendarContainer&&(w.calendarContainer.style.visibility=\"hidden\",w.calendarContainer.style.display=\"block\"),void 0!==w.daysContainer){var t=(w.days.offsetWidth+1)*e.showMonths;w.daysContainer.style.width=t+\"px\",w.calendarContainer.style.width=t+(void 0!==w.weekWrapper?w.weekWrapper.offsetWidth:0)+\"px\",w.calendarContainer.style.removeProperty(\"visibility\"),w.calendarContainer.style.removeProperty(\"display\")}}))}function I(e){if(0===w.selectedDates.length){var t=void 0===w.config.minDate||M(new Date,w.config.minDate)>=0?new Date:new Date(w.config.minDate.getTime()),n=x(w.config);t.setHours(n.hours,n.minutes,n.seconds,t.getMilliseconds()),w.selectedDates=[t],w.latestSelectedDateObj=t}void 0!==e&&\"blur\"!==e.type&&function(e){e.preventDefault();var t=\"keydown\"===e.type,n=g(e),a=n;void 0!==w.amPM&&n===w.amPM&&(w.amPM.textContent=w.l10n.amPM[r(w.amPM.textContent===w.l10n.amPM[0])]);var i=parseFloat(a.getAttribute(\"min\")),l=parseFloat(a.getAttribute(\"max\")),c=parseFloat(a.getAttribute(\"step\")),d=parseInt(a.value,10),s=e.delta||(t?38===e.which?1:-1:0),u=d+c*s;if(void 0!==a.value&&2===a.value.length){var f=a===w.hourElement,m=a===w.minuteElement;u<i?(u=l+u+r(!f)+(r(f)&&r(!w.amPM)),m&&j(void 0,-1,w.hourElement)):u>l&&(u=a===w.hourElement?u-l-r(!w.amPM):i,m&&j(void 0,1,w.hourElement)),w.amPM&&f&&(1===c?u+d===23:Math.abs(u-d)>c)&&(w.amPM.textContent=w.l10n.amPM[r(w.amPM.textContent===w.l10n.amPM[0])]),a.value=o(u)}}(e);var a=w._input.value;S(),be(),w._input.value!==a&&w._debouncedChange()}function S(){if(void 0!==w.hourElement&&void 0!==w.minuteElement){var e,t,n=(parseInt(w.hourElement.value.slice(-2),10)||0)%24,a=(parseInt(w.minuteElement.value,10)||0)%60,i=void 0!==w.secondElement?(parseInt(w.secondElement.value,10)||0)%60:0;void 0!==w.amPM&&(e=n,t=w.amPM.textContent,n=e%12+12*r(t===w.l10n.amPM[1]));var o=void 0!==w.config.minTime||w.config.minDate&&w.minDateHasTime&&w.latestSelectedDateObj&&0===M(w.latestSelectedDateObj,w.config.minDate,!0);if(void 0!==w.config.maxTime||w.config.maxDate&&w.maxDateHasTime&&w.latestSelectedDateObj&&0===M(w.latestSelectedDateObj,w.config.maxDate,!0)){var l=void 0!==w.config.maxTime?w.config.maxTime:w.config.maxDate;(n=Math.min(n,l.getHours()))===l.getHours()&&(a=Math.min(a,l.getMinutes())),a===l.getMinutes()&&(i=Math.min(i,l.getSeconds()))}if(o){var c=void 0!==w.config.minTime?w.config.minTime:w.config.minDate;(n=Math.max(n,c.getHours()))===c.getHours()&&a<c.getMinutes()&&(a=c.getMinutes()),a===c.getMinutes()&&(i=Math.max(i,c.getSeconds()))}O(n,a,i)}}function _(e){var t=e||w.latestSelectedDateObj;t&&O(t.getHours(),t.getMinutes(),t.getSeconds())}function O(e,t,n){void 0!==w.latestSelectedDateObj&&w.latestSelectedDateObj.setHours(e%24,t,n||0,0),w.hourElement&&w.minuteElement&&!w.isMobile&&(w.hourElement.value=o(w.config.time_24hr?e:(12+e)%12+12*r(e%12==0)),w.minuteElement.value=o(t),void 0!==w.amPM&&(w.amPM.textContent=w.l10n.amPM[r(e>=12)]),void 0!==w.secondElement&&(w.secondElement.value=o(n)))}function F(e){var t=g(e),n=parseInt(t.value)+(e.delta||0);(n/1e3>1||\"Enter\"===e.key&&!/[^\\d]/.test(n.toString()))&&Q(n)}function A(e,t,n,a){return t instanceof Array?t.forEach((function(t){return A(e,t,n,a)})):e instanceof Array?e.forEach((function(e){return A(e,t,n,a)})):(e.addEventListener(t,n,a),void w._handlers.push({remove:function(){return e.removeEventListener(t,n)}}))}function N(){pe(\"onChange\")}function P(e,t){var n=void 0!==e?w.parseDate(e):w.latestSelectedDateObj||(w.config.minDate&&w.config.minDate>w.now?w.config.minDate:w.config.maxDate&&w.config.maxDate<w.now?w.config.maxDate:w.now),a=w.currentYear,i=w.currentMonth;try{void 0!==n&&(w.currentYear=n.getFullYear(),w.currentMonth=n.getMonth())}catch(e){e.message=\"Invalid date supplied: \"+n,w.config.errorHandler(e)}t&&w.currentYear!==a&&(pe(\"onYearChange\"),K()),!t||w.currentYear===a&&w.currentMonth===i||pe(\"onMonthChange\"),w.redraw()}function Y(e){var t=g(e);~t.className.indexOf(\"arrow\")&&j(e,t.classList.contains(\"arrowUp\")?1:-1)}function j(e,t,n){var a=e&&g(e),i=n||a&&a.parentNode&&a.parentNode.firstChild,o=he(\"increment\");o.delta=t,i&&i.dispatchEvent(o)}function H(e,t,n,a){var i=X(t,!0),o=s(\"span\",\"flatpickr-day \"+e,t.getDate().toString());return o.dateObj=t,o.$i=a,o.setAttribute(\"aria-label\",w.formatDate(t,w.config.ariaDateFormat)),-1===e.indexOf(\"hidden\")&&0===M(t,w.now)&&(w.todayDateElem=o,o.classList.add(\"today\"),o.setAttribute(\"aria-current\",\"date\")),i?(o.tabIndex=-1,ve(t)&&(o.classList.add(\"selected\"),w.selectedDateElem=o,\"range\"===w.config.mode&&(d(o,\"startRange\",w.selectedDates[0]&&0===M(t,w.selectedDates[0],!0)),d(o,\"endRange\",w.selectedDates[1]&&0===M(t,w.selectedDates[1],!0)),\"nextMonthDay\"===e&&o.classList.add(\"inRange\")))):o.classList.add(\"flatpickr-disabled\"),\"range\"===w.config.mode&&function(e){return!(\"range\"!==w.config.mode||w.selectedDates.length<2)&&(M(e,w.selectedDates[0])>=0&&M(e,w.selectedDates[1])<=0)}(t)&&!ve(t)&&o.classList.add(\"inRange\"),w.weekNumbers&&1===w.config.showMonths&&\"prevMonthDay\"!==e&&n%7==1&&w.weekNumbers.insertAdjacentHTML(\"beforeend\",\"<span class='flatpickr-day'>\"+w.config.getWeek(t)+\"</span>\"),pe(\"onDayCreate\",o),o}function L(e){e.focus(),\"range\"===w.config.mode&&ae(e)}function W(e){for(var t=e>0?0:w.config.showMonths-1,n=e>0?w.config.showMonths:-1,a=t;a!=n;a+=e)for(var i=w.daysContainer.children[a],o=e>0?0:i.children.length-1,r=e>0?i.children.length:-1,l=o;l!=r;l+=e){var c=i.children[l];if(-1===c.className.indexOf(\"hidden\")&&X(c.dateObj))return c}}function R(e,t){var n=ee(document.activeElement||document.body),a=void 0!==e?e:n?document.activeElement:void 0!==w.selectedDateElem&&ee(w.selectedDateElem)?w.selectedDateElem:void 0!==w.todayDateElem&&ee(w.todayDateElem)?w.todayDateElem:W(t>0?1:-1);void 0===a?w._input.focus():n?function(e,t){for(var n=-1===e.className.indexOf(\"Month\")?e.dateObj.getMonth():w.currentMonth,a=t>0?w.config.showMonths:-1,i=t>0?1:-1,o=n-w.currentMonth;o!=a;o+=i)for(var r=w.daysContainer.children[o],l=n-w.currentMonth===o?e.$i+t:t<0?r.children.length-1:0,c=r.children.length,d=l;d>=0&&d<c&&d!=(t>0?c:-1);d+=i){var s=r.children[d];if(-1===s.className.indexOf(\"hidden\")&&X(s.dateObj)&&Math.abs(e.$i-d)>=Math.abs(t))return L(s)}w.changeMonth(i),R(W(i),0)}(a,t):L(a)}function B(e,t){for(var n=(new Date(e,t,1).getDay()-w.l10n.firstDayOfWeek+7)%7,a=w.utils.getDaysInMonth((t-1+12)%12,e),i=w.utils.getDaysInMonth(t,e),o=window.document.createDocumentFragment(),r=w.config.showMonths>1,l=r?\"prevMonthDay hidden\":\"prevMonthDay\",c=r?\"nextMonthDay hidden\":\"nextMonthDay\",d=a+1-n,u=0;d<=a;d++,u++)o.appendChild(H(l,new Date(e,t-1,d),d,u));for(d=1;d<=i;d++,u++)o.appendChild(H(\"\",new Date(e,t,d),d,u));for(var f=i+1;f<=42-n&&(1===w.config.showMonths||u%7!=0);f++,u++)o.appendChild(H(c,new Date(e,t+1,f%i),f,u));var m=s(\"div\",\"dayContainer\");return m.appendChild(o),m}function J(){if(void 0!==w.daysContainer){u(w.daysContainer),w.weekNumbers&&u(w.weekNumbers);for(var e=document.createDocumentFragment(),t=0;t<w.config.showMonths;t++){var n=new Date(w.currentYear,w.currentMonth,1);n.setMonth(w.currentMonth+t),e.appendChild(B(n.getFullYear(),n.getMonth()))}w.daysContainer.appendChild(e),w.days=w.daysContainer.firstChild,\"range\"===w.config.mode&&1===w.selectedDates.length&&ae()}}function K(){if(!(w.config.showMonths>1||\"dropdown\"!==w.config.monthSelectorType)){var e=function(e){return!(void 0!==w.config.minDate&&w.currentYear===w.config.minDate.getFullYear()&&e<w.config.minDate.getMonth())&&!(void 0!==w.config.maxDate&&w.currentYear===w.config.maxDate.getFullYear()&&e>w.config.maxDate.getMonth())};w.monthsDropdownContainer.tabIndex=-1,w.monthsDropdownContainer.innerHTML=\"\";for(var t=0;t<12;t++)if(e(t)){var n=s(\"option\",\"flatpickr-monthDropdown-month\");n.value=new Date(w.currentYear,t).getMonth().toString(),n.textContent=h(t,w.config.shorthandCurrentMonth,w.l10n),n.tabIndex=-1,w.currentMonth===t&&(n.selected=!0),w.monthsDropdownContainer.appendChild(n)}}}function U(){var e,t=s(\"div\",\"flatpickr-month\"),n=window.document.createDocumentFragment();w.config.showMonths>1||\"static\"===w.config.monthSelectorType?e=s(\"span\",\"cur-month\"):(w.monthsDropdownContainer=s(\"select\",\"flatpickr-monthDropdown-months\"),w.monthsDropdownContainer.setAttribute(\"aria-label\",w.l10n.monthAriaLabel),A(w.monthsDropdownContainer,\"change\",(function(e){var t=g(e),n=parseInt(t.value,10);w.changeMonth(n-w.currentMonth),pe(\"onMonthChange\")})),K(),e=w.monthsDropdownContainer);var a=m(\"cur-year\",{tabindex:\"-1\"}),i=a.getElementsByTagName(\"input\")[0];i.setAttribute(\"aria-label\",w.l10n.yearAriaLabel),w.config.minDate&&i.setAttribute(\"min\",w.config.minDate.getFullYear().toString()),w.config.maxDate&&(i.setAttribute(\"max\",w.config.maxDate.getFullYear().toString()),i.disabled=!!w.config.minDate&&w.config.minDate.getFullYear()===w.config.maxDate.getFullYear());var o=s(\"div\",\"flatpickr-current-month\");return o.appendChild(e),o.appendChild(a),n.appendChild(o),t.appendChild(n),{container:t,yearElement:i,monthElement:e}}function q(){u(w.monthNav),w.monthNav.appendChild(w.prevMonthNav),w.config.showMonths&&(w.yearElements=[],w.monthElements=[]);for(var e=w.config.showMonths;e--;){var t=U();w.yearElements.push(t.yearElement),w.monthElements.push(t.monthElement),w.monthNav.appendChild(t.container)}w.monthNav.appendChild(w.nextMonthNav)}function $(){w.weekdayContainer?u(w.weekdayContainer):w.weekdayContainer=s(\"div\",\"flatpickr-weekdays\");for(var e=w.config.showMonths;e--;){var t=s(\"div\",\"flatpickr-weekdaycontainer\");w.weekdayContainer.appendChild(t)}return z(),w.weekdayContainer}function z(){if(w.weekdayContainer){var e=w.l10n.firstDayOfWeek,n=t(w.l10n.weekdays.shorthand);e>0&&e<n.length&&(n=t(n.splice(e,n.length),n.splice(0,e)));for(var a=w.config.showMonths;a--;)w.weekdayContainer.children[a].innerHTML=\"\\n      <span class='flatpickr-weekday'>\\n        \"+n.join(\"</span><span class='flatpickr-weekday'>\")+\"\\n      </span>\\n      \"}}function G(e,t){void 0===t&&(t=!0);var n=t?e:e-w.currentMonth;n<0&&!0===w._hidePrevMonthArrow||n>0&&!0===w._hideNextMonthArrow||(w.currentMonth+=n,(w.currentMonth<0||w.currentMonth>11)&&(w.currentYear+=w.currentMonth>11?1:-1,w.currentMonth=(w.currentMonth+12)%12,pe(\"onYearChange\"),K()),J(),pe(\"onMonthChange\"),De())}function V(e){return!(!w.config.appendTo||!w.config.appendTo.contains(e))||w.calendarContainer.contains(e)}function Z(e){if(w.isOpen&&!w.config.inline){var t=g(e),n=V(t),a=t===w.input||t===w.altInput||w.element.contains(t)||e.path&&e.path.indexOf&&(~e.path.indexOf(w.input)||~e.path.indexOf(w.altInput)),i=\"blur\"===e.type?a&&e.relatedTarget&&!V(e.relatedTarget):!a&&!n&&!V(e.relatedTarget),o=!w.config.ignoredFocusElements.some((function(e){return e.contains(t)}));i&&o&&(void 0!==w.timeContainer&&void 0!==w.minuteElement&&void 0!==w.hourElement&&\"\"!==w.input.value&&void 0!==w.input.value&&I(),w.close(),w.config&&\"range\"===w.config.mode&&1===w.selectedDates.length&&(w.clear(!1),w.redraw()))}}function Q(e){if(!(!e||w.config.minDate&&e<w.config.minDate.getFullYear()||w.config.maxDate&&e>w.config.maxDate.getFullYear())){var t=e,n=w.currentYear!==t;w.currentYear=t||w.currentYear,w.config.maxDate&&w.currentYear===w.config.maxDate.getFullYear()?w.currentMonth=Math.min(w.config.maxDate.getMonth(),w.currentMonth):w.config.minDate&&w.currentYear===w.config.minDate.getFullYear()&&(w.currentMonth=Math.max(w.config.minDate.getMonth(),w.currentMonth)),n&&(w.redraw(),pe(\"onYearChange\"),K())}}function X(e,t){var n;void 0===t&&(t=!0);var a=w.parseDate(e,void 0,t);if(w.config.minDate&&a&&M(a,w.config.minDate,void 0!==t?t:!w.minDateHasTime)<0||w.config.maxDate&&a&&M(a,w.config.maxDate,void 0!==t?t:!w.maxDateHasTime)>0)return!1;if(!w.config.enable&&0===w.config.disable.length)return!0;if(void 0===a)return!1;for(var i=!!w.config.enable,o=null!==(n=w.config.enable)&&void 0!==n?n:w.config.disable,r=0,l=void 0;r<o.length;r++){if(\"function\"==typeof(l=o[r])&&l(a))return i;if(l instanceof Date&&void 0!==a&&l.getTime()===a.getTime())return i;if(\"string\"==typeof l){var c=w.parseDate(l,void 0,!0);return c&&c.getTime()===a.getTime()?i:!i}if(\"object\"==typeof l&&void 0!==a&&l.from&&l.to&&a.getTime()>=l.from.getTime()&&a.getTime()<=l.to.getTime())return i}return!i}function ee(e){return void 0!==w.daysContainer&&(-1===e.className.indexOf(\"hidden\")&&-1===e.className.indexOf(\"flatpickr-disabled\")&&w.daysContainer.contains(e))}function te(e){!(e.target===w._input)||!(w.selectedDates.length>0||w._input.value.length>0)||e.relatedTarget&&V(e.relatedTarget)||w.setDate(w._input.value,!0,e.target===w.altInput?w.config.altFormat:w.config.dateFormat)}function ne(e){var t=g(e),n=w.config.wrap?p.contains(t):t===w._input,a=w.config.allowInput,i=w.isOpen&&(!a||!n),o=w.config.inline&&n&&!a;if(13===e.keyCode&&n){if(a)return w.setDate(w._input.value,!0,t===w.altInput?w.config.altFormat:w.config.dateFormat),t.blur();w.open()}else if(V(t)||i||o){var r=!!w.timeContainer&&w.timeContainer.contains(t);switch(e.keyCode){case 13:r?(e.preventDefault(),I(),se()):ue(e);break;case 27:e.preventDefault(),se();break;case 8:case 46:n&&!w.config.allowInput&&(e.preventDefault(),w.clear());break;case 37:case 39:if(r||n)w.hourElement&&w.hourElement.focus();else if(e.preventDefault(),void 0!==w.daysContainer&&(!1===a||document.activeElement&&ee(document.activeElement))){var l=39===e.keyCode?1:-1;e.ctrlKey?(e.stopPropagation(),G(l),R(W(1),0)):R(void 0,l)}break;case 38:case 40:e.preventDefault();var c=40===e.keyCode?1:-1;w.daysContainer&&void 0!==t.$i||t===w.input||t===w.altInput?e.ctrlKey?(e.stopPropagation(),Q(w.currentYear-c),R(W(1),0)):r||R(void 0,7*c):t===w.currentYearElement?Q(w.currentYear-c):w.config.enableTime&&(!r&&w.hourElement&&w.hourElement.focus(),I(e),w._debouncedChange());break;case 9:if(r){var d=[w.hourElement,w.minuteElement,w.secondElement,w.amPM].concat(w.pluginElements).filter((function(e){return e})),s=d.indexOf(t);if(-1!==s){var u=d[s+(e.shiftKey?-1:1)];e.preventDefault(),(u||w._input).focus()}}else!w.config.noCalendar&&w.daysContainer&&w.daysContainer.contains(t)&&e.shiftKey&&(e.preventDefault(),w._input.focus())}}if(void 0!==w.amPM&&t===w.amPM)switch(e.key){case w.l10n.amPM[0].charAt(0):case w.l10n.amPM[0].charAt(0).toLowerCase():w.amPM.textContent=w.l10n.amPM[0],S(),be();break;case w.l10n.amPM[1].charAt(0):case w.l10n.amPM[1].charAt(0).toLowerCase():w.amPM.textContent=w.l10n.amPM[1],S(),be()}(n||V(t))&&pe(\"onKeyDown\",e)}function ae(e){if(1===w.selectedDates.length&&(!e||e.classList.contains(\"flatpickr-day\")&&!e.classList.contains(\"flatpickr-disabled\"))){for(var t=e?e.dateObj.getTime():w.days.firstElementChild.dateObj.getTime(),n=w.parseDate(w.selectedDates[0],void 0,!0).getTime(),a=Math.min(t,w.selectedDates[0].getTime()),i=Math.max(t,w.selectedDates[0].getTime()),o=!1,r=0,l=0,c=a;c<i;c+=y)X(new Date(c),!0)||(o=o||c>a&&c<i,c<n&&(!r||c>r)?r=c:c>n&&(!l||c<l)&&(l=c));for(var d=0;d<w.config.showMonths;d++)for(var s=w.daysContainer.children[d],u=function(a,i){var c,d,u,f=s.children[a],m=f.dateObj.getTime(),g=r>0&&m<r||l>0&&m>l;return g?(f.classList.add(\"notAllowed\"),[\"inRange\",\"startRange\",\"endRange\"].forEach((function(e){f.classList.remove(e)})),\"continue\"):o&&!g?\"continue\":([\"startRange\",\"inRange\",\"endRange\",\"notAllowed\"].forEach((function(e){f.classList.remove(e)})),void(void 0!==e&&(e.classList.add(t<=w.selectedDates[0].getTime()?\"startRange\":\"endRange\"),n<t&&m===n?f.classList.add(\"startRange\"):n>t&&m===n&&f.classList.add(\"endRange\"),m>=r&&(0===l||m<=l)&&(d=n,u=t,(c=m)>Math.min(d,u)&&c<Math.max(d,u))&&f.classList.add(\"inRange\"))))},f=0,m=s.children.length;f<m;f++)u(f)}}function ie(){!w.isOpen||w.config.static||w.config.inline||ce()}function oe(e){return function(t){var n=w.config[\"_\"+e+\"Date\"]=w.parseDate(t,w.config.dateFormat),a=w.config[\"_\"+(\"min\"===e?\"max\":\"min\")+\"Date\"];void 0!==n&&(w[\"min\"===e?\"minDateHasTime\":\"maxDateHasTime\"]=n.getHours()>0||n.getMinutes()>0||n.getSeconds()>0),w.selectedDates&&(w.selectedDates=w.selectedDates.filter((function(e){return X(e)})),w.selectedDates.length||\"min\"!==e||_(n),be()),w.daysContainer&&(de(),void 0!==n?w.currentYearElement[e]=n.getFullYear().toString():w.currentYearElement.removeAttribute(e),w.currentYearElement.disabled=!!a&&void 0!==n&&a.getFullYear()===n.getFullYear())}}function re(){return w.config.wrap?p.querySelector(\"[data-input]\"):p}function le(){\"object\"!=typeof w.config.locale&&void 0===T.l10ns[w.config.locale]&&w.config.errorHandler(new Error(\"flatpickr: invalid locale \"+w.config.locale)),w.l10n=e(e({},T.l10ns.default),\"object\"==typeof w.config.locale?w.config.locale:\"default\"!==w.config.locale?T.l10ns[w.config.locale]:void 0),D.K=\"(\"+w.l10n.amPM[0]+\"|\"+w.l10n.amPM[1]+\"|\"+w.l10n.amPM[0].toLowerCase()+\"|\"+w.l10n.amPM[1].toLowerCase()+\")\",void 0===e(e({},v),JSON.parse(JSON.stringify(p.dataset||{}))).time_24hr&&void 0===T.defaultConfig.time_24hr&&(w.config.time_24hr=w.l10n.time_24hr),w.formatDate=b(w),w.parseDate=C({config:w.config,l10n:w.l10n})}function ce(e){if(\"function\"!=typeof w.config.position){if(void 0!==w.calendarContainer){pe(\"onPreCalendarPosition\");var t=e||w._positionElement,n=Array.prototype.reduce.call(w.calendarContainer.children,(function(e,t){return e+t.offsetHeight}),0),a=w.calendarContainer.offsetWidth,i=w.config.position.split(\" \"),o=i[0],r=i.length>1?i[1]:null,l=t.getBoundingClientRect(),c=window.innerHeight-l.bottom,s=\"above\"===o||\"below\"!==o&&c<n&&l.top>n,u=window.pageYOffset+l.top+(s?-n-2:t.offsetHeight+2);if(d(w.calendarContainer,\"arrowTop\",!s),d(w.calendarContainer,\"arrowBottom\",s),!w.config.inline){var f=window.pageXOffset+l.left,m=!1,g=!1;\"center\"===r?(f-=(a-l.width)/2,m=!0):\"right\"===r&&(f-=a-l.width,g=!0),d(w.calendarContainer,\"arrowLeft\",!m&&!g),d(w.calendarContainer,\"arrowCenter\",m),d(w.calendarContainer,\"arrowRight\",g);var p=window.document.body.offsetWidth-(window.pageXOffset+l.right),h=f+a>window.document.body.offsetWidth,v=p+a>window.document.body.offsetWidth;if(d(w.calendarContainer,\"rightMost\",h),!w.config.static)if(w.calendarContainer.style.top=u+\"px\",h)if(v){var D=function(){for(var e=null,t=0;t<document.styleSheets.length;t++){var n=document.styleSheets[t];try{n.cssRules}catch(e){continue}e=n;break}return null!=e?e:(a=document.createElement(\"style\"),document.head.appendChild(a),a.sheet);var a}();if(void 0===D)return;var b=window.document.body.offsetWidth,C=Math.max(0,b/2-a/2),M=D.cssRules.length,y=\"{left:\"+l.left+\"px;right:auto;}\";d(w.calendarContainer,\"rightMost\",!1),d(w.calendarContainer,\"centerMost\",!0),D.insertRule(\".flatpickr-calendar.centerMost:before,.flatpickr-calendar.centerMost:after\"+y,M),w.calendarContainer.style.left=C+\"px\",w.calendarContainer.style.right=\"auto\"}else w.calendarContainer.style.left=\"auto\",w.calendarContainer.style.right=p+\"px\";else w.calendarContainer.style.left=f+\"px\",w.calendarContainer.style.right=\"auto\"}}}else w.config.position(w,e)}function de(){w.config.noCalendar||w.isMobile||(K(),De(),J())}function se(){w._input.focus(),-1!==window.navigator.userAgent.indexOf(\"MSIE\")||void 0!==navigator.msMaxTouchPoints?setTimeout(w.close,0):w.close()}function ue(e){e.preventDefault(),e.stopPropagation();var t=f(g(e),(function(e){return e.classList&&e.classList.contains(\"flatpickr-day\")&&!e.classList.contains(\"flatpickr-disabled\")&&!e.classList.contains(\"notAllowed\")}));if(void 0!==t){var n=t,a=w.latestSelectedDateObj=new Date(n.dateObj.getTime()),i=(a.getMonth()<w.currentMonth||a.getMonth()>w.currentMonth+w.config.showMonths-1)&&\"range\"!==w.config.mode;if(w.selectedDateElem=n,\"single\"===w.config.mode)w.selectedDates=[a];else if(\"multiple\"===w.config.mode){var o=ve(a);o?w.selectedDates.splice(parseInt(o),1):w.selectedDates.push(a)}else\"range\"===w.config.mode&&(2===w.selectedDates.length&&w.clear(!1,!1),w.latestSelectedDateObj=a,w.selectedDates.push(a),0!==M(a,w.selectedDates[0],!0)&&w.selectedDates.sort((function(e,t){return e.getTime()-t.getTime()})));if(S(),i){var r=w.currentYear!==a.getFullYear();w.currentYear=a.getFullYear(),w.currentMonth=a.getMonth(),r&&(pe(\"onYearChange\"),K()),pe(\"onMonthChange\")}if(De(),J(),be(),i||\"range\"===w.config.mode||1!==w.config.showMonths?void 0!==w.selectedDateElem&&void 0===w.hourElement&&w.selectedDateElem&&w.selectedDateElem.focus():L(n),void 0!==w.hourElement&&void 0!==w.hourElement&&w.hourElement.focus(),w.config.closeOnSelect){var l=\"single\"===w.config.mode&&!w.config.enableTime,c=\"range\"===w.config.mode&&2===w.selectedDates.length&&!w.config.enableTime;(l||c)&&se()}N()}}w.parseDate=C({config:w.config,l10n:w.l10n}),w._handlers=[],w.pluginElements=[],w.loadedPlugins=[],w._bind=A,w._setHoursFromDate=_,w._positionCalendar=ce,w.changeMonth=G,w.changeYear=Q,w.clear=function(e,t){void 0===e&&(e=!0);void 0===t&&(t=!0);w.input.value=\"\",void 0!==w.altInput&&(w.altInput.value=\"\");void 0!==w.mobileInput&&(w.mobileInput.value=\"\");w.selectedDates=[],w.latestSelectedDateObj=void 0,!0===t&&(w.currentYear=w._initialDate.getFullYear(),w.currentMonth=w._initialDate.getMonth());if(!0===w.config.enableTime){var n=x(w.config),a=n.hours,i=n.minutes,o=n.seconds;O(a,i,o)}w.redraw(),e&&pe(\"onChange\")},w.close=function(){w.isOpen=!1,w.isMobile||(void 0!==w.calendarContainer&&w.calendarContainer.classList.remove(\"open\"),void 0!==w._input&&w._input.classList.remove(\"active\"));pe(\"onClose\")},w._createElement=s,w.destroy=function(){void 0!==w.config&&pe(\"onDestroy\");for(var e=w._handlers.length;e--;)w._handlers[e].remove();if(w._handlers=[],w.mobileInput)w.mobileInput.parentNode&&w.mobileInput.parentNode.removeChild(w.mobileInput),w.mobileInput=void 0;else if(w.calendarContainer&&w.calendarContainer.parentNode)if(w.config.static&&w.calendarContainer.parentNode){var t=w.calendarContainer.parentNode;if(t.lastChild&&t.removeChild(t.lastChild),t.parentNode){for(;t.firstChild;)t.parentNode.insertBefore(t.firstChild,t);t.parentNode.removeChild(t)}}else w.calendarContainer.parentNode.removeChild(w.calendarContainer);w.altInput&&(w.input.type=\"text\",w.altInput.parentNode&&w.altInput.parentNode.removeChild(w.altInput),delete w.altInput);w.input&&(w.input.type=w.input._type,w.input.classList.remove(\"flatpickr-input\"),w.input.removeAttribute(\"readonly\"));[\"_showTimeInput\",\"latestSelectedDateObj\",\"_hideNextMonthArrow\",\"_hidePrevMonthArrow\",\"__hideNextMonthArrow\",\"__hidePrevMonthArrow\",\"isMobile\",\"isOpen\",\"selectedDateElem\",\"minDateHasTime\",\"maxDateHasTime\",\"days\",\"daysContainer\",\"_input\",\"_positionElement\",\"innerContainer\",\"rContainer\",\"monthNav\",\"todayDateElem\",\"calendarContainer\",\"weekdayContainer\",\"prevMonthNav\",\"nextMonthNav\",\"monthsDropdownContainer\",\"currentMonthElement\",\"currentYearElement\",\"navigationCurrentMonth\",\"selectedDateElem\",\"config\"].forEach((function(e){try{delete w[e]}catch(e){}}))},w.isEnabled=X,w.jumpToDate=P,w.open=function(e,t){void 0===t&&(t=w._positionElement);if(!0===w.isMobile){if(e){e.preventDefault();var n=g(e);n&&n.blur()}return void 0!==w.mobileInput&&(w.mobileInput.focus(),w.mobileInput.click()),void pe(\"onOpen\")}if(w._input.disabled||w.config.inline)return;var a=w.isOpen;w.isOpen=!0,a||(w.calendarContainer.classList.add(\"open\"),w._input.classList.add(\"active\"),pe(\"onOpen\"),ce(t));!0===w.config.enableTime&&!0===w.config.noCalendar&&(!1!==w.config.allowInput||void 0!==e&&w.timeContainer.contains(e.relatedTarget)||setTimeout((function(){return w.hourElement.select()}),50))},w.redraw=de,w.set=function(e,t){if(null!==e&&\"object\"==typeof e)for(var a in Object.assign(w.config,e),e)void 0!==fe[a]&&fe[a].forEach((function(e){return e()}));else w.config[e]=t,void 0!==fe[e]?fe[e].forEach((function(e){return e()})):n.indexOf(e)>-1&&(w.config[e]=c(t));w.redraw(),be(!0)},w.setDate=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=w.config.dateFormat);if(0!==e&&!e||e instanceof Array&&0===e.length)return w.clear(t);me(e,n),w.latestSelectedDateObj=w.selectedDates[w.selectedDates.length-1],w.redraw(),P(void 0,t),_(),0===w.selectedDates.length&&w.clear(!1);be(t),t&&pe(\"onChange\")},w.toggle=function(e){if(!0===w.isOpen)return w.close();w.open(e)};var fe={locale:[le,z],showMonths:[q,k,$],minDate:[P],maxDate:[P],clickOpens:[function(){!0===w.config.clickOpens?(A(w._input,\"focus\",w.open),A(w._input,\"click\",w.open)):(w._input.removeEventListener(\"focus\",w.open),w._input.removeEventListener(\"click\",w.open))}]};function me(e,t){var n=[];if(e instanceof Array)n=e.map((function(e){return w.parseDate(e,t)}));else if(e instanceof Date||\"number\"==typeof e)n=[w.parseDate(e,t)];else if(\"string\"==typeof e)switch(w.config.mode){case\"single\":case\"time\":n=[w.parseDate(e,t)];break;case\"multiple\":n=e.split(w.config.conjunction).map((function(e){return w.parseDate(e,t)}));break;case\"range\":n=e.split(w.l10n.rangeSeparator).map((function(e){return w.parseDate(e,t)}))}else w.config.errorHandler(new Error(\"Invalid date supplied: \"+JSON.stringify(e)));w.selectedDates=w.config.allowInvalidPreload?n:n.filter((function(e){return e instanceof Date&&X(e,!1)})),\"range\"===w.config.mode&&w.selectedDates.sort((function(e,t){return e.getTime()-t.getTime()}))}function ge(e){return e.slice().map((function(e){return\"string\"==typeof e||\"number\"==typeof e||e instanceof Date?w.parseDate(e,void 0,!0):e&&\"object\"==typeof e&&e.from&&e.to?{from:w.parseDate(e.from,void 0),to:w.parseDate(e.to,void 0)}:e})).filter((function(e){return e}))}function pe(e,t){if(void 0!==w.config){var n=w.config[e];if(void 0!==n&&n.length>0)for(var a=0;n[a]&&a<n.length;a++)n[a](w.selectedDates,w.input.value,w,t);\"onChange\"===e&&(w.input.dispatchEvent(he(\"change\")),w.input.dispatchEvent(he(\"input\")))}}function he(e){var t=document.createEvent(\"Event\");return t.initEvent(e,!0,!0),t}function ve(e){for(var t=0;t<w.selectedDates.length;t++)if(0===M(w.selectedDates[t],e))return\"\"+t;return!1}function De(){w.config.noCalendar||w.isMobile||!w.monthNav||(w.yearElements.forEach((function(e,t){var n=new Date(w.currentYear,w.currentMonth,1);n.setMonth(w.currentMonth+t),w.config.showMonths>1||\"static\"===w.config.monthSelectorType?w.monthElements[t].textContent=h(n.getMonth(),w.config.shorthandCurrentMonth,w.l10n)+\" \":w.monthsDropdownContainer.value=n.getMonth().toString(),e.value=n.getFullYear().toString()})),w._hidePrevMonthArrow=void 0!==w.config.minDate&&(w.currentYear===w.config.minDate.getFullYear()?w.currentMonth<=w.config.minDate.getMonth():w.currentYear<w.config.minDate.getFullYear()),w._hideNextMonthArrow=void 0!==w.config.maxDate&&(w.currentYear===w.config.maxDate.getFullYear()?w.currentMonth+1>w.config.maxDate.getMonth():w.currentYear>w.config.maxDate.getFullYear()))}function we(e){return w.selectedDates.map((function(t){return w.formatDate(t,e)})).filter((function(e,t,n){return\"range\"!==w.config.mode||w.config.enableTime||n.indexOf(e)===t})).join(\"range\"!==w.config.mode?w.config.conjunction:w.l10n.rangeSeparator)}function be(e){void 0===e&&(e=!0),void 0!==w.mobileInput&&w.mobileFormatStr&&(w.mobileInput.value=void 0!==w.latestSelectedDateObj?w.formatDate(w.latestSelectedDateObj,w.mobileFormatStr):\"\"),w.input.value=we(w.config.dateFormat),void 0!==w.altInput&&(w.altInput.value=we(w.config.altFormat)),!1!==e&&pe(\"onValueUpdate\")}function Ce(e){var t=g(e),n=w.prevMonthNav.contains(t),a=w.nextMonthNav.contains(t);n||a?G(n?-1:1):w.yearElements.indexOf(t)>=0?t.select():t.classList.contains(\"arrowUp\")?w.changeYear(w.currentYear+1):t.classList.contains(\"arrowDown\")&&w.changeYear(w.currentYear-1)}return function(){w.element=w.input=p,w.isOpen=!1,function(){var t=[\"wrap\",\"weekNumbers\",\"allowInput\",\"allowInvalidPreload\",\"clickOpens\",\"time_24hr\",\"enableTime\",\"noCalendar\",\"altInput\",\"shorthandCurrentMonth\",\"inline\",\"static\",\"enableSeconds\",\"disableMobile\"],i=e(e({},JSON.parse(JSON.stringify(p.dataset||{}))),v),o={};w.config.parseDate=i.parseDate,w.config.formatDate=i.formatDate,Object.defineProperty(w.config,\"enable\",{get:function(){return w.config._enable},set:function(e){w.config._enable=ge(e)}}),Object.defineProperty(w.config,\"disable\",{get:function(){return w.config._disable},set:function(e){w.config._disable=ge(e)}});var r=\"time\"===i.mode;if(!i.dateFormat&&(i.enableTime||r)){var l=T.defaultConfig.dateFormat||a.dateFormat;o.dateFormat=i.noCalendar||r?\"H:i\"+(i.enableSeconds?\":S\":\"\"):l+\" H:i\"+(i.enableSeconds?\":S\":\"\")}if(i.altInput&&(i.enableTime||r)&&!i.altFormat){var d=T.defaultConfig.altFormat||a.altFormat;o.altFormat=i.noCalendar||r?\"h:i\"+(i.enableSeconds?\":S K\":\" K\"):d+\" h:i\"+(i.enableSeconds?\":S\":\"\")+\" K\"}Object.defineProperty(w.config,\"minDate\",{get:function(){return w.config._minDate},set:oe(\"min\")}),Object.defineProperty(w.config,\"maxDate\",{get:function(){return w.config._maxDate},set:oe(\"max\")});var s=function(e){return function(t){w.config[\"min\"===e?\"_minTime\":\"_maxTime\"]=w.parseDate(t,\"H:i:S\")}};Object.defineProperty(w.config,\"minTime\",{get:function(){return w.config._minTime},set:s(\"min\")}),Object.defineProperty(w.config,\"maxTime\",{get:function(){return w.config._maxTime},set:s(\"max\")}),\"time\"===i.mode&&(w.config.noCalendar=!0,w.config.enableTime=!0);Object.assign(w.config,o,i);for(var u=0;u<t.length;u++)w.config[t[u]]=!0===w.config[t[u]]||\"true\"===w.config[t[u]];n.filter((function(e){return void 0!==w.config[e]})).forEach((function(e){w.config[e]=c(w.config[e]||[]).map(E)})),w.isMobile=!w.config.disableMobile&&!w.config.inline&&\"single\"===w.config.mode&&!w.config.disable.length&&!w.config.enable&&!w.config.weekNumbers&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);for(u=0;u<w.config.plugins.length;u++){var f=w.config.plugins[u](w)||{};for(var m in f)n.indexOf(m)>-1?w.config[m]=c(f[m]).map(E).concat(w.config[m]):void 0===i[m]&&(w.config[m]=f[m])}i.altInputClass||(w.config.altInputClass=re().className+\" \"+w.config.altInputClass);pe(\"onParseConfig\")}(),le(),function(){if(w.input=re(),!w.input)return void w.config.errorHandler(new Error(\"Invalid input element specified\"));w.input._type=w.input.type,w.input.type=\"text\",w.input.classList.add(\"flatpickr-input\"),w._input=w.input,w.config.altInput&&(w.altInput=s(w.input.nodeName,w.config.altInputClass),w._input=w.altInput,w.altInput.placeholder=w.input.placeholder,w.altInput.disabled=w.input.disabled,w.altInput.required=w.input.required,w.altInput.tabIndex=w.input.tabIndex,w.altInput.type=\"text\",w.input.setAttribute(\"type\",\"hidden\"),!w.config.static&&w.input.parentNode&&w.input.parentNode.insertBefore(w.altInput,w.input.nextSibling));w.config.allowInput||w._input.setAttribute(\"readonly\",\"readonly\");w._positionElement=w.config.positionElement||w._input}(),function(){w.selectedDates=[],w.now=w.parseDate(w.config.now)||new Date;var e=w.config.defaultDate||(\"INPUT\"!==w.input.nodeName&&\"TEXTAREA\"!==w.input.nodeName||!w.input.placeholder||w.input.value!==w.input.placeholder?w.input.value:null);e&&me(e,w.config.dateFormat);w._initialDate=w.selectedDates.length>0?w.selectedDates[0]:w.config.minDate&&w.config.minDate.getTime()>w.now.getTime()?w.config.minDate:w.config.maxDate&&w.config.maxDate.getTime()<w.now.getTime()?w.config.maxDate:w.now,w.currentYear=w._initialDate.getFullYear(),w.currentMonth=w._initialDate.getMonth(),w.selectedDates.length>0&&(w.latestSelectedDateObj=w.selectedDates[0]);void 0!==w.config.minTime&&(w.config.minTime=w.parseDate(w.config.minTime,\"H:i\"));void 0!==w.config.maxTime&&(w.config.maxTime=w.parseDate(w.config.maxTime,\"H:i\"));w.minDateHasTime=!!w.config.minDate&&(w.config.minDate.getHours()>0||w.config.minDate.getMinutes()>0||w.config.minDate.getSeconds()>0),w.maxDateHasTime=!!w.config.maxDate&&(w.config.maxDate.getHours()>0||w.config.maxDate.getMinutes()>0||w.config.maxDate.getSeconds()>0)}(),w.utils={getDaysInMonth:function(e,t){return void 0===e&&(e=w.currentMonth),void 0===t&&(t=w.currentYear),1===e&&(t%4==0&&t%100!=0||t%400==0)?29:w.l10n.daysInMonth[e]}},w.isMobile||function(){var e=window.document.createDocumentFragment();if(w.calendarContainer=s(\"div\",\"flatpickr-calendar\"),w.calendarContainer.tabIndex=-1,!w.config.noCalendar){if(e.appendChild((w.monthNav=s(\"div\",\"flatpickr-months\"),w.yearElements=[],w.monthElements=[],w.prevMonthNav=s(\"span\",\"flatpickr-prev-month\"),w.prevMonthNav.innerHTML=w.config.prevArrow,w.nextMonthNav=s(\"span\",\"flatpickr-next-month\"),w.nextMonthNav.innerHTML=w.config.nextArrow,q(),Object.defineProperty(w,\"_hidePrevMonthArrow\",{get:function(){return w.__hidePrevMonthArrow},set:function(e){w.__hidePrevMonthArrow!==e&&(d(w.prevMonthNav,\"flatpickr-disabled\",e),w.__hidePrevMonthArrow=e)}}),Object.defineProperty(w,\"_hideNextMonthArrow\",{get:function(){return w.__hideNextMonthArrow},set:function(e){w.__hideNextMonthArrow!==e&&(d(w.nextMonthNav,\"flatpickr-disabled\",e),w.__hideNextMonthArrow=e)}}),w.currentYearElement=w.yearElements[0],De(),w.monthNav)),w.innerContainer=s(\"div\",\"flatpickr-innerContainer\"),w.config.weekNumbers){var t=function(){w.calendarContainer.classList.add(\"hasWeeks\");var e=s(\"div\",\"flatpickr-weekwrapper\");e.appendChild(s(\"span\",\"flatpickr-weekday\",w.l10n.weekAbbreviation));var t=s(\"div\",\"flatpickr-weeks\");return e.appendChild(t),{weekWrapper:e,weekNumbers:t}}(),n=t.weekWrapper,a=t.weekNumbers;w.innerContainer.appendChild(n),w.weekNumbers=a,w.weekWrapper=n}w.rContainer=s(\"div\",\"flatpickr-rContainer\"),w.rContainer.appendChild($()),w.daysContainer||(w.daysContainer=s(\"div\",\"flatpickr-days\"),w.daysContainer.tabIndex=-1),J(),w.rContainer.appendChild(w.daysContainer),w.innerContainer.appendChild(w.rContainer),e.appendChild(w.innerContainer)}w.config.enableTime&&e.appendChild(function(){w.calendarContainer.classList.add(\"hasTime\"),w.config.noCalendar&&w.calendarContainer.classList.add(\"noCalendar\");var e=x(w.config);w.timeContainer=s(\"div\",\"flatpickr-time\"),w.timeContainer.tabIndex=-1;var t=s(\"span\",\"flatpickr-time-separator\",\":\"),n=m(\"flatpickr-hour\",{\"aria-label\":w.l10n.hourAriaLabel});w.hourElement=n.getElementsByTagName(\"input\")[0];var a=m(\"flatpickr-minute\",{\"aria-label\":w.l10n.minuteAriaLabel});w.minuteElement=a.getElementsByTagName(\"input\")[0],w.hourElement.tabIndex=w.minuteElement.tabIndex=-1,w.hourElement.value=o(w.latestSelectedDateObj?w.latestSelectedDateObj.getHours():w.config.time_24hr?e.hours:function(e){switch(e%24){case 0:case 12:return 12;default:return e%12}}(e.hours)),w.minuteElement.value=o(w.latestSelectedDateObj?w.latestSelectedDateObj.getMinutes():e.minutes),w.hourElement.setAttribute(\"step\",w.config.hourIncrement.toString()),w.minuteElement.setAttribute(\"step\",w.config.minuteIncrement.toString()),w.hourElement.setAttribute(\"min\",w.config.time_24hr?\"0\":\"1\"),w.hourElement.setAttribute(\"max\",w.config.time_24hr?\"23\":\"12\"),w.hourElement.setAttribute(\"maxlength\",\"2\"),w.minuteElement.setAttribute(\"min\",\"0\"),w.minuteElement.setAttribute(\"max\",\"59\"),w.minuteElement.setAttribute(\"maxlength\",\"2\"),w.timeContainer.appendChild(n),w.timeContainer.appendChild(t),w.timeContainer.appendChild(a),w.config.time_24hr&&w.timeContainer.classList.add(\"time24hr\");if(w.config.enableSeconds){w.timeContainer.classList.add(\"hasSeconds\");var i=m(\"flatpickr-second\");w.secondElement=i.getElementsByTagName(\"input\")[0],w.secondElement.value=o(w.latestSelectedDateObj?w.latestSelectedDateObj.getSeconds():e.seconds),w.secondElement.setAttribute(\"step\",w.minuteElement.getAttribute(\"step\")),w.secondElement.setAttribute(\"min\",\"0\"),w.secondElement.setAttribute(\"max\",\"59\"),w.secondElement.setAttribute(\"maxlength\",\"2\"),w.timeContainer.appendChild(s(\"span\",\"flatpickr-time-separator\",\":\")),w.timeContainer.appendChild(i)}w.config.time_24hr||(w.amPM=s(\"span\",\"flatpickr-am-pm\",w.l10n.amPM[r((w.latestSelectedDateObj?w.hourElement.value:w.config.defaultHour)>11)]),w.amPM.title=w.l10n.toggleTitle,w.amPM.tabIndex=-1,w.timeContainer.appendChild(w.amPM));return w.timeContainer}());d(w.calendarContainer,\"rangeMode\",\"range\"===w.config.mode),d(w.calendarContainer,\"animate\",!0===w.config.animate),d(w.calendarContainer,\"multiMonth\",w.config.showMonths>1),w.calendarContainer.appendChild(e);var i=void 0!==w.config.appendTo&&void 0!==w.config.appendTo.nodeType;if((w.config.inline||w.config.static)&&(w.calendarContainer.classList.add(w.config.inline?\"inline\":\"static\"),w.config.inline&&(!i&&w.element.parentNode?w.element.parentNode.insertBefore(w.calendarContainer,w._input.nextSibling):void 0!==w.config.appendTo&&w.config.appendTo.appendChild(w.calendarContainer)),w.config.static)){var l=s(\"div\",\"flatpickr-wrapper\");w.element.parentNode&&w.element.parentNode.insertBefore(l,w.element),l.appendChild(w.element),w.altInput&&l.appendChild(w.altInput),l.appendChild(w.calendarContainer)}w.config.static||w.config.inline||(void 0!==w.config.appendTo?w.config.appendTo:window.document.body).appendChild(w.calendarContainer)}(),function(){w.config.wrap&&[\"open\",\"close\",\"toggle\",\"clear\"].forEach((function(e){Array.prototype.forEach.call(w.element.querySelectorAll(\"[data-\"+e+\"]\"),(function(t){return A(t,\"click\",w[e])}))}));if(w.isMobile)return void function(){var e=w.config.enableTime?w.config.noCalendar?\"time\":\"datetime-local\":\"date\";w.mobileInput=s(\"input\",w.input.className+\" flatpickr-mobile\"),w.mobileInput.tabIndex=1,w.mobileInput.type=e,w.mobileInput.disabled=w.input.disabled,w.mobileInput.required=w.input.required,w.mobileInput.placeholder=w.input.placeholder,w.mobileFormatStr=\"datetime-local\"===e?\"Y-m-d\\\\TH:i:S\":\"date\"===e?\"Y-m-d\":\"H:i:S\",w.selectedDates.length>0&&(w.mobileInput.defaultValue=w.mobileInput.value=w.formatDate(w.selectedDates[0],w.mobileFormatStr));w.config.minDate&&(w.mobileInput.min=w.formatDate(w.config.minDate,\"Y-m-d\"));w.config.maxDate&&(w.mobileInput.max=w.formatDate(w.config.maxDate,\"Y-m-d\"));w.input.getAttribute(\"step\")&&(w.mobileInput.step=String(w.input.getAttribute(\"step\")));w.input.type=\"hidden\",void 0!==w.altInput&&(w.altInput.type=\"hidden\");try{w.input.parentNode&&w.input.parentNode.insertBefore(w.mobileInput,w.input.nextSibling)}catch(e){}A(w.mobileInput,\"change\",(function(e){w.setDate(g(e).value,!1,w.mobileFormatStr),pe(\"onChange\"),pe(\"onClose\")}))}();var e=l(ie,50);w._debouncedChange=l(N,300),w.daysContainer&&!/iPhone|iPad|iPod/i.test(navigator.userAgent)&&A(w.daysContainer,\"mouseover\",(function(e){\"range\"===w.config.mode&&ae(g(e))}));A(window.document.body,\"keydown\",ne),w.config.inline||w.config.static||A(window,\"resize\",e);void 0!==window.ontouchstart?A(window.document,\"touchstart\",Z):A(window.document,\"mousedown\",Z);A(window.document,\"focus\",Z,{capture:!0}),!0===w.config.clickOpens&&(A(w._input,\"focus\",w.open),A(w._input,\"click\",w.open));void 0!==w.daysContainer&&(A(w.monthNav,\"click\",Ce),A(w.monthNav,[\"keyup\",\"increment\"],F),A(w.daysContainer,\"click\",ue));if(void 0!==w.timeContainer&&void 0!==w.minuteElement&&void 0!==w.hourElement){var t=function(e){return g(e).select()};A(w.timeContainer,[\"increment\"],I),A(w.timeContainer,\"blur\",I,{capture:!0}),A(w.timeContainer,\"click\",Y),A([w.hourElement,w.minuteElement],[\"focus\",\"click\"],t),void 0!==w.secondElement&&A(w.secondElement,\"focus\",(function(){return w.secondElement&&w.secondElement.select()})),void 0!==w.amPM&&A(w.amPM,\"click\",(function(e){I(e),N()}))}w.config.allowInput&&A(w._input,\"blur\",te)}(),(w.selectedDates.length||w.config.noCalendar)&&(w.config.enableTime&&_(w.config.noCalendar?w.latestSelectedDateObj:void 0),be(!1)),k();var t=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);!w.isMobile&&t&&ce(),pe(\"onReady\")}(),w}function k(e,t){for(var n=Array.prototype.slice.call(e).filter((function(e){return e instanceof HTMLElement})),a=[],i=0;i<n.length;i++){var o=n[i];try{if(null!==o.getAttribute(\"data-fp-omit\"))continue;void 0!==o._flatpickr&&(o._flatpickr.destroy(),o._flatpickr=void 0),o._flatpickr=E(o,t||{}),a.push(o._flatpickr)}catch(e){console.error(e)}}return 1===a.length?a[0]:a}\"undefined\"!=typeof HTMLElement&&\"undefined\"!=typeof HTMLCollection&&\"undefined\"!=typeof NodeList&&(HTMLCollection.prototype.flatpickr=NodeList.prototype.flatpickr=function(e){return k(this,e)},HTMLElement.prototype.flatpickr=function(e){return k([this],e)});var T=function(e,t){return\"string\"==typeof e?k(window.document.querySelectorAll(e),t):e instanceof Node?k([e],t):k(e,t)};return T.defaultConfig={},T.l10ns={en:e({},i),default:e({},i)},T.localize=function(t){T.l10ns.default=e(e({},T.l10ns.default),t)},T.setDefaults=function(t){T.defaultConfig=e(e({},T.defaultConfig),t)},T.parseDate=C({}),T.formatDate=b({}),T.compareDates=M,\"undefined\"!=typeof jQuery&&void 0!==jQuery.fn&&(jQuery.fn.flatpickr=function(e){return k(this,e)}),Date.prototype.fp_incr=function(e){return new Date(this.getFullYear(),this.getMonth(),this.getDate()+(\"string\"==typeof e?parseInt(e,10):e))},\"undefined\"!=typeof window&&(window.flatpickr=T),T}));\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/flatpickr@4.6.9/node_modules/flatpickr/dist/flatpickr.min.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/bs.js":
/*!***********************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/bs.js ***!
  \***********************************************************************/
/***/ (function() {

eval("!function(){\"use strict\";var t,r,o,e,a={515:function(t,r,o){var e=o(180),a=o.n(e)()((function(t){return t[1]}));a.push([t.id,\".bs :root{--bs-blue: #0d6efd;--bs-indigo: #6610f2;--bs-purple: #6f42c1;--bs-pink: #d63384;--bs-red: #dc3545;--bs-orange: #fd7e14;--bs-yellow: #ffc107;--bs-green: #198754;--bs-teal: #20c997;--bs-cyan: #0dcaf0;--bs-white: #fff;--bs-gray: #6c757d;--bs-gray-dark: #343a40;--bs-primary: #0d6efd;--bs-secondary: #6c757d;--bs-success: #198754;--bs-info: #0dcaf0;--bs-warning: #ffc107;--bs-danger: #dc3545;--bs-light: #f8f9fa;--bs-dark: #212529;--bs-font-sans-serif: system-ui, -apple-system, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", \\\"Liberation Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";--bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;--bs-gradient: linear-gradient(180deg, rgba(255,255,255,0.15), rgba(255,255,255,0))}.bs *,.bs *::before,.bs *::after{box-sizing:border-box}@media (prefers-reduced-motion: no-preference){.bs :root{scroll-behavior:smooth}}.bs body{margin:0;font-family:var(--bs-font-sans-serif);font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0)}.bs hr{margin:1rem 0;color:inherit;background-color:currentColor;border:0;opacity:.25}.bs hr:not([size]){height:1px}.bs h1,.bs .h1,.bs h2,.bs .h2,.bs h3,.bs .h3,.bs h4,.bs .h4,.bs h5,.bs .h5,.bs h6,.bs .h6{margin-top:0;margin-bottom:.5rem;font-weight:500;line-height:1.2}.bs h1,.bs .h1{font-size:calc(1.375rem + 1.5vw)}@media (min-width: 1200px){.bs h1,.bs .h1{font-size:2.5rem}}.bs h2,.bs .h2{font-size:calc(1.325rem + .9vw)}@media (min-width: 1200px){.bs h2,.bs .h2{font-size:2rem}}.bs h3,.bs .h3{font-size:calc(1.3rem + .6vw)}@media (min-width: 1200px){.bs h3,.bs .h3{font-size:1.75rem}}.bs h4,.bs .h4{font-size:calc(1.275rem + .3vw)}@media (min-width: 1200px){.bs h4,.bs .h4{font-size:1.5rem}}.bs h5,.bs .h5{font-size:1.25rem}.bs h6,.bs .h6{font-size:1rem}.bs p{margin-top:0;margin-bottom:1rem}.bs abbr[title],.bs abbr[data-bs-original-title]{text-decoration:underline dotted;cursor:help;text-decoration-skip-ink:none}.bs address{margin-bottom:1rem;font-style:normal;line-height:inherit}.bs ol,.bs ul{padding-left:2rem}.bs ol,.bs ul,.bs dl{margin-top:0;margin-bottom:1rem}.bs ol ol,.bs ul ul,.bs ol ul,.bs ul ol{margin-bottom:0}.bs dt{font-weight:700}.bs dd{margin-bottom:.5rem;margin-left:0}.bs blockquote{margin:0 0 1rem}.bs b,.bs strong{font-weight:bolder}.bs small,.bs .small{font-size:.875em}.bs mark,.bs .mark{padding:.2em;background-color:#fcf8e3}.bs sub,.bs sup{position:relative;font-size:.75em;line-height:0;vertical-align:baseline}.bs sub{bottom:-.25em}.bs sup{top:-.5em}.bs a{color:#0d6efd;text-decoration:underline}.bs a:hover{color:#0a58ca}.bs a:not([href]):not([class]),.bs a:not([href]):not([class]):hover{color:inherit;text-decoration:none}.bs pre,.bs code,.bs kbd,.bs samp{font-family:var(--bs-font-monospace);font-size:1em;direction:ltr /* rtl:ignore */;unicode-bidi:bidi-override}.bs pre{display:block;margin-top:0;margin-bottom:1rem;overflow:auto;font-size:.875em}.bs pre code{font-size:inherit;color:inherit;word-break:normal}.bs code{font-size:.875em;color:#d63384;word-wrap:break-word}a>.bs code{color:inherit}.bs kbd{padding:.2rem .4rem;font-size:.875em;color:#fff;background-color:#212529;border-radius:.2rem}.bs kbd kbd{padding:0;font-size:1em;font-weight:700}.bs figure{margin:0 0 1rem}.bs img,.bs svg{vertical-align:middle}.bs table{caption-side:bottom;border-collapse:collapse}.bs caption{padding-top:.5rem;padding-bottom:.5rem;color:#6c757d;text-align:left}.bs th{text-align:inherit;text-align:-webkit-match-parent}.bs thead,.bs tbody,.bs tfoot,.bs tr,.bs td,.bs th{border-color:inherit;border-style:solid;border-width:0}.bs label{display:inline-block}.bs button{border-radius:0}.bs button:focus:not(:focus-visible){outline:0}.bs input,.bs button,.bs select,.bs optgroup,.bs textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}.bs button,.bs select{text-transform:none}.bs [role=\\\"button\\\"]{cursor:pointer}.bs select{word-wrap:normal}.bs select:disabled{opacity:1}.bs [list]::-webkit-calendar-picker-indicator{display:none}.bs button,.bs [type=\\\"button\\\"],.bs [type=\\\"reset\\\"],.bs [type=\\\"submit\\\"]{-webkit-appearance:button}.bs button:not(:disabled),.bs [type=\\\"button\\\"]:not(:disabled),.bs [type=\\\"reset\\\"]:not(:disabled),.bs [type=\\\"submit\\\"]:not(:disabled){cursor:pointer}.bs ::-moz-focus-inner{padding:0;border-style:none}.bs textarea{resize:vertical}.bs fieldset{min-width:0;padding:0;margin:0;border:0}.bs legend{float:left;width:100%;padding:0;margin-bottom:.5rem;font-size:calc(1.275rem + .3vw);line-height:inherit}@media (min-width: 1200px){.bs legend{font-size:1.5rem}}.bs legend+*{clear:left}.bs ::-webkit-datetime-edit-fields-wrapper,.bs ::-webkit-datetime-edit-text,.bs ::-webkit-datetime-edit-minute,.bs ::-webkit-datetime-edit-hour-field,.bs ::-webkit-datetime-edit-day-field,.bs ::-webkit-datetime-edit-month-field,.bs ::-webkit-datetime-edit-year-field{padding:0}.bs ::-webkit-inner-spin-button{height:auto}.bs [type=\\\"search\\\"]{outline-offset:-2px;-webkit-appearance:textfield}.bs ::-webkit-search-decoration{-webkit-appearance:none}.bs ::-webkit-color-swatch-wrapper{padding:0}.bs ::file-selector-button{font:inherit}.bs ::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}.bs output{display:inline-block}.bs iframe{border:0}.bs summary{display:list-item;cursor:pointer}.bs progress{vertical-align:baseline}.bs [hidden]{display:none !important}.bs .lead{font-size:1.25rem;font-weight:300}.bs .display-1{font-size:calc(1.625rem + 4.5vw);font-weight:300;line-height:1.2}@media (min-width: 1200px){.bs .display-1{font-size:5rem}}.bs .display-2{font-size:calc(1.575rem + 3.9vw);font-weight:300;line-height:1.2}@media (min-width: 1200px){.bs .display-2{font-size:4.5rem}}.bs .display-3{font-size:calc(1.525rem + 3.3vw);font-weight:300;line-height:1.2}@media (min-width: 1200px){.bs .display-3{font-size:4rem}}.bs .display-4{font-size:calc(1.475rem + 2.7vw);font-weight:300;line-height:1.2}@media (min-width: 1200px){.bs .display-4{font-size:3.5rem}}.bs .display-5{font-size:calc(1.425rem + 2.1vw);font-weight:300;line-height:1.2}@media (min-width: 1200px){.bs .display-5{font-size:3rem}}.bs .display-6{font-size:calc(1.375rem + 1.5vw);font-weight:300;line-height:1.2}@media (min-width: 1200px){.bs .display-6{font-size:2.5rem}}.bs .list-unstyled{padding-left:0;list-style:none}.bs .list-inline{padding-left:0;list-style:none}.bs .list-inline-item{display:inline-block}.bs .list-inline-item:not(:last-child){margin-right:.5rem}.bs .initialism{font-size:.875em;text-transform:uppercase}.bs .blockquote{margin-bottom:1rem;font-size:1.25rem}.bs .blockquote>:last-child{margin-bottom:0}.bs .blockquote-footer{margin-top:-1rem;margin-bottom:1rem;font-size:.875em;color:#6c757d}.bs .blockquote-footer::before{content:\\\"\\\\2014\\\\00A0\\\"}.bs .img-fluid{max-width:100%;height:auto}.bs .img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;max-width:100%;height:auto}.bs .figure{display:inline-block}.bs .figure-img{margin-bottom:.5rem;line-height:1}.bs .figure-caption{font-size:.875em;color:#6c757d}.bs .container,.bs .container-fluid,.bs .container-sm,.bs .container-md,.bs .container-lg,.bs .container-xl,.bs .container-xxl{width:100%;padding-right:var(--bs-gutter-x, .75rem);padding-left:var(--bs-gutter-x, .75rem);margin-right:auto;margin-left:auto}@media (min-width: 576px){.bs .container,.bs .container-sm{max-width:540px}}@media (min-width: 768px){.bs .container,.bs .container-sm,.bs .container-md{max-width:720px}}@media (min-width: 992px){.bs .container,.bs .container-sm,.bs .container-md,.bs .container-lg{max-width:960px}}@media (min-width: 1200px){.bs .container,.bs .container-sm,.bs .container-md,.bs .container-lg,.bs .container-xl{max-width:1140px}}@media (min-width: 1400px){.bs .container,.bs .container-sm,.bs .container-md,.bs .container-lg,.bs .container-xl,.bs .container-xxl{max-width:1320px}}.bs .row{--bs-gutter-x: 1.5rem;--bs-gutter-y: 0;display:flex;flex-wrap:wrap;margin-top:calc(var(--bs-gutter-y) * -1);margin-right:calc(var(--bs-gutter-x) / -2);margin-left:calc(var(--bs-gutter-x) / -2)}.bs .row>*{flex-shrink:0;width:100%;max-width:100%;padding-right:calc(var(--bs-gutter-x) / 2);padding-left:calc(var(--bs-gutter-x) / 2);margin-top:var(--bs-gutter-y)}.bs .col{flex:1 0 0%}.bs .row-cols-auto>*{flex:0 0 auto;width:auto}.bs .row-cols-1>*{flex:0 0 auto;width:100%}.bs .row-cols-2>*{flex:0 0 auto;width:50%}.bs .row-cols-3>*{flex:0 0 auto;width:33.33333%}.bs .row-cols-4>*{flex:0 0 auto;width:25%}.bs .row-cols-5>*{flex:0 0 auto;width:20%}.bs .row-cols-6>*{flex:0 0 auto;width:16.66667%}.bs .col-auto{flex:0 0 auto;width:auto}.bs .col-1{flex:0 0 auto;width:8.33333%}.bs .col-2{flex:0 0 auto;width:16.66667%}.bs .col-3{flex:0 0 auto;width:25%}.bs .col-4{flex:0 0 auto;width:33.33333%}.bs .col-5{flex:0 0 auto;width:41.66667%}.bs .col-6{flex:0 0 auto;width:50%}.bs .col-7{flex:0 0 auto;width:58.33333%}.bs .col-8{flex:0 0 auto;width:66.66667%}.bs .col-9{flex:0 0 auto;width:75%}.bs .col-10{flex:0 0 auto;width:83.33333%}.bs .col-11{flex:0 0 auto;width:91.66667%}.bs .col-12{flex:0 0 auto;width:100%}.bs .offset-1{margin-left:8.33333%}.bs .offset-2{margin-left:16.66667%}.bs .offset-3{margin-left:25%}.bs .offset-4{margin-left:33.33333%}.bs .offset-5{margin-left:41.66667%}.bs .offset-6{margin-left:50%}.bs .offset-7{margin-left:58.33333%}.bs .offset-8{margin-left:66.66667%}.bs .offset-9{margin-left:75%}.bs .offset-10{margin-left:83.33333%}.bs .offset-11{margin-left:91.66667%}.bs .g-0,.bs .gx-0{--bs-gutter-x: 0}.bs .g-0,.bs .gy-0{--bs-gutter-y: 0}.bs .g-1,.bs .gx-1{--bs-gutter-x: .25rem}.bs .g-1,.bs .gy-1{--bs-gutter-y: .25rem}.bs .g-2,.bs .gx-2{--bs-gutter-x: .5rem}.bs .g-2,.bs .gy-2{--bs-gutter-y: .5rem}.bs .g-3,.bs .gx-3{--bs-gutter-x: 1rem}.bs .g-3,.bs .gy-3{--bs-gutter-y: 1rem}.bs .g-4,.bs .gx-4{--bs-gutter-x: 1.5rem}.bs .g-4,.bs .gy-4{--bs-gutter-y: 1.5rem}.bs .g-5,.bs .gx-5{--bs-gutter-x: 3rem}.bs .g-5,.bs .gy-5{--bs-gutter-y: 3rem}@media (min-width: 576px){.bs .col-sm{flex:1 0 0%}.bs .row-cols-sm-auto>*{flex:0 0 auto;width:auto}.bs .row-cols-sm-1>*{flex:0 0 auto;width:100%}.bs .row-cols-sm-2>*{flex:0 0 auto;width:50%}.bs .row-cols-sm-3>*{flex:0 0 auto;width:33.33333%}.bs .row-cols-sm-4>*{flex:0 0 auto;width:25%}.bs .row-cols-sm-5>*{flex:0 0 auto;width:20%}.bs .row-cols-sm-6>*{flex:0 0 auto;width:16.66667%}.bs .col-sm-auto{flex:0 0 auto;width:auto}.bs .col-sm-1{flex:0 0 auto;width:8.33333%}.bs .col-sm-2{flex:0 0 auto;width:16.66667%}.bs .col-sm-3{flex:0 0 auto;width:25%}.bs .col-sm-4{flex:0 0 auto;width:33.33333%}.bs .col-sm-5{flex:0 0 auto;width:41.66667%}.bs .col-sm-6{flex:0 0 auto;width:50%}.bs .col-sm-7{flex:0 0 auto;width:58.33333%}.bs .col-sm-8{flex:0 0 auto;width:66.66667%}.bs .col-sm-9{flex:0 0 auto;width:75%}.bs .col-sm-10{flex:0 0 auto;width:83.33333%}.bs .col-sm-11{flex:0 0 auto;width:91.66667%}.bs .col-sm-12{flex:0 0 auto;width:100%}.bs .offset-sm-0{margin-left:0}.bs .offset-sm-1{margin-left:8.33333%}.bs .offset-sm-2{margin-left:16.66667%}.bs .offset-sm-3{margin-left:25%}.bs .offset-sm-4{margin-left:33.33333%}.bs .offset-sm-5{margin-left:41.66667%}.bs .offset-sm-6{margin-left:50%}.bs .offset-sm-7{margin-left:58.33333%}.bs .offset-sm-8{margin-left:66.66667%}.bs .offset-sm-9{margin-left:75%}.bs .offset-sm-10{margin-left:83.33333%}.bs .offset-sm-11{margin-left:91.66667%}.bs .g-sm-0,.bs .gx-sm-0{--bs-gutter-x: 0}.bs .g-sm-0,.bs .gy-sm-0{--bs-gutter-y: 0}.bs .g-sm-1,.bs .gx-sm-1{--bs-gutter-x: .25rem}.bs .g-sm-1,.bs .gy-sm-1{--bs-gutter-y: .25rem}.bs .g-sm-2,.bs .gx-sm-2{--bs-gutter-x: .5rem}.bs .g-sm-2,.bs .gy-sm-2{--bs-gutter-y: .5rem}.bs .g-sm-3,.bs .gx-sm-3{--bs-gutter-x: 1rem}.bs .g-sm-3,.bs .gy-sm-3{--bs-gutter-y: 1rem}.bs .g-sm-4,.bs .gx-sm-4{--bs-gutter-x: 1.5rem}.bs .g-sm-4,.bs .gy-sm-4{--bs-gutter-y: 1.5rem}.bs .g-sm-5,.bs .gx-sm-5{--bs-gutter-x: 3rem}.bs .g-sm-5,.bs .gy-sm-5{--bs-gutter-y: 3rem}}@media (min-width: 768px){.bs .col-md{flex:1 0 0%}.bs .row-cols-md-auto>*{flex:0 0 auto;width:auto}.bs .row-cols-md-1>*{flex:0 0 auto;width:100%}.bs .row-cols-md-2>*{flex:0 0 auto;width:50%}.bs .row-cols-md-3>*{flex:0 0 auto;width:33.33333%}.bs .row-cols-md-4>*{flex:0 0 auto;width:25%}.bs .row-cols-md-5>*{flex:0 0 auto;width:20%}.bs .row-cols-md-6>*{flex:0 0 auto;width:16.66667%}.bs .col-md-auto{flex:0 0 auto;width:auto}.bs .col-md-1{flex:0 0 auto;width:8.33333%}.bs .col-md-2{flex:0 0 auto;width:16.66667%}.bs .col-md-3{flex:0 0 auto;width:25%}.bs .col-md-4{flex:0 0 auto;width:33.33333%}.bs .col-md-5{flex:0 0 auto;width:41.66667%}.bs .col-md-6{flex:0 0 auto;width:50%}.bs .col-md-7{flex:0 0 auto;width:58.33333%}.bs .col-md-8{flex:0 0 auto;width:66.66667%}.bs .col-md-9{flex:0 0 auto;width:75%}.bs .col-md-10{flex:0 0 auto;width:83.33333%}.bs .col-md-11{flex:0 0 auto;width:91.66667%}.bs .col-md-12{flex:0 0 auto;width:100%}.bs .offset-md-0{margin-left:0}.bs .offset-md-1{margin-left:8.33333%}.bs .offset-md-2{margin-left:16.66667%}.bs .offset-md-3{margin-left:25%}.bs .offset-md-4{margin-left:33.33333%}.bs .offset-md-5{margin-left:41.66667%}.bs .offset-md-6{margin-left:50%}.bs .offset-md-7{margin-left:58.33333%}.bs .offset-md-8{margin-left:66.66667%}.bs .offset-md-9{margin-left:75%}.bs .offset-md-10{margin-left:83.33333%}.bs .offset-md-11{margin-left:91.66667%}.bs .g-md-0,.bs .gx-md-0{--bs-gutter-x: 0}.bs .g-md-0,.bs .gy-md-0{--bs-gutter-y: 0}.bs .g-md-1,.bs .gx-md-1{--bs-gutter-x: .25rem}.bs .g-md-1,.bs .gy-md-1{--bs-gutter-y: .25rem}.bs .g-md-2,.bs .gx-md-2{--bs-gutter-x: .5rem}.bs .g-md-2,.bs .gy-md-2{--bs-gutter-y: .5rem}.bs .g-md-3,.bs .gx-md-3{--bs-gutter-x: 1rem}.bs .g-md-3,.bs .gy-md-3{--bs-gutter-y: 1rem}.bs .g-md-4,.bs .gx-md-4{--bs-gutter-x: 1.5rem}.bs .g-md-4,.bs .gy-md-4{--bs-gutter-y: 1.5rem}.bs .g-md-5,.bs .gx-md-5{--bs-gutter-x: 3rem}.bs .g-md-5,.bs .gy-md-5{--bs-gutter-y: 3rem}}@media (min-width: 992px){.bs .col-lg{flex:1 0 0%}.bs .row-cols-lg-auto>*{flex:0 0 auto;width:auto}.bs .row-cols-lg-1>*{flex:0 0 auto;width:100%}.bs .row-cols-lg-2>*{flex:0 0 auto;width:50%}.bs .row-cols-lg-3>*{flex:0 0 auto;width:33.33333%}.bs .row-cols-lg-4>*{flex:0 0 auto;width:25%}.bs .row-cols-lg-5>*{flex:0 0 auto;width:20%}.bs .row-cols-lg-6>*{flex:0 0 auto;width:16.66667%}.bs .col-lg-auto{flex:0 0 auto;width:auto}.bs .col-lg-1{flex:0 0 auto;width:8.33333%}.bs .col-lg-2{flex:0 0 auto;width:16.66667%}.bs .col-lg-3{flex:0 0 auto;width:25%}.bs .col-lg-4{flex:0 0 auto;width:33.33333%}.bs .col-lg-5{flex:0 0 auto;width:41.66667%}.bs .col-lg-6{flex:0 0 auto;width:50%}.bs .col-lg-7{flex:0 0 auto;width:58.33333%}.bs .col-lg-8{flex:0 0 auto;width:66.66667%}.bs .col-lg-9{flex:0 0 auto;width:75%}.bs .col-lg-10{flex:0 0 auto;width:83.33333%}.bs .col-lg-11{flex:0 0 auto;width:91.66667%}.bs .col-lg-12{flex:0 0 auto;width:100%}.bs .offset-lg-0{margin-left:0}.bs .offset-lg-1{margin-left:8.33333%}.bs .offset-lg-2{margin-left:16.66667%}.bs .offset-lg-3{margin-left:25%}.bs .offset-lg-4{margin-left:33.33333%}.bs .offset-lg-5{margin-left:41.66667%}.bs .offset-lg-6{margin-left:50%}.bs .offset-lg-7{margin-left:58.33333%}.bs .offset-lg-8{margin-left:66.66667%}.bs .offset-lg-9{margin-left:75%}.bs .offset-lg-10{margin-left:83.33333%}.bs .offset-lg-11{margin-left:91.66667%}.bs .g-lg-0,.bs .gx-lg-0{--bs-gutter-x: 0}.bs .g-lg-0,.bs .gy-lg-0{--bs-gutter-y: 0}.bs .g-lg-1,.bs .gx-lg-1{--bs-gutter-x: .25rem}.bs .g-lg-1,.bs .gy-lg-1{--bs-gutter-y: .25rem}.bs .g-lg-2,.bs .gx-lg-2{--bs-gutter-x: .5rem}.bs .g-lg-2,.bs .gy-lg-2{--bs-gutter-y: .5rem}.bs .g-lg-3,.bs .gx-lg-3{--bs-gutter-x: 1rem}.bs .g-lg-3,.bs .gy-lg-3{--bs-gutter-y: 1rem}.bs .g-lg-4,.bs .gx-lg-4{--bs-gutter-x: 1.5rem}.bs .g-lg-4,.bs .gy-lg-4{--bs-gutter-y: 1.5rem}.bs .g-lg-5,.bs .gx-lg-5{--bs-gutter-x: 3rem}.bs .g-lg-5,.bs .gy-lg-5{--bs-gutter-y: 3rem}}@media (min-width: 1200px){.bs .col-xl{flex:1 0 0%}.bs .row-cols-xl-auto>*{flex:0 0 auto;width:auto}.bs .row-cols-xl-1>*{flex:0 0 auto;width:100%}.bs .row-cols-xl-2>*{flex:0 0 auto;width:50%}.bs .row-cols-xl-3>*{flex:0 0 auto;width:33.33333%}.bs .row-cols-xl-4>*{flex:0 0 auto;width:25%}.bs .row-cols-xl-5>*{flex:0 0 auto;width:20%}.bs .row-cols-xl-6>*{flex:0 0 auto;width:16.66667%}.bs .col-xl-auto{flex:0 0 auto;width:auto}.bs .col-xl-1{flex:0 0 auto;width:8.33333%}.bs .col-xl-2{flex:0 0 auto;width:16.66667%}.bs .col-xl-3{flex:0 0 auto;width:25%}.bs .col-xl-4{flex:0 0 auto;width:33.33333%}.bs .col-xl-5{flex:0 0 auto;width:41.66667%}.bs .col-xl-6{flex:0 0 auto;width:50%}.bs .col-xl-7{flex:0 0 auto;width:58.33333%}.bs .col-xl-8{flex:0 0 auto;width:66.66667%}.bs .col-xl-9{flex:0 0 auto;width:75%}.bs .col-xl-10{flex:0 0 auto;width:83.33333%}.bs .col-xl-11{flex:0 0 auto;width:91.66667%}.bs .col-xl-12{flex:0 0 auto;width:100%}.bs .offset-xl-0{margin-left:0}.bs .offset-xl-1{margin-left:8.33333%}.bs .offset-xl-2{margin-left:16.66667%}.bs .offset-xl-3{margin-left:25%}.bs .offset-xl-4{margin-left:33.33333%}.bs .offset-xl-5{margin-left:41.66667%}.bs .offset-xl-6{margin-left:50%}.bs .offset-xl-7{margin-left:58.33333%}.bs .offset-xl-8{margin-left:66.66667%}.bs .offset-xl-9{margin-left:75%}.bs .offset-xl-10{margin-left:83.33333%}.bs .offset-xl-11{margin-left:91.66667%}.bs .g-xl-0,.bs .gx-xl-0{--bs-gutter-x: 0}.bs .g-xl-0,.bs .gy-xl-0{--bs-gutter-y: 0}.bs .g-xl-1,.bs .gx-xl-1{--bs-gutter-x: .25rem}.bs .g-xl-1,.bs .gy-xl-1{--bs-gutter-y: .25rem}.bs .g-xl-2,.bs .gx-xl-2{--bs-gutter-x: .5rem}.bs .g-xl-2,.bs .gy-xl-2{--bs-gutter-y: .5rem}.bs .g-xl-3,.bs .gx-xl-3{--bs-gutter-x: 1rem}.bs .g-xl-3,.bs .gy-xl-3{--bs-gutter-y: 1rem}.bs .g-xl-4,.bs .gx-xl-4{--bs-gutter-x: 1.5rem}.bs .g-xl-4,.bs .gy-xl-4{--bs-gutter-y: 1.5rem}.bs .g-xl-5,.bs .gx-xl-5{--bs-gutter-x: 3rem}.bs .g-xl-5,.bs .gy-xl-5{--bs-gutter-y: 3rem}}@media (min-width: 1400px){.bs .col-xxl{flex:1 0 0%}.bs .row-cols-xxl-auto>*{flex:0 0 auto;width:auto}.bs .row-cols-xxl-1>*{flex:0 0 auto;width:100%}.bs .row-cols-xxl-2>*{flex:0 0 auto;width:50%}.bs .row-cols-xxl-3>*{flex:0 0 auto;width:33.33333%}.bs .row-cols-xxl-4>*{flex:0 0 auto;width:25%}.bs .row-cols-xxl-5>*{flex:0 0 auto;width:20%}.bs .row-cols-xxl-6>*{flex:0 0 auto;width:16.66667%}.bs .col-xxl-auto{flex:0 0 auto;width:auto}.bs .col-xxl-1{flex:0 0 auto;width:8.33333%}.bs .col-xxl-2{flex:0 0 auto;width:16.66667%}.bs .col-xxl-3{flex:0 0 auto;width:25%}.bs .col-xxl-4{flex:0 0 auto;width:33.33333%}.bs .col-xxl-5{flex:0 0 auto;width:41.66667%}.bs .col-xxl-6{flex:0 0 auto;width:50%}.bs .col-xxl-7{flex:0 0 auto;width:58.33333%}.bs .col-xxl-8{flex:0 0 auto;width:66.66667%}.bs .col-xxl-9{flex:0 0 auto;width:75%}.bs .col-xxl-10{flex:0 0 auto;width:83.33333%}.bs .col-xxl-11{flex:0 0 auto;width:91.66667%}.bs .col-xxl-12{flex:0 0 auto;width:100%}.bs .offset-xxl-0{margin-left:0}.bs .offset-xxl-1{margin-left:8.33333%}.bs .offset-xxl-2{margin-left:16.66667%}.bs .offset-xxl-3{margin-left:25%}.bs .offset-xxl-4{margin-left:33.33333%}.bs .offset-xxl-5{margin-left:41.66667%}.bs .offset-xxl-6{margin-left:50%}.bs .offset-xxl-7{margin-left:58.33333%}.bs .offset-xxl-8{margin-left:66.66667%}.bs .offset-xxl-9{margin-left:75%}.bs .offset-xxl-10{margin-left:83.33333%}.bs .offset-xxl-11{margin-left:91.66667%}.bs .g-xxl-0,.bs .gx-xxl-0{--bs-gutter-x: 0}.bs .g-xxl-0,.bs .gy-xxl-0{--bs-gutter-y: 0}.bs .g-xxl-1,.bs .gx-xxl-1{--bs-gutter-x: .25rem}.bs .g-xxl-1,.bs .gy-xxl-1{--bs-gutter-y: .25rem}.bs .g-xxl-2,.bs .gx-xxl-2{--bs-gutter-x: .5rem}.bs .g-xxl-2,.bs .gy-xxl-2{--bs-gutter-y: .5rem}.bs .g-xxl-3,.bs .gx-xxl-3{--bs-gutter-x: 1rem}.bs .g-xxl-3,.bs .gy-xxl-3{--bs-gutter-y: 1rem}.bs .g-xxl-4,.bs .gx-xxl-4{--bs-gutter-x: 1.5rem}.bs .g-xxl-4,.bs .gy-xxl-4{--bs-gutter-y: 1.5rem}.bs .g-xxl-5,.bs .gx-xxl-5{--bs-gutter-x: 3rem}.bs .g-xxl-5,.bs .gy-xxl-5{--bs-gutter-y: 3rem}}.bs .table{--bs-table-bg: rgba(0,0,0,0);--bs-table-striped-color: #212529;--bs-table-striped-bg: rgba(0,0,0,0.05);--bs-table-active-color: #212529;--bs-table-active-bg: rgba(0,0,0,0.1);--bs-table-hover-color: #212529;--bs-table-hover-bg: rgba(0,0,0,0.075);width:100%;margin-bottom:1rem;color:#212529;vertical-align:top;border-color:#dee2e6}.bs .table>:not(caption)>*>*{padding:.5rem .5rem;background-color:var(--bs-table-bg);border-bottom-width:1px;box-shadow:inset 0 0 0 9999px var(--bs-table-accent-bg)}.bs .table>tbody{vertical-align:inherit}.bs .table>thead{vertical-align:bottom}.bs .table>:not(:last-child)>:last-child>*{border-bottom-color:currentColor}.bs .caption-top{caption-side:top}.bs .table-sm>:not(caption)>*>*{padding:.25rem .25rem}.bs .table-bordered>:not(caption)>*{border-width:1px 0}.bs .table-bordered>:not(caption)>*>*{border-width:0 1px}.bs .table-borderless>:not(caption)>*>*{border-bottom-width:0}.bs .table-striped>tbody>tr:nth-of-type(odd){--bs-table-accent-bg: var(--bs-table-striped-bg);color:var(--bs-table-striped-color)}.bs .table-active{--bs-table-accent-bg: var(--bs-table-active-bg);color:var(--bs-table-active-color)}.bs .table-hover>tbody>tr:hover{--bs-table-accent-bg: var(--bs-table-hover-bg);color:var(--bs-table-hover-color)}.bs .table-primary{--bs-table-bg: #cfe2ff;--bs-table-striped-bg: #c5d7f2;--bs-table-striped-color: #000;--bs-table-active-bg: #bacbe6;--bs-table-active-color: #000;--bs-table-hover-bg: #bfd1ec;--bs-table-hover-color: #000;color:#000;border-color:#bacbe6}.bs .table-secondary{--bs-table-bg: #e2e3e5;--bs-table-striped-bg: #d7d8da;--bs-table-striped-color: #000;--bs-table-active-bg: #cbccce;--bs-table-active-color: #000;--bs-table-hover-bg: #d1d2d4;--bs-table-hover-color: #000;color:#000;border-color:#cbccce}.bs .table-success{--bs-table-bg: #d1e7dd;--bs-table-striped-bg: #c7dbd2;--bs-table-striped-color: #000;--bs-table-active-bg: #bcd0c7;--bs-table-active-color: #000;--bs-table-hover-bg: #c1d6cc;--bs-table-hover-color: #000;color:#000;border-color:#bcd0c7}.bs .table-info{--bs-table-bg: #cff4fc;--bs-table-striped-bg: #c5e8ef;--bs-table-striped-color: #000;--bs-table-active-bg: #badce3;--bs-table-active-color: #000;--bs-table-hover-bg: #bfe2e9;--bs-table-hover-color: #000;color:#000;border-color:#badce3}.bs .table-warning{--bs-table-bg: #fff3cd;--bs-table-striped-bg: #f2e7c3;--bs-table-striped-color: #000;--bs-table-active-bg: #e6dbb9;--bs-table-active-color: #000;--bs-table-hover-bg: #ece1be;--bs-table-hover-color: #000;color:#000;border-color:#e6dbb9}.bs .table-danger{--bs-table-bg: #f8d7da;--bs-table-striped-bg: #eccccf;--bs-table-striped-color: #000;--bs-table-active-bg: #dfc2c4;--bs-table-active-color: #000;--bs-table-hover-bg: #e5c7ca;--bs-table-hover-color: #000;color:#000;border-color:#dfc2c4}.bs .table-light{--bs-table-bg: #f8f9fa;--bs-table-striped-bg: #ecedee;--bs-table-striped-color: #000;--bs-table-active-bg: #dfe0e1;--bs-table-active-color: #000;--bs-table-hover-bg: #e5e6e7;--bs-table-hover-color: #000;color:#000;border-color:#dfe0e1}.bs .table-dark{--bs-table-bg: #212529;--bs-table-striped-bg: #2c3034;--bs-table-striped-color: #fff;--bs-table-active-bg: #373b3e;--bs-table-active-color: #fff;--bs-table-hover-bg: #323539;--bs-table-hover-color: #fff;color:#fff;border-color:#373b3e}.bs .table-responsive{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width: 575.98px){.bs .table-responsive-sm{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width: 767.98px){.bs .table-responsive-md{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width: 991.98px){.bs .table-responsive-lg{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width: 1199.98px){.bs .table-responsive-xl{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width: 1399.98px){.bs .table-responsive-xxl{overflow-x:auto;-webkit-overflow-scrolling:touch}}.bs .form-label{margin-bottom:.5rem}.bs .col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.bs .col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem}.bs .col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem}.bs .form-text{margin-top:.25rem;font-size:.875em;color:#6c757d}.bs .form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;appearance:none;border-radius:.25rem;transition:border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .form-control{transition:none}}.bs .form-control[type=\\\"file\\\"]{overflow:hidden}.bs .form-control[type=\\\"file\\\"]:not(:disabled):not([readonly]){cursor:pointer}.bs .form-control:focus{color:#212529;background-color:#fff;border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,0.25)}.bs .form-control::-webkit-date-and-time-value{height:1.5em}.bs .form-control::placeholder{color:#6c757d;opacity:1}.bs .form-control:disabled,.bs .form-control[readonly]{background-color:#e9ecef;opacity:1}.bs .form-control::file-selector-button{padding:.375rem .75rem;margin:-.375rem -.75rem;margin-inline-end:.75rem;color:#212529;background-color:#e9ecef;pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:1px;border-radius:0;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .form-control::file-selector-button{transition:none}}.bs .form-control:hover:not(:disabled):not([readonly])::file-selector-button{background-color:#dde0e3}.bs .form-control::-webkit-file-upload-button{padding:.375rem .75rem;margin:-.375rem -.75rem;margin-inline-end:.75rem;color:#212529;background-color:#e9ecef;pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:1px;border-radius:0;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .form-control::-webkit-file-upload-button{transition:none}}.bs .form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button{background-color:#dde0e3}.bs .form-control-plaintext{display:block;width:100%;padding:.375rem 0;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.bs .form-control-plaintext.form-control-sm,.bs .form-control-plaintext.form-control-lg{padding-right:0;padding-left:0}.bs .form-control-sm{min-height:calc(1.5em + .5rem + 2px);padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.bs .form-control-sm::file-selector-button{padding:.25rem .5rem;margin:-.25rem -.5rem;margin-inline-end:.5rem}.bs .form-control-sm::-webkit-file-upload-button{padding:.25rem .5rem;margin:-.25rem -.5rem;margin-inline-end:.5rem}.bs .form-control-lg{min-height:calc(1.5em + 1rem + 2px);padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.bs .form-control-lg::file-selector-button{padding:.5rem 1rem;margin:-.5rem -1rem;margin-inline-end:1rem}.bs .form-control-lg::-webkit-file-upload-button{padding:.5rem 1rem;margin:-.5rem -1rem;margin-inline-end:1rem}.bs textarea.form-control{min-height:calc(1.5em + .75rem + 2px)}.bs textarea.form-control-sm{min-height:calc(1.5em + .5rem + 2px)}.bs textarea.form-control-lg{min-height:calc(1.5em + 1rem + 2px)}.bs .form-control-color{max-width:3rem;height:auto;padding:.375rem}.bs .form-control-color:not(:disabled):not([readonly]){cursor:pointer}.bs .form-control-color::-moz-color-swatch{height:1.5em;border-radius:.25rem}.bs .form-control-color::-webkit-color-swatch{height:1.5em;border-radius:.25rem}.bs .form-select{display:block;width:100%;padding:.375rem 2.25rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e\\\");background-repeat:no-repeat;background-position:right .75rem center;background-size:16px 12px;border:1px solid #ced4da;border-radius:.25rem;appearance:none}.bs .form-select:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,0.25)}.bs .form-select[multiple],.bs .form-select[size]:not([size=\\\"1\\\"]){padding-right:.75rem;background-image:none}.bs .form-select:disabled{background-color:#e9ecef}.bs .form-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #212529}.bs .form-select-sm{padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem}.bs .form-select-lg{padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem}.bs .form-check{display:block;min-height:1.5rem;padding-left:1.5em;margin-bottom:.125rem}.bs .form-check .form-check-input{float:left;margin-left:-1.5em}.bs .form-check-input{width:1em;height:1em;margin-top:.25em;vertical-align:top;background-color:#fff;background-repeat:no-repeat;background-position:center;background-size:contain;border:1px solid rgba(0,0,0,0.25);appearance:none;color-adjust:exact}.bs .form-check-input[type=\\\"checkbox\\\"]{border-radius:.25em}.bs .form-check-input[type=\\\"radio\\\"]{border-radius:50%}.bs .form-check-input:active{filter:brightness(90%)}.bs .form-check-input:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,0.25)}.bs .form-check-input:checked{background-color:#0d6efd;border-color:#0d6efd}.bs .form-check-input:checked[type=\\\"checkbox\\\"]{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e\\\")}.bs .form-check-input:checked[type=\\\"radio\\\"]{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e\\\")}.bs .form-check-input[type=\\\"checkbox\\\"]:indeterminate{background-color:#0d6efd;border-color:#0d6efd;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e\\\")}.bs .form-check-input:disabled{pointer-events:none;filter:none;opacity:.5}.bs .form-check-input[disabled] ~ .form-check-label,.bs .form-check-input:disabled ~ .form-check-label{opacity:.5}.bs .form-switch{padding-left:2.5em}.bs .form-switch .form-check-input{width:2em;margin-left:-2.5em;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280,0,0,0.25%29'/%3e%3c/svg%3e\\\");background-position:left center;border-radius:2em;transition:background-position 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .form-switch .form-check-input{transition:none}}.bs .form-switch .form-check-input:focus{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%2386b7fe'/%3e%3c/svg%3e\\\")}.bs .form-switch .form-check-input:checked{background-position:right center;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e\\\")}.bs .form-check-inline{display:inline-block;margin-right:1rem}.bs .btn-check{position:absolute;clip:rect(0, 0, 0, 0);pointer-events:none}.bs .btn-check[disabled]+.btn,.bs .btn-check:disabled+.btn{pointer-events:none;filter:none;opacity:.65}.bs .form-range{width:100%;height:1.5rem;padding:0;background-color:transparent;appearance:none}.bs .form-range:focus{outline:0}.bs .form-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,0.25)}.bs .form-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,0.25)}.bs .form-range::-moz-focus-outer{border:0}.bs .form-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#0d6efd;border:0;border-radius:1rem;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.bs .form-range::-webkit-slider-thumb{transition:none}}.bs .form-range::-webkit-slider-thumb:active{background-color:#b6d4fe}.bs .form-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.bs .form-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#0d6efd;border:0;border-radius:1rem;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.bs .form-range::-moz-range-thumb{transition:none}}.bs .form-range::-moz-range-thumb:active{background-color:#b6d4fe}.bs .form-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.bs .form-range:disabled{pointer-events:none}.bs .form-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.bs .form-range:disabled::-moz-range-thumb{background-color:#adb5bd}.bs .form-floating{position:relative}.bs .form-floating>.form-control,.bs .form-floating>.form-select{height:calc(3.5rem + 2px);padding:1rem .75rem}.bs .form-floating>label{position:absolute;top:0;left:0;height:100%;padding:1rem .75rem;pointer-events:none;border:1px solid transparent;transform-origin:0 0;transition:opacity 0.1s ease-in-out,transform 0.1s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .form-floating>label{transition:none}}.bs .form-floating>.form-control::placeholder{color:transparent}.bs .form-floating>.form-control:focus,.bs .form-floating>.form-control:not(:placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.bs .form-floating>.form-control:-webkit-autofill{padding-top:1.625rem;padding-bottom:.625rem}.bs .form-floating>.form-select{padding-top:1.625rem;padding-bottom:.625rem}.bs .form-floating>.form-control:focus ~ label,.bs .form-floating>.form-control:not(:placeholder-shown) ~ label,.bs .form-floating>.form-select ~ label{opacity:.65;transform:scale(0.85) translateY(-0.5rem) translateX(0.15rem)}.bs .form-floating>.form-control:-webkit-autofill ~ label{opacity:.65;transform:scale(0.85) translateY(-0.5rem) translateX(0.15rem)}.bs .input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.bs .input-group>.form-control,.bs .input-group>.form-select{position:relative;flex:1 1 auto;width:1%;min-width:0}.bs .input-group>.form-control:focus,.bs .input-group>.form-select:focus{z-index:3}.bs .input-group .btn{position:relative;z-index:2}.bs .input-group .btn:focus{z-index:3}.bs .input-group-text{display:flex;align-items:center;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.bs .input-group-lg>.form-control,.bs .input-group-lg>.form-select,.bs .input-group-lg>.input-group-text,.bs .input-group-lg>.btn{padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.bs .input-group-sm>.form-control,.bs .input-group-sm>.form-select,.bs .input-group-sm>.input-group-text,.bs .input-group-sm>.btn{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.bs .input-group-lg>.form-select,.bs .input-group-sm>.form-select{padding-right:3rem}.bs .input-group:not(.has-validation)>:not(:last-child):not(.dropdown-toggle):not(.dropdown-menu),.bs .input-group:not(.has-validation)>.dropdown-toggle:nth-last-child(n+3){border-top-right-radius:0;border-bottom-right-radius:0}.bs .input-group.has-validation>:nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu),.bs .input-group.has-validation>.dropdown-toggle:nth-last-child(n+4){border-top-right-radius:0;border-bottom-right-radius:0}.bs .input-group>:not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback){margin-left:-1px;border-top-left-radius:0;border-bottom-left-radius:0}.bs .valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:#198754}.bs .valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:rgba(25,135,84,0.9);border-radius:.25rem}.was-validated .bs:valid ~ .valid-feedback,.was-validated .bs:valid ~ .valid-tooltip,.bs.is-valid ~ .valid-feedback,.bs.is-valid ~ .valid-tooltip{display:block}.was-validated .bs .form-control:valid,.bs .form-control.is-valid{border-color:#198754;padding-right:calc(1.5em + .75rem);background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\\\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.was-validated .bs .form-control:valid:focus,.bs .form-control.is-valid:focus{border-color:#198754;box-shadow:0 0 0 .25rem rgba(25,135,84,0.25)}.was-validated .bs textarea.form-control:valid,.bs textarea.form-control.is-valid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.was-validated .bs .form-select:valid,.bs .form-select.is-valid{border-color:#198754;padding-right:4.125rem;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e\\\"),url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\\\");background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.was-validated .bs .form-select:valid:focus,.bs .form-select.is-valid:focus{border-color:#198754;box-shadow:0 0 0 .25rem rgba(25,135,84,0.25)}.was-validated .bs .form-check-input:valid,.bs .form-check-input.is-valid{border-color:#198754}.was-validated .bs .form-check-input:valid:checked,.bs .form-check-input.is-valid:checked{background-color:#198754}.was-validated .bs .form-check-input:valid:focus,.bs .form-check-input.is-valid:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,0.25)}.was-validated .bs .form-check-input:valid ~ .form-check-label,.bs .form-check-input.is-valid ~ .form-check-label{color:#198754}.bs .form-check-inline .form-check-input ~ .valid-feedback{margin-left:.5em}.was-validated .bs .input-group .form-control:valid,.bs .input-group .form-control.is-valid,.was-validated .bs .input-group .form-select:valid,.bs .input-group .form-select.is-valid{z-index:3}.bs .invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:#dc3545}.bs .invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:rgba(220,53,69,0.9);border-radius:.25rem}.was-validated .bs:invalid ~ .invalid-feedback,.was-validated .bs:invalid ~ .invalid-tooltip,.bs.is-invalid ~ .invalid-feedback,.bs.is-invalid ~ .invalid-tooltip{display:block}.was-validated .bs .form-control:invalid,.bs .form-control.is-invalid{border-color:#dc3545;padding-right:calc(1.5em + .75rem);background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\\\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.was-validated .bs .form-control:invalid:focus,.bs .form-control.is-invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem rgba(220,53,69,0.25)}.was-validated .bs textarea.form-control:invalid,.bs textarea.form-control.is-invalid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.was-validated .bs .form-select:invalid,.bs .form-select.is-invalid{border-color:#dc3545;padding-right:4.125rem;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e\\\"),url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\\\");background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.was-validated .bs .form-select:invalid:focus,.bs .form-select.is-invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem rgba(220,53,69,0.25)}.was-validated .bs .form-check-input:invalid,.bs .form-check-input.is-invalid{border-color:#dc3545}.was-validated .bs .form-check-input:invalid:checked,.bs .form-check-input.is-invalid:checked{background-color:#dc3545}.was-validated .bs .form-check-input:invalid:focus,.bs .form-check-input.is-invalid:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,0.25)}.was-validated .bs .form-check-input:invalid ~ .form-check-label,.bs .form-check-input.is-invalid ~ .form-check-label{color:#dc3545}.bs .form-check-inline .form-check-input ~ .invalid-feedback{margin-left:.5em}.was-validated .bs .input-group .form-control:invalid,.bs .input-group .form-control.is-invalid,.was-validated .bs .input-group .form-select:invalid,.bs .input-group .form-select.is-invalid{z-index:3}.bs .btn{display:inline-block;font-weight:400;line-height:1.5;color:#212529;text-align:center;text-decoration:none;vertical-align:middle;cursor:pointer;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;border-radius:.25rem;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .btn{transition:none}}.bs .btn:hover{color:#212529}.btn-check:focus+.bs .btn,.bs .btn:focus{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,0.25)}.bs .btn:disabled,.bs .btn.disabled,fieldset:disabled .bs .btn{pointer-events:none;opacity:.65}.bs .btn-primary{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.bs .btn-primary:hover{color:#fff;background-color:#0b5ed7;border-color:#0a58ca}.btn-check:focus+.bs .btn-primary,.bs .btn-primary:focus{color:#fff;background-color:#0b5ed7;border-color:#0a58ca;box-shadow:0 0 0 .25rem rgba(49,132,253,0.5)}.btn-check:checked+.bs .btn-primary,.btn-check:active+.bs .btn-primary,.bs .btn-primary:active,.bs .btn-primary.active,.show>.bs .btn-primary.dropdown-toggle{color:#fff;background-color:#0a58ca;border-color:#0a53be}.btn-check:checked+.bs .btn-primary:focus,.btn-check:active+.bs .btn-primary:focus,.bs .btn-primary:active:focus,.bs .btn-primary.active:focus,.show>.bs .btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(49,132,253,0.5)}.bs .btn-primary:disabled,.bs .btn-primary.disabled{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.bs .btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.bs .btn-secondary:hover{color:#fff;background-color:#5c636a;border-color:#565e64}.btn-check:focus+.bs .btn-secondary,.bs .btn-secondary:focus{color:#fff;background-color:#5c636a;border-color:#565e64;box-shadow:0 0 0 .25rem rgba(130,138,145,0.5)}.btn-check:checked+.bs .btn-secondary,.btn-check:active+.bs .btn-secondary,.bs .btn-secondary:active,.bs .btn-secondary.active,.show>.bs .btn-secondary.dropdown-toggle{color:#fff;background-color:#565e64;border-color:#51585e}.btn-check:checked+.bs .btn-secondary:focus,.btn-check:active+.bs .btn-secondary:focus,.bs .btn-secondary:active:focus,.bs .btn-secondary.active:focus,.show>.bs .btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(130,138,145,0.5)}.bs .btn-secondary:disabled,.bs .btn-secondary.disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.bs .btn-success{color:#fff;background-color:#198754;border-color:#198754}.bs .btn-success:hover{color:#fff;background-color:#157347;border-color:#146c43}.btn-check:focus+.bs .btn-success,.bs .btn-success:focus{color:#fff;background-color:#157347;border-color:#146c43;box-shadow:0 0 0 .25rem rgba(60,153,110,0.5)}.btn-check:checked+.bs .btn-success,.btn-check:active+.bs .btn-success,.bs .btn-success:active,.bs .btn-success.active,.show>.bs .btn-success.dropdown-toggle{color:#fff;background-color:#146c43;border-color:#13653f}.btn-check:checked+.bs .btn-success:focus,.btn-check:active+.bs .btn-success:focus,.bs .btn-success:active:focus,.bs .btn-success.active:focus,.show>.bs .btn-success.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(60,153,110,0.5)}.bs .btn-success:disabled,.bs .btn-success.disabled{color:#fff;background-color:#198754;border-color:#198754}.bs .btn-info{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.bs .btn-info:hover{color:#000;background-color:#31d2f2;border-color:#25cff2}.btn-check:focus+.bs .btn-info,.bs .btn-info:focus{color:#000;background-color:#31d2f2;border-color:#25cff2;box-shadow:0 0 0 .25rem rgba(11,172,204,0.5)}.btn-check:checked+.bs .btn-info,.btn-check:active+.bs .btn-info,.bs .btn-info:active,.bs .btn-info.active,.show>.bs .btn-info.dropdown-toggle{color:#000;background-color:#3dd5f3;border-color:#25cff2}.btn-check:checked+.bs .btn-info:focus,.btn-check:active+.bs .btn-info:focus,.bs .btn-info:active:focus,.bs .btn-info.active:focus,.show>.bs .btn-info.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(11,172,204,0.5)}.bs .btn-info:disabled,.bs .btn-info.disabled{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.bs .btn-warning{color:#000;background-color:#ffc107;border-color:#ffc107}.bs .btn-warning:hover{color:#000;background-color:#ffca2c;border-color:#ffc720}.btn-check:focus+.bs .btn-warning,.bs .btn-warning:focus{color:#000;background-color:#ffca2c;border-color:#ffc720;box-shadow:0 0 0 .25rem rgba(217,164,6,0.5)}.btn-check:checked+.bs .btn-warning,.btn-check:active+.bs .btn-warning,.bs .btn-warning:active,.bs .btn-warning.active,.show>.bs .btn-warning.dropdown-toggle{color:#000;background-color:#ffcd39;border-color:#ffc720}.btn-check:checked+.bs .btn-warning:focus,.btn-check:active+.bs .btn-warning:focus,.bs .btn-warning:active:focus,.bs .btn-warning.active:focus,.show>.bs .btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(217,164,6,0.5)}.bs .btn-warning:disabled,.bs .btn-warning.disabled{color:#000;background-color:#ffc107;border-color:#ffc107}.bs .btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.bs .btn-danger:hover{color:#fff;background-color:#bb2d3b;border-color:#b02a37}.btn-check:focus+.bs .btn-danger,.bs .btn-danger:focus{color:#fff;background-color:#bb2d3b;border-color:#b02a37;box-shadow:0 0 0 .25rem rgba(225,83,97,0.5)}.btn-check:checked+.bs .btn-danger,.btn-check:active+.bs .btn-danger,.bs .btn-danger:active,.bs .btn-danger.active,.show>.bs .btn-danger.dropdown-toggle{color:#fff;background-color:#b02a37;border-color:#a52834}.btn-check:checked+.bs .btn-danger:focus,.btn-check:active+.bs .btn-danger:focus,.bs .btn-danger:active:focus,.bs .btn-danger.active:focus,.show>.bs .btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(225,83,97,0.5)}.bs .btn-danger:disabled,.bs .btn-danger.disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.bs .btn-light{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.bs .btn-light:hover{color:#000;background-color:#f9fafb;border-color:#f9fafb}.btn-check:focus+.bs .btn-light,.bs .btn-light:focus{color:#000;background-color:#f9fafb;border-color:#f9fafb;box-shadow:0 0 0 .25rem rgba(211,212,213,0.5)}.btn-check:checked+.bs .btn-light,.btn-check:active+.bs .btn-light,.bs .btn-light:active,.bs .btn-light.active,.show>.bs .btn-light.dropdown-toggle{color:#000;background-color:#f9fafb;border-color:#f9fafb}.btn-check:checked+.bs .btn-light:focus,.btn-check:active+.bs .btn-light:focus,.bs .btn-light:active:focus,.bs .btn-light.active:focus,.show>.bs .btn-light.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(211,212,213,0.5)}.bs .btn-light:disabled,.bs .btn-light.disabled{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.bs .btn-dark{color:#fff;background-color:#212529;border-color:#212529}.bs .btn-dark:hover{color:#fff;background-color:#1c1f23;border-color:#1a1e21}.btn-check:focus+.bs .btn-dark,.bs .btn-dark:focus{color:#fff;background-color:#1c1f23;border-color:#1a1e21;box-shadow:0 0 0 .25rem rgba(66,70,73,0.5)}.btn-check:checked+.bs .btn-dark,.btn-check:active+.bs .btn-dark,.bs .btn-dark:active,.bs .btn-dark.active,.show>.bs .btn-dark.dropdown-toggle{color:#fff;background-color:#1a1e21;border-color:#191c1f}.btn-check:checked+.bs .btn-dark:focus,.btn-check:active+.bs .btn-dark:focus,.bs .btn-dark:active:focus,.bs .btn-dark.active:focus,.show>.bs .btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(66,70,73,0.5)}.bs .btn-dark:disabled,.bs .btn-dark.disabled{color:#fff;background-color:#212529;border-color:#212529}.bs .btn-outline-primary{color:#0d6efd;border-color:#0d6efd}.bs .btn-outline-primary:hover{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-check:focus+.bs .btn-outline-primary,.bs .btn-outline-primary:focus{box-shadow:0 0 0 .25rem rgba(13,110,253,0.5)}.btn-check:checked+.bs .btn-outline-primary,.btn-check:active+.bs .btn-outline-primary,.bs .btn-outline-primary:active,.bs .btn-outline-primary.active,.bs .btn-outline-primary.dropdown-toggle.show{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-check:checked+.bs .btn-outline-primary:focus,.btn-check:active+.bs .btn-outline-primary:focus,.bs .btn-outline-primary:active:focus,.bs .btn-outline-primary.active:focus,.bs .btn-outline-primary.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(13,110,253,0.5)}.bs .btn-outline-primary:disabled,.bs .btn-outline-primary.disabled{color:#0d6efd;background-color:transparent}.bs .btn-outline-secondary{color:#6c757d;border-color:#6c757d}.bs .btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-check:focus+.bs .btn-outline-secondary,.bs .btn-outline-secondary:focus{box-shadow:0 0 0 .25rem rgba(108,117,125,0.5)}.btn-check:checked+.bs .btn-outline-secondary,.btn-check:active+.bs .btn-outline-secondary,.bs .btn-outline-secondary:active,.bs .btn-outline-secondary.active,.bs .btn-outline-secondary.dropdown-toggle.show{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-check:checked+.bs .btn-outline-secondary:focus,.btn-check:active+.bs .btn-outline-secondary:focus,.bs .btn-outline-secondary:active:focus,.bs .btn-outline-secondary.active:focus,.bs .btn-outline-secondary.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(108,117,125,0.5)}.bs .btn-outline-secondary:disabled,.bs .btn-outline-secondary.disabled{color:#6c757d;background-color:transparent}.bs .btn-outline-success{color:#198754;border-color:#198754}.bs .btn-outline-success:hover{color:#fff;background-color:#198754;border-color:#198754}.btn-check:focus+.bs .btn-outline-success,.bs .btn-outline-success:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,0.5)}.btn-check:checked+.bs .btn-outline-success,.btn-check:active+.bs .btn-outline-success,.bs .btn-outline-success:active,.bs .btn-outline-success.active,.bs .btn-outline-success.dropdown-toggle.show{color:#fff;background-color:#198754;border-color:#198754}.btn-check:checked+.bs .btn-outline-success:focus,.btn-check:active+.bs .btn-outline-success:focus,.bs .btn-outline-success:active:focus,.bs .btn-outline-success.active:focus,.bs .btn-outline-success.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,0.5)}.bs .btn-outline-success:disabled,.bs .btn-outline-success.disabled{color:#198754;background-color:transparent}.bs .btn-outline-info{color:#0dcaf0;border-color:#0dcaf0}.bs .btn-outline-info:hover{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-check:focus+.bs .btn-outline-info,.bs .btn-outline-info:focus{box-shadow:0 0 0 .25rem rgba(13,202,240,0.5)}.btn-check:checked+.bs .btn-outline-info,.btn-check:active+.bs .btn-outline-info,.bs .btn-outline-info:active,.bs .btn-outline-info.active,.bs .btn-outline-info.dropdown-toggle.show{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-check:checked+.bs .btn-outline-info:focus,.btn-check:active+.bs .btn-outline-info:focus,.bs .btn-outline-info:active:focus,.bs .btn-outline-info.active:focus,.bs .btn-outline-info.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(13,202,240,0.5)}.bs .btn-outline-info:disabled,.bs .btn-outline-info.disabled{color:#0dcaf0;background-color:transparent}.bs .btn-outline-warning{color:#ffc107;border-color:#ffc107}.bs .btn-outline-warning:hover{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-check:focus+.bs .btn-outline-warning,.bs .btn-outline-warning:focus{box-shadow:0 0 0 .25rem rgba(255,193,7,0.5)}.btn-check:checked+.bs .btn-outline-warning,.btn-check:active+.bs .btn-outline-warning,.bs .btn-outline-warning:active,.bs .btn-outline-warning.active,.bs .btn-outline-warning.dropdown-toggle.show{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-check:checked+.bs .btn-outline-warning:focus,.btn-check:active+.bs .btn-outline-warning:focus,.bs .btn-outline-warning:active:focus,.bs .btn-outline-warning.active:focus,.bs .btn-outline-warning.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(255,193,7,0.5)}.bs .btn-outline-warning:disabled,.bs .btn-outline-warning.disabled{color:#ffc107;background-color:transparent}.bs .btn-outline-danger{color:#dc3545;border-color:#dc3545}.bs .btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-check:focus+.bs .btn-outline-danger,.bs .btn-outline-danger:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,0.5)}.btn-check:checked+.bs .btn-outline-danger,.btn-check:active+.bs .btn-outline-danger,.bs .btn-outline-danger:active,.bs .btn-outline-danger.active,.bs .btn-outline-danger.dropdown-toggle.show{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-check:checked+.bs .btn-outline-danger:focus,.btn-check:active+.bs .btn-outline-danger:focus,.bs .btn-outline-danger:active:focus,.bs .btn-outline-danger.active:focus,.bs .btn-outline-danger.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,0.5)}.bs .btn-outline-danger:disabled,.bs .btn-outline-danger.disabled{color:#dc3545;background-color:transparent}.bs .btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.bs .btn-outline-light:hover{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-check:focus+.bs .btn-outline-light,.bs .btn-outline-light:focus{box-shadow:0 0 0 .25rem rgba(248,249,250,0.5)}.btn-check:checked+.bs .btn-outline-light,.btn-check:active+.bs .btn-outline-light,.bs .btn-outline-light:active,.bs .btn-outline-light.active,.bs .btn-outline-light.dropdown-toggle.show{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-check:checked+.bs .btn-outline-light:focus,.btn-check:active+.bs .btn-outline-light:focus,.bs .btn-outline-light:active:focus,.bs .btn-outline-light.active:focus,.bs .btn-outline-light.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(248,249,250,0.5)}.bs .btn-outline-light:disabled,.bs .btn-outline-light.disabled{color:#f8f9fa;background-color:transparent}.bs .btn-outline-dark{color:#212529;border-color:#212529}.bs .btn-outline-dark:hover{color:#fff;background-color:#212529;border-color:#212529}.btn-check:focus+.bs .btn-outline-dark,.bs .btn-outline-dark:focus{box-shadow:0 0 0 .25rem rgba(33,37,41,0.5)}.btn-check:checked+.bs .btn-outline-dark,.btn-check:active+.bs .btn-outline-dark,.bs .btn-outline-dark:active,.bs .btn-outline-dark.active,.bs .btn-outline-dark.dropdown-toggle.show{color:#fff;background-color:#212529;border-color:#212529}.btn-check:checked+.bs .btn-outline-dark:focus,.btn-check:active+.bs .btn-outline-dark:focus,.bs .btn-outline-dark:active:focus,.bs .btn-outline-dark.active:focus,.bs .btn-outline-dark.dropdown-toggle.show:focus{box-shadow:0 0 0 .25rem rgba(33,37,41,0.5)}.bs .btn-outline-dark:disabled,.bs .btn-outline-dark.disabled{color:#212529;background-color:transparent}.bs .btn-link{font-weight:400;color:#0d6efd;text-decoration:underline}.bs .btn-link:hover{color:#0a58ca}.bs .btn-link:disabled,.bs .btn-link.disabled{color:#6c757d}.bs .btn-lg,.bs .btn-group-lg>.btn{padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.bs .btn-sm,.bs .btn-group-sm>.btn{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.bs .fade{transition:opacity 0.15s linear}@media (prefers-reduced-motion: reduce){.bs .fade{transition:none}}.bs .fade:not(.show){opacity:0}.bs .collapse:not(.show){display:none}.bs .collapsing{height:0;overflow:hidden;transition:height 0.35s ease}@media (prefers-reduced-motion: reduce){.bs .collapsing{transition:none}}.bs .dropup,.bs .dropend,.bs .dropdown,.bs .dropstart{position:relative}.bs .dropdown-toggle{white-space:nowrap}.bs .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.bs .dropdown-toggle:empty::after{margin-left:0}.bs .dropdown-menu{position:absolute;top:100%;z-index:1000;display:none;min-width:10rem;padding:.5rem 0;margin:0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.15);border-radius:.25rem}.bs .dropdown-menu[data-bs-popper]{left:0;margin-top:.125rem}.bs .dropdown-menu-start{--bs-position: start}.bs .dropdown-menu-start[data-bs-popper]{right:auto /* rtl:ignore */;left:0 /* rtl:ignore */}.bs .dropdown-menu-end{--bs-position: end}.bs .dropdown-menu-end[data-bs-popper]{right:0 /* rtl:ignore */;left:auto /* rtl:ignore */}@media (min-width: 576px){.bs .dropdown-menu-sm-start{--bs-position: start}.bs .dropdown-menu-sm-start[data-bs-popper]{right:auto /* rtl:ignore */;left:0 /* rtl:ignore */}.bs .dropdown-menu-sm-end{--bs-position: end}.bs .dropdown-menu-sm-end[data-bs-popper]{right:0 /* rtl:ignore */;left:auto /* rtl:ignore */}}@media (min-width: 768px){.bs .dropdown-menu-md-start{--bs-position: start}.bs .dropdown-menu-md-start[data-bs-popper]{right:auto /* rtl:ignore */;left:0 /* rtl:ignore */}.bs .dropdown-menu-md-end{--bs-position: end}.bs .dropdown-menu-md-end[data-bs-popper]{right:0 /* rtl:ignore */;left:auto /* rtl:ignore */}}@media (min-width: 992px){.bs .dropdown-menu-lg-start{--bs-position: start}.bs .dropdown-menu-lg-start[data-bs-popper]{right:auto /* rtl:ignore */;left:0 /* rtl:ignore */}.bs .dropdown-menu-lg-end{--bs-position: end}.bs .dropdown-menu-lg-end[data-bs-popper]{right:0 /* rtl:ignore */;left:auto /* rtl:ignore */}}@media (min-width: 1200px){.bs .dropdown-menu-xl-start{--bs-position: start}.bs .dropdown-menu-xl-start[data-bs-popper]{right:auto /* rtl:ignore */;left:0 /* rtl:ignore */}.bs .dropdown-menu-xl-end{--bs-position: end}.bs .dropdown-menu-xl-end[data-bs-popper]{right:0 /* rtl:ignore */;left:auto /* rtl:ignore */}}@media (min-width: 1400px){.bs .dropdown-menu-xxl-start{--bs-position: start}.bs .dropdown-menu-xxl-start[data-bs-popper]{right:auto /* rtl:ignore */;left:0 /* rtl:ignore */}.bs .dropdown-menu-xxl-end{--bs-position: end}.bs .dropdown-menu-xxl-end[data-bs-popper]{right:0 /* rtl:ignore */;left:auto /* rtl:ignore */}}.bs .dropup .dropdown-menu[data-bs-popper]{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.bs .dropup .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.bs .dropup .dropdown-toggle:empty::after{margin-left:0}.bs .dropend .dropdown-menu{top:0;right:auto;left:100%}.bs .dropend .dropdown-menu[data-bs-popper]{margin-top:0;margin-left:.125rem}.bs .dropend .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.bs .dropend .dropdown-toggle:empty::after{margin-left:0}.bs .dropend .dropdown-toggle::after{vertical-align:0}.bs .dropstart .dropdown-menu{top:0;right:100%;left:auto}.bs .dropstart .dropdown-menu[data-bs-popper]{margin-top:0;margin-right:.125rem}.bs .dropstart .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\"}.bs .dropstart .dropdown-toggle::after{display:none}.bs .dropstart .dropdown-toggle::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.bs .dropstart .dropdown-toggle:empty::after{margin-left:0}.bs .dropstart .dropdown-toggle::before{vertical-align:0}.bs .dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid rgba(0,0,0,0.15)}.bs .dropdown-item{display:block;width:100%;padding:.25rem 1rem;clear:both;font-weight:400;color:#212529;text-align:inherit;text-decoration:none;white-space:nowrap;background-color:transparent;border:0}.bs .dropdown-item:hover,.bs .dropdown-item:focus{color:#1e2125;background-color:#e9ecef}.bs .dropdown-item.active,.bs .dropdown-item:active{color:#fff;text-decoration:none;background-color:#0d6efd}.bs .dropdown-item.disabled,.bs .dropdown-item:disabled{color:#adb5bd;pointer-events:none;background-color:transparent}.bs .dropdown-menu.show{display:block}.bs .dropdown-header{display:block;padding:.5rem 1rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.bs .dropdown-item-text{display:block;padding:.25rem 1rem;color:#212529}.bs .dropdown-menu-dark{color:#dee2e6;background-color:#343a40;border-color:rgba(0,0,0,0.15)}.bs .dropdown-menu-dark .dropdown-item{color:#dee2e6}.bs .dropdown-menu-dark .dropdown-item:hover,.bs .dropdown-menu-dark .dropdown-item:focus{color:#fff;background-color:rgba(255,255,255,0.15)}.bs .dropdown-menu-dark .dropdown-item.active,.bs .dropdown-menu-dark .dropdown-item:active{color:#fff;background-color:#0d6efd}.bs .dropdown-menu-dark .dropdown-item.disabled,.bs .dropdown-menu-dark .dropdown-item:disabled{color:#adb5bd}.bs .dropdown-menu-dark .dropdown-divider{border-color:rgba(0,0,0,0.15)}.bs .dropdown-menu-dark .dropdown-item-text{color:#dee2e6}.bs .dropdown-menu-dark .dropdown-header{color:#adb5bd}.bs .btn-group,.bs .btn-group-vertical{position:relative;display:inline-flex;vertical-align:middle}.bs .btn-group>.btn,.bs .btn-group-vertical>.btn{position:relative;flex:1 1 auto}.bs .btn-group>.btn-check:checked+.btn,.bs .btn-group>.btn-check:focus+.btn,.bs .btn-group>.btn:hover,.bs .btn-group>.btn:focus,.bs .btn-group>.btn:active,.bs .btn-group>.btn.active,.bs .btn-group-vertical>.btn-check:checked+.btn,.bs .btn-group-vertical>.btn-check:focus+.btn,.bs .btn-group-vertical>.btn:hover,.bs .btn-group-vertical>.btn:focus,.bs .btn-group-vertical>.btn:active,.bs .btn-group-vertical>.btn.active{z-index:1}.bs .btn-toolbar{display:flex;flex-wrap:wrap;justify-content:flex-start}.bs .btn-toolbar .input-group{width:auto}.bs .btn-group>.btn:not(:first-child),.bs .btn-group>.btn-group:not(:first-child){margin-left:-1px}.bs .btn-group>.btn:not(:last-child):not(.dropdown-toggle),.bs .btn-group>.btn-group:not(:last-child)>.btn{border-top-right-radius:0;border-bottom-right-radius:0}.bs .btn-group>.btn:nth-child(n+3),.bs .btn-group>:not(.btn-check)+.btn,.bs .btn-group>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-bottom-left-radius:0}.bs .dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.bs .dropdown-toggle-split::after,.dropup .bs .dropdown-toggle-split::after,.dropend .bs .dropdown-toggle-split::after{margin-left:0}.dropstart .bs .dropdown-toggle-split::before{margin-right:0}.bs .btn-sm+.dropdown-toggle-split,.bs .btn-group-sm>.btn+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.bs .btn-lg+.dropdown-toggle-split,.bs .btn-group-lg>.btn+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.bs .btn-group-vertical{flex-direction:column;align-items:flex-start;justify-content:center}.bs .btn-group-vertical>.btn,.bs .btn-group-vertical>.btn-group{width:100%}.bs .btn-group-vertical>.btn:not(:first-child),.bs .btn-group-vertical>.btn-group:not(:first-child){margin-top:-1px}.bs .btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle),.bs .btn-group-vertical>.btn-group:not(:last-child)>.btn{border-bottom-right-radius:0;border-bottom-left-radius:0}.bs .btn-group-vertical>.btn ~ .btn,.bs .btn-group-vertical>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-top-right-radius:0}.bs .nav{display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.bs .nav-link{display:block;padding:.5rem 1rem;text-decoration:none;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .nav-link{transition:none}}.bs .nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.bs .nav-tabs{border-bottom:1px solid #dee2e6}.bs .nav-tabs .nav-link{margin-bottom:-1px;background:none;border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.bs .nav-tabs .nav-link:hover,.bs .nav-tabs .nav-link:focus{border-color:#e9ecef #e9ecef #dee2e6;isolation:isolate}.bs .nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.bs .nav-tabs .nav-link.active,.bs .nav-tabs .nav-item.show .nav-link{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.bs .nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.bs .nav-pills .nav-link{background:none;border:0;border-radius:.25rem}.bs .nav-pills .nav-link.active,.bs .nav-pills .show>.nav-link{color:#fff;background-color:#0d6efd}.bs .nav-fill>.nav-link,.bs .nav-fill .nav-item{flex:1 1 auto;text-align:center}.bs .nav-justified>.nav-link,.bs .nav-justified .nav-item{flex-basis:0;flex-grow:1;text-align:center}.bs .nav-fill .nav-item .nav-link,.bs .nav-justified .nav-item .nav-link{width:100%}.bs .tab-content>.tab-pane{display:none}.bs .tab-content>.active{display:block}.bs .navbar{position:relative;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;padding-top:.5rem;padding-bottom:.5rem}.bs .navbar>.container,.bs .navbar>.container-fluid,.bs .navbar>.container-sm,.bs .navbar>.container-md,.bs .navbar>.container-lg,.bs .navbar>.container-xl,.bs .navbar>.container-xxl{display:flex;flex-wrap:inherit;align-items:center;justify-content:space-between}.bs .navbar-brand{padding-top:.3125rem;padding-bottom:.3125rem;margin-right:1rem;font-size:1.25rem;text-decoration:none;white-space:nowrap}.bs .navbar-nav{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.bs .navbar-nav .nav-link{padding-right:0;padding-left:0}.bs .navbar-nav .dropdown-menu{position:static}.bs .navbar-text{padding-top:.5rem;padding-bottom:.5rem}.bs .navbar-collapse{flex-basis:100%;flex-grow:1;align-items:center}.bs .navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem;transition:box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .navbar-toggler{transition:none}}.bs .navbar-toggler:hover{text-decoration:none}.bs .navbar-toggler:focus{text-decoration:none;outline:0;box-shadow:0 0 0 .25rem}.bs .navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;background-repeat:no-repeat;background-position:center;background-size:100%}.bs .navbar-nav-scroll{max-height:var(--bs-scroll-height, 75vh);overflow-y:auto}@media (min-width: 576px){.bs .navbar-expand-sm{flex-wrap:nowrap;justify-content:flex-start}.bs .navbar-expand-sm .navbar-nav{flex-direction:row}.bs .navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.bs .navbar-expand-sm .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.bs .navbar-expand-sm .navbar-nav-scroll{overflow:visible}.bs .navbar-expand-sm .navbar-collapse{display:flex !important;flex-basis:auto}.bs .navbar-expand-sm .navbar-toggler{display:none}}@media (min-width: 768px){.bs .navbar-expand-md{flex-wrap:nowrap;justify-content:flex-start}.bs .navbar-expand-md .navbar-nav{flex-direction:row}.bs .navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.bs .navbar-expand-md .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.bs .navbar-expand-md .navbar-nav-scroll{overflow:visible}.bs .navbar-expand-md .navbar-collapse{display:flex !important;flex-basis:auto}.bs .navbar-expand-md .navbar-toggler{display:none}}@media (min-width: 992px){.bs .navbar-expand-lg{flex-wrap:nowrap;justify-content:flex-start}.bs .navbar-expand-lg .navbar-nav{flex-direction:row}.bs .navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.bs .navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.bs .navbar-expand-lg .navbar-nav-scroll{overflow:visible}.bs .navbar-expand-lg .navbar-collapse{display:flex !important;flex-basis:auto}.bs .navbar-expand-lg .navbar-toggler{display:none}}@media (min-width: 1200px){.bs .navbar-expand-xl{flex-wrap:nowrap;justify-content:flex-start}.bs .navbar-expand-xl .navbar-nav{flex-direction:row}.bs .navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.bs .navbar-expand-xl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.bs .navbar-expand-xl .navbar-nav-scroll{overflow:visible}.bs .navbar-expand-xl .navbar-collapse{display:flex !important;flex-basis:auto}.bs .navbar-expand-xl .navbar-toggler{display:none}}@media (min-width: 1400px){.bs .navbar-expand-xxl{flex-wrap:nowrap;justify-content:flex-start}.bs .navbar-expand-xxl .navbar-nav{flex-direction:row}.bs .navbar-expand-xxl .navbar-nav .dropdown-menu{position:absolute}.bs .navbar-expand-xxl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.bs .navbar-expand-xxl .navbar-nav-scroll{overflow:visible}.bs .navbar-expand-xxl .navbar-collapse{display:flex !important;flex-basis:auto}.bs .navbar-expand-xxl .navbar-toggler{display:none}}.bs .navbar-expand{flex-wrap:nowrap;justify-content:flex-start}.bs .navbar-expand .navbar-nav{flex-direction:row}.bs .navbar-expand .navbar-nav .dropdown-menu{position:absolute}.bs .navbar-expand .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.bs .navbar-expand .navbar-nav-scroll{overflow:visible}.bs .navbar-expand .navbar-collapse{display:flex !important;flex-basis:auto}.bs .navbar-expand .navbar-toggler{display:none}.bs .navbar-light .navbar-brand{color:rgba(0,0,0,0.9)}.bs .navbar-light .navbar-brand:hover,.bs .navbar-light .navbar-brand:focus{color:rgba(0,0,0,0.9)}.bs .navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,0.55)}.bs .navbar-light .navbar-nav .nav-link:hover,.bs .navbar-light .navbar-nav .nav-link:focus{color:rgba(0,0,0,0.7)}.bs .navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,0.3)}.bs .navbar-light .navbar-nav .show>.nav-link,.bs .navbar-light .navbar-nav .nav-link.active{color:rgba(0,0,0,0.9)}.bs .navbar-light .navbar-toggler{color:rgba(0,0,0,0.55);border-color:rgba(0,0,0,0.1)}.bs .navbar-light .navbar-toggler-icon{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%280,0,0,0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\\\")}.bs .navbar-light .navbar-text{color:rgba(0,0,0,0.55)}.bs .navbar-light .navbar-text a,.bs .navbar-light .navbar-text a:hover,.bs .navbar-light .navbar-text a:focus{color:rgba(0,0,0,0.9)}.bs .navbar-dark .navbar-brand{color:#fff}.bs .navbar-dark .navbar-brand:hover,.bs .navbar-dark .navbar-brand:focus{color:#fff}.bs .navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,0.55)}.bs .navbar-dark .navbar-nav .nav-link:hover,.bs .navbar-dark .navbar-nav .nav-link:focus{color:rgba(255,255,255,0.75)}.bs .navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,0.25)}.bs .navbar-dark .navbar-nav .show>.nav-link,.bs .navbar-dark .navbar-nav .nav-link.active{color:#fff}.bs .navbar-dark .navbar-toggler{color:rgba(255,255,255,0.55);border-color:rgba(255,255,255,0.1)}.bs .navbar-dark .navbar-toggler-icon{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255,255,255,0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\\\")}.bs .navbar-dark .navbar-text{color:rgba(255,255,255,0.55)}.bs .navbar-dark .navbar-text a,.bs .navbar-dark .navbar-text a:hover,.bs .navbar-dark .navbar-text a:focus{color:#fff}.bs .card{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,0.125);border-radius:.25rem}.bs .card>hr{margin-right:0;margin-left:0}.bs .card>.list-group{border-top:inherit;border-bottom:inherit}.bs .card>.list-group:first-child{border-top-width:0;border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.bs .card>.list-group:last-child{border-bottom-width:0;border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.bs .card>.card-header+.list-group,.bs .card>.list-group+.card-footer{border-top:0}.bs .card-body{flex:1 1 auto;padding:1rem 1rem}.bs .card-title{margin-bottom:.5rem}.bs .card-subtitle{margin-top:-.25rem;margin-bottom:0}.bs .card-text:last-child{margin-bottom:0}.bs .card-link:hover{text-decoration:none}.bs .card-link+.card-link{margin-left:1rem}.bs .card-header{padding:.5rem 1rem;margin-bottom:0;background-color:rgba(0,0,0,0.03);border-bottom:1px solid rgba(0,0,0,0.125)}.bs .card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.bs .card-footer{padding:.5rem 1rem;background-color:rgba(0,0,0,0.03);border-top:1px solid rgba(0,0,0,0.125)}.bs .card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.bs .card-header-tabs{margin-right:-.5rem;margin-bottom:-.5rem;margin-left:-.5rem;border-bottom:0}.bs .card-header-pills{margin-right:-.5rem;margin-left:-.5rem}.bs .card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1rem;border-radius:calc(.25rem - 1px)}.bs .card-img,.bs .card-img-top,.bs .card-img-bottom{width:100%}.bs .card-img,.bs .card-img-top{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.bs .card-img,.bs .card-img-bottom{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.bs .card-group>.card{margin-bottom:.75rem}@media (min-width: 576px){.bs .card-group{display:flex;flex-flow:row wrap}.bs .card-group>.card{flex:1 0 0%;margin-bottom:0}.bs .card-group>.card+.card{margin-left:0;border-left:0}.bs .card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.bs .card-group>.card:not(:last-child) .card-img-top,.bs .card-group>.card:not(:last-child) .card-header{border-top-right-radius:0}.bs .card-group>.card:not(:last-child) .card-img-bottom,.bs .card-group>.card:not(:last-child) .card-footer{border-bottom-right-radius:0}.bs .card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.bs .card-group>.card:not(:first-child) .card-img-top,.bs .card-group>.card:not(:first-child) .card-header{border-top-left-radius:0}.bs .card-group>.card:not(:first-child) .card-img-bottom,.bs .card-group>.card:not(:first-child) .card-footer{border-bottom-left-radius:0}}.bs .accordion-button{position:relative;display:flex;align-items:center;width:100%;padding:1rem 1.25rem;font-size:1rem;color:#212529;text-align:left;background-color:#fff;border:0;border-radius:0;overflow-anchor:none;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out,border-radius 0.15s ease}@media (prefers-reduced-motion: reduce){.bs .accordion-button{transition:none}}.bs .accordion-button:not(.collapsed){color:#0c63e4;background-color:#e7f1ff;box-shadow:inset 0 -1px 0 rgba(0,0,0,0.125)}.bs .accordion-button:not(.collapsed)::after{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%230c63e4'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\\\");transform:rotate(180deg)}.bs .accordion-button::after{flex-shrink:0;width:1.25rem;height:1.25rem;margin-left:auto;content:\\\"\\\";background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\\\");background-repeat:no-repeat;background-size:1.25rem;transition:transform 0.2s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .accordion-button::after{transition:none}}.bs .accordion-button:hover{z-index:2}.bs .accordion-button:focus{z-index:3;border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,0.25)}.bs .accordion-header{margin-bottom:0}.bs .accordion-item{margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,0.125)}.bs .accordion-item:first-of-type{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.bs .accordion-item:first-of-type .accordion-button{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.bs .accordion-item:last-of-type{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.bs .accordion-item:last-of-type .accordion-button.collapsed{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.bs .accordion-item:last-of-type .accordion-collapse{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.bs .accordion-body{padding:1rem 1.25rem}.bs .accordion-flush .accordion-collapse{border-width:0}.bs .accordion-flush .accordion-item{border-right:0;border-left:0;border-radius:0}.bs .accordion-flush .accordion-item:first-child{border-top:0}.bs .accordion-flush .accordion-item:last-child{border-bottom:0}.bs .accordion-flush .accordion-item .accordion-button{border-radius:0}.bs .breadcrumb{display:flex;flex-wrap:wrap;padding:0 0;margin-bottom:1rem;list-style:none}.bs .breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.bs .breadcrumb-item+.breadcrumb-item::before{float:left;padding-right:.5rem;color:#6c757d;content:var(--bs-breadcrumb-divider, \\\"/\\\") /* rtl: var(--bs-breadcrumb-divider, \\\"/\\\") */}.bs .breadcrumb-item.active{color:#6c757d}.bs .pagination{display:flex;padding-left:0;list-style:none}.bs .page-link{position:relative;display:block;color:#0d6efd;text-decoration:none;background-color:#fff;border:1px solid #dee2e6;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .page-link{transition:none}}.bs .page-link:hover{z-index:2;color:#0a58ca;background-color:#e9ecef;border-color:#dee2e6}.bs .page-link:focus{z-index:3;color:#0a58ca;background-color:#e9ecef;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,0.25)}.bs .page-item:not(:first-child) .page-link{margin-left:-1px}.bs .page-item.active .page-link{z-index:3;color:#fff;background-color:#0d6efd;border-color:#0d6efd}.bs .page-item.disabled .page-link{color:#6c757d;pointer-events:none;background-color:#fff;border-color:#dee2e6}.bs .page-link{padding:.375rem .75rem}.bs .page-item:first-child .page-link{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.bs .page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.bs .pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem}.bs .pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.bs .pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.bs .pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem}.bs .pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.bs .pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.bs .badge{display:inline-block;padding:.35em .65em;font-size:.75em;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.bs .badge:empty{display:none}.bs .btn .badge{position:relative;top:-1px}.bs .alert{position:relative;padding:1rem 1rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.bs .alert-heading{color:inherit}.bs .alert-link{font-weight:700}.bs .alert-dismissible{padding-right:3rem}.bs .alert-dismissible .btn-close{position:absolute;top:0;right:0;z-index:2;padding:1.25rem 1rem}.bs .alert-primary{color:#084298;background-color:#cfe2ff;border-color:#b6d4fe}.bs .alert-primary .alert-link{color:#06357a}.bs .alert-secondary{color:#41464b;background-color:#e2e3e5;border-color:#d3d6d8}.bs .alert-secondary .alert-link{color:#34383c}.bs .alert-success{color:#0f5132;background-color:#d1e7dd;border-color:#badbcc}.bs .alert-success .alert-link{color:#0c4128}.bs .alert-info{color:#055160;background-color:#cff4fc;border-color:#b6effb}.bs .alert-info .alert-link{color:#04414d}.bs .alert-warning{color:#664d03;background-color:#fff3cd;border-color:#ffecb5}.bs .alert-warning .alert-link{color:#523e02}.bs .alert-danger{color:#842029;background-color:#f8d7da;border-color:#f5c2c7}.bs .alert-danger .alert-link{color:#6a1a21}.bs .alert-light{color:#636464;background-color:#fefefe;border-color:#fdfdfe}.bs .alert-light .alert-link{color:#4f5050}.bs .alert-dark{color:#141619;background-color:#d3d3d4;border-color:#bcbebf}.bs .alert-dark .alert-link{color:#101214}@keyframes progress-bar-stripes{0%{background-position-x:1rem}}.bs .progress{display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem}.bs .progress-bar{display:flex;flex-direction:column;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#0d6efd;transition:width 0.6s ease}@media (prefers-reduced-motion: reduce){.bs .progress-bar{transition:none}}.bs .progress-bar-striped{background-image:linear-gradient(45deg, rgba(255,255,255,0.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.15) 50%, rgba(255,255,255,0.15) 75%, transparent 75%, transparent);background-size:1rem 1rem}.bs .progress-bar-animated{animation:1s linear infinite progress-bar-stripes}@media (prefers-reduced-motion: reduce){.bs .progress-bar-animated{animation:none}}.bs .list-group{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;border-radius:.25rem}.bs .list-group-numbered{list-style-type:none;counter-reset:section}.bs .list-group-numbered>li::before{content:counters(section, \\\".\\\") \\\". \\\";counter-increment:section}.bs .list-group-item-action{width:100%;color:#495057;text-align:inherit}.bs .list-group-item-action:hover,.bs .list-group-item-action:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.bs .list-group-item-action:active{color:#212529;background-color:#e9ecef}.bs .list-group-item{position:relative;display:block;padding:.5rem 1rem;color:#212529;text-decoration:none;background-color:#fff;border:1px solid rgba(0,0,0,0.125)}.bs .list-group-item:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.bs .list-group-item:last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.bs .list-group-item.disabled,.bs .list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.bs .list-group-item.active{z-index:2;color:#fff;background-color:#0d6efd;border-color:#0d6efd}.bs .list-group-item+.bs .list-group-item{border-top-width:0}.bs .list-group-item+.bs .list-group-item.active{margin-top:-1px;border-top-width:1px}.bs .list-group-horizontal{flex-direction:row}.bs .list-group-horizontal>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.bs .list-group-horizontal>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.bs .list-group-horizontal>.list-group-item.active{margin-top:0}.bs .list-group-horizontal>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.bs .list-group-horizontal>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width: 576px){.bs .list-group-horizontal-sm{flex-direction:row}.bs .list-group-horizontal-sm>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.bs .list-group-horizontal-sm>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.bs .list-group-horizontal-sm>.list-group-item.active{margin-top:0}.bs .list-group-horizontal-sm>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.bs .list-group-horizontal-sm>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 768px){.bs .list-group-horizontal-md{flex-direction:row}.bs .list-group-horizontal-md>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.bs .list-group-horizontal-md>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.bs .list-group-horizontal-md>.list-group-item.active{margin-top:0}.bs .list-group-horizontal-md>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.bs .list-group-horizontal-md>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 992px){.bs .list-group-horizontal-lg{flex-direction:row}.bs .list-group-horizontal-lg>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.bs .list-group-horizontal-lg>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.bs .list-group-horizontal-lg>.list-group-item.active{margin-top:0}.bs .list-group-horizontal-lg>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.bs .list-group-horizontal-lg>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 1200px){.bs .list-group-horizontal-xl{flex-direction:row}.bs .list-group-horizontal-xl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.bs .list-group-horizontal-xl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.bs .list-group-horizontal-xl>.list-group-item.active{margin-top:0}.bs .list-group-horizontal-xl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.bs .list-group-horizontal-xl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 1400px){.bs .list-group-horizontal-xxl{flex-direction:row}.bs .list-group-horizontal-xxl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.bs .list-group-horizontal-xxl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.bs .list-group-horizontal-xxl>.list-group-item.active{margin-top:0}.bs .list-group-horizontal-xxl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.bs .list-group-horizontal-xxl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.bs .list-group-flush{border-radius:0}.bs .list-group-flush>.list-group-item{border-width:0 0 1px}.bs .list-group-flush>.list-group-item:last-child{border-bottom-width:0}.bs .list-group-item-primary{color:#084298;background-color:#cfe2ff}.bs .list-group-item-primary.list-group-item-action:hover,.bs .list-group-item-primary.list-group-item-action:focus{color:#084298;background-color:#bacbe6}.bs .list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#084298;border-color:#084298}.bs .list-group-item-secondary{color:#41464b;background-color:#e2e3e5}.bs .list-group-item-secondary.list-group-item-action:hover,.bs .list-group-item-secondary.list-group-item-action:focus{color:#41464b;background-color:#cbccce}.bs .list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#41464b;border-color:#41464b}.bs .list-group-item-success{color:#0f5132;background-color:#d1e7dd}.bs .list-group-item-success.list-group-item-action:hover,.bs .list-group-item-success.list-group-item-action:focus{color:#0f5132;background-color:#bcd0c7}.bs .list-group-item-success.list-group-item-action.active{color:#fff;background-color:#0f5132;border-color:#0f5132}.bs .list-group-item-info{color:#055160;background-color:#cff4fc}.bs .list-group-item-info.list-group-item-action:hover,.bs .list-group-item-info.list-group-item-action:focus{color:#055160;background-color:#badce3}.bs .list-group-item-info.list-group-item-action.active{color:#fff;background-color:#055160;border-color:#055160}.bs .list-group-item-warning{color:#664d03;background-color:#fff3cd}.bs .list-group-item-warning.list-group-item-action:hover,.bs .list-group-item-warning.list-group-item-action:focus{color:#664d03;background-color:#e6dbb9}.bs .list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#664d03;border-color:#664d03}.bs .list-group-item-danger{color:#842029;background-color:#f8d7da}.bs .list-group-item-danger.list-group-item-action:hover,.bs .list-group-item-danger.list-group-item-action:focus{color:#842029;background-color:#dfc2c4}.bs .list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#842029;border-color:#842029}.bs .list-group-item-light{color:#636464;background-color:#fefefe}.bs .list-group-item-light.list-group-item-action:hover,.bs .list-group-item-light.list-group-item-action:focus{color:#636464;background-color:#e5e5e5}.bs .list-group-item-light.list-group-item-action.active{color:#fff;background-color:#636464;border-color:#636464}.bs .list-group-item-dark{color:#141619;background-color:#d3d3d4}.bs .list-group-item-dark.list-group-item-action:hover,.bs .list-group-item-dark.list-group-item-action:focus{color:#141619;background-color:#bebebf}.bs .list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#141619;border-color:#141619}.bs .btn-close{box-sizing:content-box;width:1em;height:1em;padding:.25em .25em;color:#000;background:transparent url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e\\\") center/1em auto no-repeat;border:0;border-radius:.25rem;opacity:.5}.bs .btn-close:hover{color:#000;text-decoration:none;opacity:.75}.bs .btn-close:focus{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,0.25);opacity:1}.bs .btn-close:disabled,.bs .btn-close.disabled{pointer-events:none;user-select:none;opacity:.25}.bs .btn-close-white{filter:invert(1) grayscale(100%) brightness(200%)}.bs .toast{width:350px;max-width:100%;font-size:.875rem;pointer-events:auto;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border:1px solid rgba(0,0,0,0.1);box-shadow:0 0.5rem 1rem rgba(0,0,0,0.15);border-radius:.25rem}.bs .toast:not(.showing):not(.show){opacity:0}.bs .toast.hide{display:none}.bs .toast-container{width:max-content;max-width:100%;pointer-events:none}.bs .toast-container>:not(:last-child){margin-bottom:.75rem}.bs .toast-header{display:flex;align-items:center;padding:.5rem .75rem;color:#6c757d;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,0.05);border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.bs .toast-header .btn-close{margin-right:-.375rem;margin-left:.75rem}.bs .toast-body{padding:.75rem;word-wrap:break-word}.bs .modal-open{overflow:hidden}.bs .modal-open .modal{overflow-x:hidden;overflow-y:auto}.bs .modal{position:fixed;top:0;left:0;z-index:1060;display:none;width:100%;height:100%;overflow:hidden;outline:0}.bs .modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .bs .modal-dialog{transition:transform 0.3s ease-out;transform:translate(0, -50px)}@media (prefers-reduced-motion: reduce){.modal.fade .bs .modal-dialog{transition:none}}.modal.show .bs .modal-dialog{transform:none}.modal.modal-static .bs .modal-dialog{transform:scale(1.02)}.bs .modal-dialog-scrollable{height:calc(100% - 1rem)}.bs .modal-dialog-scrollable .modal-content{max-height:100%;overflow:hidden}.bs .modal-dialog-scrollable .modal-body{overflow-y:auto}.bs .modal-dialog-centered{display:flex;align-items:center;min-height:calc(100% - 1rem)}.bs .modal-content{position:relative;display:flex;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:.3rem;outline:0}.bs .modal-backdrop{position:fixed;top:0;left:0;z-index:1050;width:100vw;height:100vh;background-color:#000}.bs .modal-backdrop.fade{opacity:0}.bs .modal-backdrop.show{opacity:.5}.bs .modal-header{display:flex;flex-shrink:0;align-items:center;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.bs .modal-header .btn-close{padding:.5rem .5rem;margin:-.5rem -.5rem -.5rem auto}.bs .modal-title{margin-bottom:0;line-height:1.5}.bs .modal-body{position:relative;flex:1 1 auto;padding:1rem}.bs .modal-footer{display:flex;flex-wrap:wrap;flex-shrink:0;align-items:center;justify-content:flex-end;padding:.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(.3rem - 1px);border-bottom-left-radius:calc(.3rem - 1px)}.bs .modal-footer>*{margin:.25rem}.bs .modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width: 576px){.bs .modal-dialog{max-width:500px;margin:1.75rem auto}.bs .modal-dialog-scrollable{height:calc(100% - 3.5rem)}.bs .modal-dialog-centered{min-height:calc(100% - 3.5rem)}.bs .modal-sm{max-width:300px}}@media (min-width: 992px){.bs .modal-lg,.bs .modal-xl{max-width:800px}}@media (min-width: 1200px){.bs .modal-xl{max-width:1140px}}.bs .modal-fullscreen{width:100vw;max-width:none;height:100%;margin:0}.bs .modal-fullscreen .modal-content{height:100%;border:0;border-radius:0}.bs .modal-fullscreen .modal-header{border-radius:0}.bs .modal-fullscreen .modal-body{overflow-y:auto}.bs .modal-fullscreen .modal-footer{border-radius:0}@media (max-width: 575.98px){.bs .modal-fullscreen-sm-down{width:100vw;max-width:none;height:100%;margin:0}.bs .modal-fullscreen-sm-down .modal-content{height:100%;border:0;border-radius:0}.bs .modal-fullscreen-sm-down .modal-header{border-radius:0}.bs .modal-fullscreen-sm-down .modal-body{overflow-y:auto}.bs .modal-fullscreen-sm-down .modal-footer{border-radius:0}}@media (max-width: 767.98px){.bs .modal-fullscreen-md-down{width:100vw;max-width:none;height:100%;margin:0}.bs .modal-fullscreen-md-down .modal-content{height:100%;border:0;border-radius:0}.bs .modal-fullscreen-md-down .modal-header{border-radius:0}.bs .modal-fullscreen-md-down .modal-body{overflow-y:auto}.bs .modal-fullscreen-md-down .modal-footer{border-radius:0}}@media (max-width: 991.98px){.bs .modal-fullscreen-lg-down{width:100vw;max-width:none;height:100%;margin:0}.bs .modal-fullscreen-lg-down .modal-content{height:100%;border:0;border-radius:0}.bs .modal-fullscreen-lg-down .modal-header{border-radius:0}.bs .modal-fullscreen-lg-down .modal-body{overflow-y:auto}.bs .modal-fullscreen-lg-down .modal-footer{border-radius:0}}@media (max-width: 1199.98px){.bs .modal-fullscreen-xl-down{width:100vw;max-width:none;height:100%;margin:0}.bs .modal-fullscreen-xl-down .modal-content{height:100%;border:0;border-radius:0}.bs .modal-fullscreen-xl-down .modal-header{border-radius:0}.bs .modal-fullscreen-xl-down .modal-body{overflow-y:auto}.bs .modal-fullscreen-xl-down .modal-footer{border-radius:0}}@media (max-width: 1399.98px){.bs .modal-fullscreen-xxl-down{width:100vw;max-width:none;height:100%;margin:0}.bs .modal-fullscreen-xxl-down .modal-content{height:100%;border:0;border-radius:0}.bs .modal-fullscreen-xxl-down .modal-header{border-radius:0}.bs .modal-fullscreen-xxl-down .modal-body{overflow-y:auto}.bs .modal-fullscreen-xxl-down .modal-footer{border-radius:0}}.bs .tooltip{position:absolute;z-index:1080;display:block;margin:0;font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.bs .tooltip.show{opacity:.9}.bs .tooltip .tooltip-arrow{position:absolute;display:block;width:.8rem;height:.4rem}.bs .tooltip .tooltip-arrow::before{position:absolute;content:\\\"\\\";border-color:transparent;border-style:solid}.bs .bs-tooltip-top,.bs .bs-tooltip-auto[data-popper-placement^=\\\"top\\\"]{padding:.4rem 0}.bs .bs-tooltip-top .tooltip-arrow,.bs .bs-tooltip-auto[data-popper-placement^=\\\"top\\\"] .tooltip-arrow{bottom:0}.bs .bs-tooltip-top .tooltip-arrow::before,.bs .bs-tooltip-auto[data-popper-placement^=\\\"top\\\"] .tooltip-arrow::before{top:-1px;border-width:.4rem .4rem 0;border-top-color:#000}.bs .bs-tooltip-end,.bs .bs-tooltip-auto[data-popper-placement^=\\\"right\\\"]{padding:0 .4rem}.bs .bs-tooltip-end .tooltip-arrow,.bs .bs-tooltip-auto[data-popper-placement^=\\\"right\\\"] .tooltip-arrow{left:0;width:.4rem;height:.8rem}.bs .bs-tooltip-end .tooltip-arrow::before,.bs .bs-tooltip-auto[data-popper-placement^=\\\"right\\\"] .tooltip-arrow::before{right:-1px;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs .bs-tooltip-bottom,.bs .bs-tooltip-auto[data-popper-placement^=\\\"bottom\\\"]{padding:.4rem 0}.bs .bs-tooltip-bottom .tooltip-arrow,.bs .bs-tooltip-auto[data-popper-placement^=\\\"bottom\\\"] .tooltip-arrow{top:0}.bs .bs-tooltip-bottom .tooltip-arrow::before,.bs .bs-tooltip-auto[data-popper-placement^=\\\"bottom\\\"] .tooltip-arrow::before{bottom:-1px;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs .bs-tooltip-start,.bs .bs-tooltip-auto[data-popper-placement^=\\\"left\\\"]{padding:0 .4rem}.bs .bs-tooltip-start .tooltip-arrow,.bs .bs-tooltip-auto[data-popper-placement^=\\\"left\\\"] .tooltip-arrow{right:0;width:.4rem;height:.8rem}.bs .bs-tooltip-start .tooltip-arrow::before,.bs .bs-tooltip-auto[data-popper-placement^=\\\"left\\\"] .tooltip-arrow::before{left:-1px;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.bs .tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.bs .popover{position:absolute;top:0;left:0 /* rtl:ignore */;z-index:1070;display:block;max-width:276px;font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:.3rem}.bs .popover .popover-arrow{position:absolute;display:block;width:1rem;height:.5rem}.bs .popover .popover-arrow::before,.bs .popover .popover-arrow::after{position:absolute;display:block;content:\\\"\\\";border-color:transparent;border-style:solid}.bs .bs-popover-top>.popover-arrow,.bs .bs-popover-auto[data-popper-placement^=\\\"top\\\"]>.popover-arrow{bottom:calc(-.5rem - 1px)}.bs .bs-popover-top>.popover-arrow::before,.bs .bs-popover-auto[data-popper-placement^=\\\"top\\\"]>.popover-arrow::before{bottom:0;border-width:.5rem .5rem 0;border-top-color:rgba(0,0,0,0.25)}.bs .bs-popover-top>.popover-arrow::after,.bs .bs-popover-auto[data-popper-placement^=\\\"top\\\"]>.popover-arrow::after{bottom:1px;border-width:.5rem .5rem 0;border-top-color:#fff}.bs .bs-popover-end>.popover-arrow,.bs .bs-popover-auto[data-popper-placement^=\\\"right\\\"]>.popover-arrow{left:calc(-.5rem - 1px);width:.5rem;height:1rem}.bs .bs-popover-end>.popover-arrow::before,.bs .bs-popover-auto[data-popper-placement^=\\\"right\\\"]>.popover-arrow::before{left:0;border-width:.5rem .5rem .5rem 0;border-right-color:rgba(0,0,0,0.25)}.bs .bs-popover-end>.popover-arrow::after,.bs .bs-popover-auto[data-popper-placement^=\\\"right\\\"]>.popover-arrow::after{left:1px;border-width:.5rem .5rem .5rem 0;border-right-color:#fff}.bs .bs-popover-bottom>.popover-arrow,.bs .bs-popover-auto[data-popper-placement^=\\\"bottom\\\"]>.popover-arrow{top:calc(-.5rem - 1px)}.bs .bs-popover-bottom>.popover-arrow::before,.bs .bs-popover-auto[data-popper-placement^=\\\"bottom\\\"]>.popover-arrow::before{top:0;border-width:0 .5rem .5rem .5rem;border-bottom-color:rgba(0,0,0,0.25)}.bs .bs-popover-bottom>.popover-arrow::after,.bs .bs-popover-auto[data-popper-placement^=\\\"bottom\\\"]>.popover-arrow::after{top:1px;border-width:0 .5rem .5rem .5rem;border-bottom-color:#fff}.bs .bs-popover-bottom .popover-header::before,.bs .bs-popover-auto[data-popper-placement^=\\\"bottom\\\"] .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\\\"\\\";border-bottom:1px solid #f0f0f0}.bs .bs-popover-start>.popover-arrow,.bs .bs-popover-auto[data-popper-placement^=\\\"left\\\"]>.popover-arrow{right:calc(-.5rem - 1px);width:.5rem;height:1rem}.bs .bs-popover-start>.popover-arrow::before,.bs .bs-popover-auto[data-popper-placement^=\\\"left\\\"]>.popover-arrow::before{right:0;border-width:.5rem 0 .5rem .5rem;border-left-color:rgba(0,0,0,0.25)}.bs .bs-popover-start>.popover-arrow::after,.bs .bs-popover-auto[data-popper-placement^=\\\"left\\\"]>.popover-arrow::after{right:1px;border-width:.5rem 0 .5rem .5rem;border-left-color:#fff}.bs .popover-header{padding:.5rem 1rem;margin-bottom:0;font-size:1rem;background-color:#f0f0f0;border-bottom:1px solid #d8d8d8;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.bs .popover-header:empty{display:none}.bs .popover-body{padding:1rem 1rem;color:#212529}.bs .carousel{position:relative}.bs .carousel.pointer-event{touch-action:pan-y}.bs .carousel-inner{position:relative;width:100%;overflow:hidden}.bs .carousel-inner::after{display:block;clear:both;content:\\\"\\\"}.bs .carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;backface-visibility:hidden;transition:transform .6s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .carousel-item{transition:none}}.bs .carousel-item.active,.bs .carousel-item-next,.bs .carousel-item-prev{display:block}.bs .carousel-item-next:not(.carousel-item-start),.bs .active.carousel-item-end{transform:translateX(100%)}.bs .carousel-item-prev:not(.carousel-item-end),.bs .active.carousel-item-start{transform:translateX(-100%)}.bs .carousel-fade .carousel-item{opacity:0;transition-property:opacity;transform:none}.bs .carousel-fade .carousel-item.active,.bs .carousel-fade .carousel-item-next.carousel-item-start,.bs .carousel-fade .carousel-item-prev.carousel-item-end{z-index:1;opacity:1}.bs .carousel-fade .active.carousel-item-start,.bs .carousel-fade .active.carousel-item-end{z-index:0;opacity:0;transition:opacity 0s .6s}@media (prefers-reduced-motion: reduce){.bs .carousel-fade .active.carousel-item-start,.bs .carousel-fade .active.carousel-item-end{transition:none}}.bs .carousel-control-prev,.bs .carousel-control-next{position:absolute;top:0;bottom:0;z-index:1;display:flex;align-items:center;justify-content:center;width:15%;padding:0;color:#fff;text-align:center;background:none;border:0;opacity:.5;transition:opacity 0.15s ease}@media (prefers-reduced-motion: reduce){.bs .carousel-control-prev,.bs .carousel-control-next{transition:none}}.bs .carousel-control-prev:hover,.bs .carousel-control-prev:focus,.bs .carousel-control-next:hover,.bs .carousel-control-next:focus{color:#fff;text-decoration:none;outline:0;opacity:.9}.bs .carousel-control-prev{left:0}.bs .carousel-control-next{right:0}.bs .carousel-control-prev-icon,.bs .carousel-control-next-icon{display:inline-block;width:2rem;height:2rem;background-repeat:no-repeat;background-position:50%;background-size:100% 100%}.bs .carousel-control-prev-icon{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3e%3c/svg%3e\\\")}.bs .carousel-control-next-icon{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\\\")}.bs .carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:2;display:flex;justify-content:center;padding:0;margin-right:15%;margin-bottom:1rem;margin-left:15%;list-style:none}.bs .carousel-indicators [data-bs-target]{box-sizing:content-box;flex:0 1 auto;width:30px;height:3px;padding:0;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border:0;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity 0.6s ease}@media (prefers-reduced-motion: reduce){.bs .carousel-indicators [data-bs-target]{transition:none}}.bs .carousel-indicators .active{opacity:1}.bs .carousel-caption{position:absolute;right:15%;bottom:1.25rem;left:15%;padding-top:1.25rem;padding-bottom:1.25rem;color:#fff;text-align:center}.bs .carousel-dark .carousel-control-prev-icon,.bs .carousel-dark .carousel-control-next-icon{filter:invert(1) grayscale(100)}.bs .carousel-dark .carousel-indicators [data-bs-target]{background-color:#000}.bs .carousel-dark .carousel-caption{color:#000}@keyframes spinner-border{to{transform:rotate(360deg) /* rtl:ignore */}}.bs .spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:.25em solid currentColor;border-right-color:transparent;border-radius:50%;animation:.75s linear infinite spinner-border}.bs .spinner-border-sm{width:1rem;height:1rem;border-width:.2em}@keyframes spinner-grow{0%{transform:scale(0)}50%{opacity:1;transform:none}}.bs .spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;animation:.75s linear infinite spinner-grow}.bs .spinner-grow-sm{width:1rem;height:1rem}@media (prefers-reduced-motion: reduce){.bs .spinner-border,.bs .spinner-grow{animation-duration:1.5s}}.bs .offcanvas{position:fixed;bottom:0;z-index:1040;display:flex;flex-direction:column;max-width:100%;visibility:hidden;background-color:#fff;background-clip:padding-box;outline:0;transition:transform .3s ease-in-out}@media (prefers-reduced-motion: reduce){.bs .offcanvas{transition:none}}.bs .offcanvas-header{display:flex;justify-content:space-between;padding:1rem 1rem}.bs .offcanvas-header .btn-close{padding:.5rem .5rem;margin:-.5rem -.5rem -.5rem auto}.bs .offcanvas-title{margin-bottom:0;line-height:1.5}.bs .offcanvas-body{flex-grow:1;padding:1rem 1rem;overflow-y:auto}.bs .offcanvas-start{top:0;left:0;width:400px;border-right:1px solid rgba(0,0,0,0.2);transform:translateX(-100%)}.bs .offcanvas-end{top:0;right:0;width:400px;border-left:1px solid rgba(0,0,0,0.2);transform:translateX(100%)}.bs .offcanvas-bottom{right:0;left:0;height:30vh;max-height:100%;border-top:1px solid rgba(0,0,0,0.2);transform:translateY(100%)}.bs .offcanvas.show{transform:none}.bs .offcanvas-backdrop::before{position:fixed;top:0;left:0;z-index:1039;width:100vw;height:100vh;content:\\\"\\\";background-color:rgba(0,0,0,0.5)}.bs .clearfix::after{display:block;clear:both;content:\\\"\\\"}.bs .link-primary{color:#0d6efd}.bs .link-primary:hover,.bs .link-primary:focus{color:#0a58ca}.bs .link-secondary{color:#6c757d}.bs .link-secondary:hover,.bs .link-secondary:focus{color:#565e64}.bs .link-success{color:#198754}.bs .link-success:hover,.bs .link-success:focus{color:#146c43}.bs .link-info{color:#0dcaf0}.bs .link-info:hover,.bs .link-info:focus{color:#3dd5f3}.bs .link-warning{color:#ffc107}.bs .link-warning:hover,.bs .link-warning:focus{color:#ffcd39}.bs .link-danger{color:#dc3545}.bs .link-danger:hover,.bs .link-danger:focus{color:#b02a37}.bs .link-light{color:#f8f9fa}.bs .link-light:hover,.bs .link-light:focus{color:#f9fafb}.bs .link-dark{color:#212529}.bs .link-dark:hover,.bs .link-dark:focus{color:#1a1e21}.bs .ratio{position:relative;width:100%}.bs .ratio::before{display:block;padding-top:var(--bs-aspect-ratio);content:\\\"\\\"}.bs .ratio>*{position:absolute;top:0;left:0;width:100%;height:100%}.bs .ratio-1x1{--bs-aspect-ratio: 100%}.bs .ratio-4x3{--bs-aspect-ratio: calc(3 / 4 * 100%)}.bs .ratio-16x9{--bs-aspect-ratio: calc(9 / 16 * 100%)}.bs .ratio-21x9{--bs-aspect-ratio: calc(9 / 21 * 100%)}.bs .fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.bs .fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}.bs .sticky-top{position:sticky;top:0;z-index:1020}@media (min-width: 576px){.bs .sticky-sm-top{position:sticky;top:0;z-index:1020}}@media (min-width: 768px){.bs .sticky-md-top{position:sticky;top:0;z-index:1020}}@media (min-width: 992px){.bs .sticky-lg-top{position:sticky;top:0;z-index:1020}}@media (min-width: 1200px){.bs .sticky-xl-top{position:sticky;top:0;z-index:1020}}@media (min-width: 1400px){.bs .sticky-xxl-top{position:sticky;top:0;z-index:1020}}.bs .visually-hidden,.bs .visually-hidden-focusable:not(:focus):not(:focus-within){position:absolute !important;width:1px !important;height:1px !important;padding:0 !important;margin:-1px !important;overflow:hidden !important;clip:rect(0, 0, 0, 0) !important;white-space:nowrap !important;border:0 !important}.bs .stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;content:\\\"\\\"}.bs .text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.bs .align-baseline{vertical-align:baseline !important}.bs .align-top{vertical-align:top !important}.bs .align-middle{vertical-align:middle !important}.bs .align-bottom{vertical-align:bottom !important}.bs .align-text-bottom{vertical-align:text-bottom !important}.bs .align-text-top{vertical-align:text-top !important}.bs .float-start{float:left !important}.bs .float-end{float:right !important}.bs .float-none{float:none !important}.bs .overflow-auto{overflow:auto !important}.bs .overflow-hidden{overflow:hidden !important}.bs .overflow-visible{overflow:visible !important}.bs .overflow-scroll{overflow:scroll !important}.bs .d-inline{display:inline !important}.bs .d-inline-block{display:inline-block !important}.bs .d-block{display:block !important}.bs .d-grid{display:grid !important}.bs .d-table{display:table !important}.bs .d-table-row{display:table-row !important}.bs .d-table-cell{display:table-cell !important}.bs .d-flex{display:flex !important}.bs .d-inline-flex{display:inline-flex !important}.bs .d-none{display:none !important}.bs .shadow{box-shadow:0 0.5rem 1rem rgba(0,0,0,0.15) !important}.bs .shadow-sm{box-shadow:0 0.125rem 0.25rem rgba(0,0,0,0.075) !important}.bs .shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,0.175) !important}.bs .shadow-none{box-shadow:none !important}.bs .position-static{position:static !important}.bs .position-relative{position:relative !important}.bs .position-absolute{position:absolute !important}.bs .position-fixed{position:fixed !important}.bs .position-sticky{position:sticky !important}.bs .top-0{top:0 !important}.bs .top-50{top:50% !important}.bs .top-100{top:100% !important}.bs .bottom-0{bottom:0 !important}.bs .bottom-50{bottom:50% !important}.bs .bottom-100{bottom:100% !important}.bs .start-0{left:0 !important}.bs .start-50{left:50% !important}.bs .start-100{left:100% !important}.bs .end-0{right:0 !important}.bs .end-50{right:50% !important}.bs .end-100{right:100% !important}.bs .translate-middle{transform:translate(-50%, -50%) !important}.bs .translate-middle-x{transform:translateX(-50%) !important}.bs .translate-middle-y{transform:translateY(-50%) !important}.bs .border{border:1px solid #dee2e6 !important}.bs .border-0{border:0 !important}.bs .border-top{border-top:1px solid #dee2e6 !important}.bs .border-top-0{border-top:0 !important}.bs .border-end{border-right:1px solid #dee2e6 !important}.bs .border-end-0{border-right:0 !important}.bs .border-bottom{border-bottom:1px solid #dee2e6 !important}.bs .border-bottom-0{border-bottom:0 !important}.bs .border-start{border-left:1px solid #dee2e6 !important}.bs .border-start-0{border-left:0 !important}.bs .border-primary{border-color:#0d6efd !important}.bs .border-secondary{border-color:#6c757d !important}.bs .border-success{border-color:#198754 !important}.bs .border-info{border-color:#0dcaf0 !important}.bs .border-warning{border-color:#ffc107 !important}.bs .border-danger{border-color:#dc3545 !important}.bs .border-light{border-color:#f8f9fa !important}.bs .border-dark{border-color:#212529 !important}.bs .border-white{border-color:#fff !important}.bs .border-1{border-width:1px !important}.bs .border-2{border-width:2px !important}.bs .border-3{border-width:3px !important}.bs .border-4{border-width:4px !important}.bs .border-5{border-width:5px !important}.bs .w-25{width:25% !important}.bs .w-50{width:50% !important}.bs .w-75{width:75% !important}.bs .w-100{width:100% !important}.bs .w-auto{width:auto !important}.bs .mw-100{max-width:100% !important}.bs .vw-100{width:100vw !important}.bs .min-vw-100{min-width:100vw !important}.bs .h-25{height:25% !important}.bs .h-50{height:50% !important}.bs .h-75{height:75% !important}.bs .h-100{height:100% !important}.bs .h-auto{height:auto !important}.bs .mh-100{max-height:100% !important}.bs .vh-100{height:100vh !important}.bs .min-vh-100{min-height:100vh !important}.bs .flex-fill{flex:1 1 auto !important}.bs .flex-row{flex-direction:row !important}.bs .flex-column{flex-direction:column !important}.bs .flex-row-reverse{flex-direction:row-reverse !important}.bs .flex-column-reverse{flex-direction:column-reverse !important}.bs .flex-grow-0{flex-grow:0 !important}.bs .flex-grow-1{flex-grow:1 !important}.bs .flex-shrink-0{flex-shrink:0 !important}.bs .flex-shrink-1{flex-shrink:1 !important}.bs .flex-wrap{flex-wrap:wrap !important}.bs .flex-nowrap{flex-wrap:nowrap !important}.bs .flex-wrap-reverse{flex-wrap:wrap-reverse !important}.bs .gap-0{gap:0 !important}.bs .gap-1{gap:.25rem !important}.bs .gap-2{gap:.5rem !important}.bs .gap-3{gap:1rem !important}.bs .gap-4{gap:1.5rem !important}.bs .gap-5{gap:3rem !important}.bs .justify-content-start{justify-content:flex-start !important}.bs .justify-content-end{justify-content:flex-end !important}.bs .justify-content-center{justify-content:center !important}.bs .justify-content-between{justify-content:space-between !important}.bs .justify-content-around{justify-content:space-around !important}.bs .justify-content-evenly{justify-content:space-evenly !important}.bs .align-items-start{align-items:flex-start !important}.bs .align-items-end{align-items:flex-end !important}.bs .align-items-center{align-items:center !important}.bs .align-items-baseline{align-items:baseline !important}.bs .align-items-stretch{align-items:stretch !important}.bs .align-content-start{align-content:flex-start !important}.bs .align-content-end{align-content:flex-end !important}.bs .align-content-center{align-content:center !important}.bs .align-content-between{align-content:space-between !important}.bs .align-content-around{align-content:space-around !important}.bs .align-content-stretch{align-content:stretch !important}.bs .align-self-auto{align-self:auto !important}.bs .align-self-start{align-self:flex-start !important}.bs .align-self-end{align-self:flex-end !important}.bs .align-self-center{align-self:center !important}.bs .align-self-baseline{align-self:baseline !important}.bs .align-self-stretch{align-self:stretch !important}.bs .order-first{order:-1 !important}.bs .order-0{order:0 !important}.bs .order-1{order:1 !important}.bs .order-2{order:2 !important}.bs .order-3{order:3 !important}.bs .order-4{order:4 !important}.bs .order-5{order:5 !important}.bs .order-last{order:6 !important}.bs .m-0{margin:0 !important}.bs .m-1{margin:.25rem !important}.bs .m-2{margin:.5rem !important}.bs .m-3{margin:1rem !important}.bs .m-4{margin:1.5rem !important}.bs .m-5{margin:3rem !important}.bs .m-auto{margin:auto !important}.bs .mx-0{margin-right:0 !important;margin-left:0 !important}.bs .mx-1{margin-right:.25rem !important;margin-left:.25rem !important}.bs .mx-2{margin-right:.5rem !important;margin-left:.5rem !important}.bs .mx-3{margin-right:1rem !important;margin-left:1rem !important}.bs .mx-4{margin-right:1.5rem !important;margin-left:1.5rem !important}.bs .mx-5{margin-right:3rem !important;margin-left:3rem !important}.bs .mx-auto{margin-right:auto !important;margin-left:auto !important}.bs .my-0{margin-top:0 !important;margin-bottom:0 !important}.bs .my-1{margin-top:.25rem !important;margin-bottom:.25rem !important}.bs .my-2{margin-top:.5rem !important;margin-bottom:.5rem !important}.bs .my-3{margin-top:1rem !important;margin-bottom:1rem !important}.bs .my-4{margin-top:1.5rem !important;margin-bottom:1.5rem !important}.bs .my-5{margin-top:3rem !important;margin-bottom:3rem !important}.bs .my-auto{margin-top:auto !important;margin-bottom:auto !important}.bs .mt-0{margin-top:0 !important}.bs .mt-1{margin-top:.25rem !important}.bs .mt-2{margin-top:.5rem !important}.bs .mt-3{margin-top:1rem !important}.bs .mt-4{margin-top:1.5rem !important}.bs .mt-5{margin-top:3rem !important}.bs .mt-auto{margin-top:auto !important}.bs .me-0{margin-right:0 !important}.bs .me-1{margin-right:.25rem !important}.bs .me-2{margin-right:.5rem !important}.bs .me-3{margin-right:1rem !important}.bs .me-4{margin-right:1.5rem !important}.bs .me-5{margin-right:3rem !important}.bs .me-auto{margin-right:auto !important}.bs .mb-0{margin-bottom:0 !important}.bs .mb-1{margin-bottom:.25rem !important}.bs .mb-2{margin-bottom:.5rem !important}.bs .mb-3{margin-bottom:1rem !important}.bs .mb-4{margin-bottom:1.5rem !important}.bs .mb-5{margin-bottom:3rem !important}.bs .mb-auto{margin-bottom:auto !important}.bs .ms-0{margin-left:0 !important}.bs .ms-1{margin-left:.25rem !important}.bs .ms-2{margin-left:.5rem !important}.bs .ms-3{margin-left:1rem !important}.bs .ms-4{margin-left:1.5rem !important}.bs .ms-5{margin-left:3rem !important}.bs .ms-auto{margin-left:auto !important}.bs .p-0{padding:0 !important}.bs .p-1{padding:.25rem !important}.bs .p-2{padding:.5rem !important}.bs .p-3{padding:1rem !important}.bs .p-4{padding:1.5rem !important}.bs .p-5{padding:3rem !important}.bs .px-0{padding-right:0 !important;padding-left:0 !important}.bs .px-1{padding-right:.25rem !important;padding-left:.25rem !important}.bs .px-2{padding-right:.5rem !important;padding-left:.5rem !important}.bs .px-3{padding-right:1rem !important;padding-left:1rem !important}.bs .px-4{padding-right:1.5rem !important;padding-left:1.5rem !important}.bs .px-5{padding-right:3rem !important;padding-left:3rem !important}.bs .py-0{padding-top:0 !important;padding-bottom:0 !important}.bs .py-1{padding-top:.25rem !important;padding-bottom:.25rem !important}.bs .py-2{padding-top:.5rem !important;padding-bottom:.5rem !important}.bs .py-3{padding-top:1rem !important;padding-bottom:1rem !important}.bs .py-4{padding-top:1.5rem !important;padding-bottom:1.5rem !important}.bs .py-5{padding-top:3rem !important;padding-bottom:3rem !important}.bs .pt-0{padding-top:0 !important}.bs .pt-1{padding-top:.25rem !important}.bs .pt-2{padding-top:.5rem !important}.bs .pt-3{padding-top:1rem !important}.bs .pt-4{padding-top:1.5rem !important}.bs .pt-5{padding-top:3rem !important}.bs .pe-0{padding-right:0 !important}.bs .pe-1{padding-right:.25rem !important}.bs .pe-2{padding-right:.5rem !important}.bs .pe-3{padding-right:1rem !important}.bs .pe-4{padding-right:1.5rem !important}.bs .pe-5{padding-right:3rem !important}.bs .pb-0{padding-bottom:0 !important}.bs .pb-1{padding-bottom:.25rem !important}.bs .pb-2{padding-bottom:.5rem !important}.bs .pb-3{padding-bottom:1rem !important}.bs .pb-4{padding-bottom:1.5rem !important}.bs .pb-5{padding-bottom:3rem !important}.bs .ps-0{padding-left:0 !important}.bs .ps-1{padding-left:.25rem !important}.bs .ps-2{padding-left:.5rem !important}.bs .ps-3{padding-left:1rem !important}.bs .ps-4{padding-left:1.5rem !important}.bs .ps-5{padding-left:3rem !important}.bs .font-monospace{font-family:var(--bs-font-monospace) !important}.bs .fs-1{font-size:calc(1.375rem + 1.5vw) !important}.bs .fs-2{font-size:calc(1.325rem + .9vw) !important}.bs .fs-3{font-size:calc(1.3rem + .6vw) !important}.bs .fs-4{font-size:calc(1.275rem + .3vw) !important}.bs .fs-5{font-size:1.25rem !important}.bs .fs-6{font-size:1rem !important}.bs .fst-italic{font-style:italic !important}.bs .fst-normal{font-style:normal !important}.bs .fw-light{font-weight:300 !important}.bs .fw-lighter{font-weight:lighter !important}.bs .fw-normal{font-weight:400 !important}.bs .fw-bold{font-weight:700 !important}.bs .fw-bolder{font-weight:bolder !important}.bs .lh-1{line-height:1 !important}.bs .lh-sm{line-height:1.25 !important}.bs .lh-base{line-height:1.5 !important}.bs .lh-lg{line-height:2 !important}.bs .text-start{text-align:left !important}.bs .text-end{text-align:right !important}.bs .text-center{text-align:center !important}.bs .text-decoration-none{text-decoration:none !important}.bs .text-decoration-underline{text-decoration:underline !important}.bs .text-decoration-line-through{text-decoration:line-through !important}.bs .text-lowercase{text-transform:lowercase !important}.bs .text-uppercase{text-transform:uppercase !important}.bs .text-capitalize{text-transform:capitalize !important}.bs .text-wrap{white-space:normal !important}.bs .text-nowrap{white-space:nowrap !important}.bs .text-break{word-wrap:break-word !important;word-break:break-word !important}.bs .text-primary{color:#0d6efd !important}.bs .text-secondary{color:#6c757d !important}.bs .text-success{color:#198754 !important}.bs .text-info{color:#0dcaf0 !important}.bs .text-warning{color:#ffc107 !important}.bs .text-danger{color:#dc3545 !important}.bs .text-light{color:#f8f9fa !important}.bs .text-dark{color:#212529 !important}.bs .text-white{color:#fff !important}.bs .text-body{color:#212529 !important}.bs .text-muted{color:#6c757d !important}.bs .text-black-50{color:rgba(0,0,0,0.5) !important}.bs .text-white-50{color:rgba(255,255,255,0.5) !important}.bs .text-reset{color:inherit !important}.bs .bg-primary{background-color:#0d6efd !important}.bs .bg-secondary{background-color:#6c757d !important}.bs .bg-success{background-color:#198754 !important}.bs .bg-info{background-color:#0dcaf0 !important}.bs .bg-warning{background-color:#ffc107 !important}.bs .bg-danger{background-color:#dc3545 !important}.bs .bg-light{background-color:#f8f9fa !important}.bs .bg-dark{background-color:#212529 !important}.bs .bg-body{background-color:#fff !important}.bs .bg-white{background-color:#fff !important}.bs .bg-transparent{background-color:rgba(0,0,0,0) !important}.bs .bg-gradient{background-image:var(--bs-gradient) !important}.bs .user-select-all{user-select:all !important}.bs .user-select-auto{user-select:auto !important}.bs .user-select-none{user-select:none !important}.bs .pe-none{pointer-events:none !important}.bs .pe-auto{pointer-events:auto !important}.bs .rounded{border-radius:.25rem !important}.bs .rounded-0{border-radius:0 !important}.bs .rounded-1{border-radius:.2rem !important}.bs .rounded-2{border-radius:.25rem !important}.bs .rounded-3{border-radius:.3rem !important}.bs .rounded-circle{border-radius:50% !important}.bs .rounded-pill{border-radius:50rem !important}.bs .rounded-top{border-top-left-radius:.25rem !important;border-top-right-radius:.25rem !important}.bs .rounded-end{border-top-right-radius:.25rem !important;border-bottom-right-radius:.25rem !important}.bs .rounded-bottom{border-bottom-right-radius:.25rem !important;border-bottom-left-radius:.25rem !important}.bs .rounded-start{border-bottom-left-radius:.25rem !important;border-top-left-radius:.25rem !important}.bs .visible{visibility:visible !important}.bs .invisible{visibility:hidden !important}@media (min-width: 576px){.bs .float-sm-start{float:left !important}.bs .float-sm-end{float:right !important}.bs .float-sm-none{float:none !important}.bs .d-sm-inline{display:inline !important}.bs .d-sm-inline-block{display:inline-block !important}.bs .d-sm-block{display:block !important}.bs .d-sm-grid{display:grid !important}.bs .d-sm-table{display:table !important}.bs .d-sm-table-row{display:table-row !important}.bs .d-sm-table-cell{display:table-cell !important}.bs .d-sm-flex{display:flex !important}.bs .d-sm-inline-flex{display:inline-flex !important}.bs .d-sm-none{display:none !important}.bs .flex-sm-fill{flex:1 1 auto !important}.bs .flex-sm-row{flex-direction:row !important}.bs .flex-sm-column{flex-direction:column !important}.bs .flex-sm-row-reverse{flex-direction:row-reverse !important}.bs .flex-sm-column-reverse{flex-direction:column-reverse !important}.bs .flex-sm-grow-0{flex-grow:0 !important}.bs .flex-sm-grow-1{flex-grow:1 !important}.bs .flex-sm-shrink-0{flex-shrink:0 !important}.bs .flex-sm-shrink-1{flex-shrink:1 !important}.bs .flex-sm-wrap{flex-wrap:wrap !important}.bs .flex-sm-nowrap{flex-wrap:nowrap !important}.bs .flex-sm-wrap-reverse{flex-wrap:wrap-reverse !important}.bs .gap-sm-0{gap:0 !important}.bs .gap-sm-1{gap:.25rem !important}.bs .gap-sm-2{gap:.5rem !important}.bs .gap-sm-3{gap:1rem !important}.bs .gap-sm-4{gap:1.5rem !important}.bs .gap-sm-5{gap:3rem !important}.bs .justify-content-sm-start{justify-content:flex-start !important}.bs .justify-content-sm-end{justify-content:flex-end !important}.bs .justify-content-sm-center{justify-content:center !important}.bs .justify-content-sm-between{justify-content:space-between !important}.bs .justify-content-sm-around{justify-content:space-around !important}.bs .justify-content-sm-evenly{justify-content:space-evenly !important}.bs .align-items-sm-start{align-items:flex-start !important}.bs .align-items-sm-end{align-items:flex-end !important}.bs .align-items-sm-center{align-items:center !important}.bs .align-items-sm-baseline{align-items:baseline !important}.bs .align-items-sm-stretch{align-items:stretch !important}.bs .align-content-sm-start{align-content:flex-start !important}.bs .align-content-sm-end{align-content:flex-end !important}.bs .align-content-sm-center{align-content:center !important}.bs .align-content-sm-between{align-content:space-between !important}.bs .align-content-sm-around{align-content:space-around !important}.bs .align-content-sm-stretch{align-content:stretch !important}.bs .align-self-sm-auto{align-self:auto !important}.bs .align-self-sm-start{align-self:flex-start !important}.bs .align-self-sm-end{align-self:flex-end !important}.bs .align-self-sm-center{align-self:center !important}.bs .align-self-sm-baseline{align-self:baseline !important}.bs .align-self-sm-stretch{align-self:stretch !important}.bs .order-sm-first{order:-1 !important}.bs .order-sm-0{order:0 !important}.bs .order-sm-1{order:1 !important}.bs .order-sm-2{order:2 !important}.bs .order-sm-3{order:3 !important}.bs .order-sm-4{order:4 !important}.bs .order-sm-5{order:5 !important}.bs .order-sm-last{order:6 !important}.bs .m-sm-0{margin:0 !important}.bs .m-sm-1{margin:.25rem !important}.bs .m-sm-2{margin:.5rem !important}.bs .m-sm-3{margin:1rem !important}.bs .m-sm-4{margin:1.5rem !important}.bs .m-sm-5{margin:3rem !important}.bs .m-sm-auto{margin:auto !important}.bs .mx-sm-0{margin-right:0 !important;margin-left:0 !important}.bs .mx-sm-1{margin-right:.25rem !important;margin-left:.25rem !important}.bs .mx-sm-2{margin-right:.5rem !important;margin-left:.5rem !important}.bs .mx-sm-3{margin-right:1rem !important;margin-left:1rem !important}.bs .mx-sm-4{margin-right:1.5rem !important;margin-left:1.5rem !important}.bs .mx-sm-5{margin-right:3rem !important;margin-left:3rem !important}.bs .mx-sm-auto{margin-right:auto !important;margin-left:auto !important}.bs .my-sm-0{margin-top:0 !important;margin-bottom:0 !important}.bs .my-sm-1{margin-top:.25rem !important;margin-bottom:.25rem !important}.bs .my-sm-2{margin-top:.5rem !important;margin-bottom:.5rem !important}.bs .my-sm-3{margin-top:1rem !important;margin-bottom:1rem !important}.bs .my-sm-4{margin-top:1.5rem !important;margin-bottom:1.5rem !important}.bs .my-sm-5{margin-top:3rem !important;margin-bottom:3rem !important}.bs .my-sm-auto{margin-top:auto !important;margin-bottom:auto !important}.bs .mt-sm-0{margin-top:0 !important}.bs .mt-sm-1{margin-top:.25rem !important}.bs .mt-sm-2{margin-top:.5rem !important}.bs .mt-sm-3{margin-top:1rem !important}.bs .mt-sm-4{margin-top:1.5rem !important}.bs .mt-sm-5{margin-top:3rem !important}.bs .mt-sm-auto{margin-top:auto !important}.bs .me-sm-0{margin-right:0 !important}.bs .me-sm-1{margin-right:.25rem !important}.bs .me-sm-2{margin-right:.5rem !important}.bs .me-sm-3{margin-right:1rem !important}.bs .me-sm-4{margin-right:1.5rem !important}.bs .me-sm-5{margin-right:3rem !important}.bs .me-sm-auto{margin-right:auto !important}.bs .mb-sm-0{margin-bottom:0 !important}.bs .mb-sm-1{margin-bottom:.25rem !important}.bs .mb-sm-2{margin-bottom:.5rem !important}.bs .mb-sm-3{margin-bottom:1rem !important}.bs .mb-sm-4{margin-bottom:1.5rem !important}.bs .mb-sm-5{margin-bottom:3rem !important}.bs .mb-sm-auto{margin-bottom:auto !important}.bs .ms-sm-0{margin-left:0 !important}.bs .ms-sm-1{margin-left:.25rem !important}.bs .ms-sm-2{margin-left:.5rem !important}.bs .ms-sm-3{margin-left:1rem !important}.bs .ms-sm-4{margin-left:1.5rem !important}.bs .ms-sm-5{margin-left:3rem !important}.bs .ms-sm-auto{margin-left:auto !important}.bs .p-sm-0{padding:0 !important}.bs .p-sm-1{padding:.25rem !important}.bs .p-sm-2{padding:.5rem !important}.bs .p-sm-3{padding:1rem !important}.bs .p-sm-4{padding:1.5rem !important}.bs .p-sm-5{padding:3rem !important}.bs .px-sm-0{padding-right:0 !important;padding-left:0 !important}.bs .px-sm-1{padding-right:.25rem !important;padding-left:.25rem !important}.bs .px-sm-2{padding-right:.5rem !important;padding-left:.5rem !important}.bs .px-sm-3{padding-right:1rem !important;padding-left:1rem !important}.bs .px-sm-4{padding-right:1.5rem !important;padding-left:1.5rem !important}.bs .px-sm-5{padding-right:3rem !important;padding-left:3rem !important}.bs .py-sm-0{padding-top:0 !important;padding-bottom:0 !important}.bs .py-sm-1{padding-top:.25rem !important;padding-bottom:.25rem !important}.bs .py-sm-2{padding-top:.5rem !important;padding-bottom:.5rem !important}.bs .py-sm-3{padding-top:1rem !important;padding-bottom:1rem !important}.bs .py-sm-4{padding-top:1.5rem !important;padding-bottom:1.5rem !important}.bs .py-sm-5{padding-top:3rem !important;padding-bottom:3rem !important}.bs .pt-sm-0{padding-top:0 !important}.bs .pt-sm-1{padding-top:.25rem !important}.bs .pt-sm-2{padding-top:.5rem !important}.bs .pt-sm-3{padding-top:1rem !important}.bs .pt-sm-4{padding-top:1.5rem !important}.bs .pt-sm-5{padding-top:3rem !important}.bs .pe-sm-0{padding-right:0 !important}.bs .pe-sm-1{padding-right:.25rem !important}.bs .pe-sm-2{padding-right:.5rem !important}.bs .pe-sm-3{padding-right:1rem !important}.bs .pe-sm-4{padding-right:1.5rem !important}.bs .pe-sm-5{padding-right:3rem !important}.bs .pb-sm-0{padding-bottom:0 !important}.bs .pb-sm-1{padding-bottom:.25rem !important}.bs .pb-sm-2{padding-bottom:.5rem !important}.bs .pb-sm-3{padding-bottom:1rem !important}.bs .pb-sm-4{padding-bottom:1.5rem !important}.bs .pb-sm-5{padding-bottom:3rem !important}.bs .ps-sm-0{padding-left:0 !important}.bs .ps-sm-1{padding-left:.25rem !important}.bs .ps-sm-2{padding-left:.5rem !important}.bs .ps-sm-3{padding-left:1rem !important}.bs .ps-sm-4{padding-left:1.5rem !important}.bs .ps-sm-5{padding-left:3rem !important}.bs .text-sm-start{text-align:left !important}.bs .text-sm-end{text-align:right !important}.bs .text-sm-center{text-align:center !important}}@media (min-width: 768px){.bs .float-md-start{float:left !important}.bs .float-md-end{float:right !important}.bs .float-md-none{float:none !important}.bs .d-md-inline{display:inline !important}.bs .d-md-inline-block{display:inline-block !important}.bs .d-md-block{display:block !important}.bs .d-md-grid{display:grid !important}.bs .d-md-table{display:table !important}.bs .d-md-table-row{display:table-row !important}.bs .d-md-table-cell{display:table-cell !important}.bs .d-md-flex{display:flex !important}.bs .d-md-inline-flex{display:inline-flex !important}.bs .d-md-none{display:none !important}.bs .flex-md-fill{flex:1 1 auto !important}.bs .flex-md-row{flex-direction:row !important}.bs .flex-md-column{flex-direction:column !important}.bs .flex-md-row-reverse{flex-direction:row-reverse !important}.bs .flex-md-column-reverse{flex-direction:column-reverse !important}.bs .flex-md-grow-0{flex-grow:0 !important}.bs .flex-md-grow-1{flex-grow:1 !important}.bs .flex-md-shrink-0{flex-shrink:0 !important}.bs .flex-md-shrink-1{flex-shrink:1 !important}.bs .flex-md-wrap{flex-wrap:wrap !important}.bs .flex-md-nowrap{flex-wrap:nowrap !important}.bs .flex-md-wrap-reverse{flex-wrap:wrap-reverse !important}.bs .gap-md-0{gap:0 !important}.bs .gap-md-1{gap:.25rem !important}.bs .gap-md-2{gap:.5rem !important}.bs .gap-md-3{gap:1rem !important}.bs .gap-md-4{gap:1.5rem !important}.bs .gap-md-5{gap:3rem !important}.bs .justify-content-md-start{justify-content:flex-start !important}.bs .justify-content-md-end{justify-content:flex-end !important}.bs .justify-content-md-center{justify-content:center !important}.bs .justify-content-md-between{justify-content:space-between !important}.bs .justify-content-md-around{justify-content:space-around !important}.bs .justify-content-md-evenly{justify-content:space-evenly !important}.bs .align-items-md-start{align-items:flex-start !important}.bs .align-items-md-end{align-items:flex-end !important}.bs .align-items-md-center{align-items:center !important}.bs .align-items-md-baseline{align-items:baseline !important}.bs .align-items-md-stretch{align-items:stretch !important}.bs .align-content-md-start{align-content:flex-start !important}.bs .align-content-md-end{align-content:flex-end !important}.bs .align-content-md-center{align-content:center !important}.bs .align-content-md-between{align-content:space-between !important}.bs .align-content-md-around{align-content:space-around !important}.bs .align-content-md-stretch{align-content:stretch !important}.bs .align-self-md-auto{align-self:auto !important}.bs .align-self-md-start{align-self:flex-start !important}.bs .align-self-md-end{align-self:flex-end !important}.bs .align-self-md-center{align-self:center !important}.bs .align-self-md-baseline{align-self:baseline !important}.bs .align-self-md-stretch{align-self:stretch !important}.bs .order-md-first{order:-1 !important}.bs .order-md-0{order:0 !important}.bs .order-md-1{order:1 !important}.bs .order-md-2{order:2 !important}.bs .order-md-3{order:3 !important}.bs .order-md-4{order:4 !important}.bs .order-md-5{order:5 !important}.bs .order-md-last{order:6 !important}.bs .m-md-0{margin:0 !important}.bs .m-md-1{margin:.25rem !important}.bs .m-md-2{margin:.5rem !important}.bs .m-md-3{margin:1rem !important}.bs .m-md-4{margin:1.5rem !important}.bs .m-md-5{margin:3rem !important}.bs .m-md-auto{margin:auto !important}.bs .mx-md-0{margin-right:0 !important;margin-left:0 !important}.bs .mx-md-1{margin-right:.25rem !important;margin-left:.25rem !important}.bs .mx-md-2{margin-right:.5rem !important;margin-left:.5rem !important}.bs .mx-md-3{margin-right:1rem !important;margin-left:1rem !important}.bs .mx-md-4{margin-right:1.5rem !important;margin-left:1.5rem !important}.bs .mx-md-5{margin-right:3rem !important;margin-left:3rem !important}.bs .mx-md-auto{margin-right:auto !important;margin-left:auto !important}.bs .my-md-0{margin-top:0 !important;margin-bottom:0 !important}.bs .my-md-1{margin-top:.25rem !important;margin-bottom:.25rem !important}.bs .my-md-2{margin-top:.5rem !important;margin-bottom:.5rem !important}.bs .my-md-3{margin-top:1rem !important;margin-bottom:1rem !important}.bs .my-md-4{margin-top:1.5rem !important;margin-bottom:1.5rem !important}.bs .my-md-5{margin-top:3rem !important;margin-bottom:3rem !important}.bs .my-md-auto{margin-top:auto !important;margin-bottom:auto !important}.bs .mt-md-0{margin-top:0 !important}.bs .mt-md-1{margin-top:.25rem !important}.bs .mt-md-2{margin-top:.5rem !important}.bs .mt-md-3{margin-top:1rem !important}.bs .mt-md-4{margin-top:1.5rem !important}.bs .mt-md-5{margin-top:3rem !important}.bs .mt-md-auto{margin-top:auto !important}.bs .me-md-0{margin-right:0 !important}.bs .me-md-1{margin-right:.25rem !important}.bs .me-md-2{margin-right:.5rem !important}.bs .me-md-3{margin-right:1rem !important}.bs .me-md-4{margin-right:1.5rem !important}.bs .me-md-5{margin-right:3rem !important}.bs .me-md-auto{margin-right:auto !important}.bs .mb-md-0{margin-bottom:0 !important}.bs .mb-md-1{margin-bottom:.25rem !important}.bs .mb-md-2{margin-bottom:.5rem !important}.bs .mb-md-3{margin-bottom:1rem !important}.bs .mb-md-4{margin-bottom:1.5rem !important}.bs .mb-md-5{margin-bottom:3rem !important}.bs .mb-md-auto{margin-bottom:auto !important}.bs .ms-md-0{margin-left:0 !important}.bs .ms-md-1{margin-left:.25rem !important}.bs .ms-md-2{margin-left:.5rem !important}.bs .ms-md-3{margin-left:1rem !important}.bs .ms-md-4{margin-left:1.5rem !important}.bs .ms-md-5{margin-left:3rem !important}.bs .ms-md-auto{margin-left:auto !important}.bs .p-md-0{padding:0 !important}.bs .p-md-1{padding:.25rem !important}.bs .p-md-2{padding:.5rem !important}.bs .p-md-3{padding:1rem !important}.bs .p-md-4{padding:1.5rem !important}.bs .p-md-5{padding:3rem !important}.bs .px-md-0{padding-right:0 !important;padding-left:0 !important}.bs .px-md-1{padding-right:.25rem !important;padding-left:.25rem !important}.bs .px-md-2{padding-right:.5rem !important;padding-left:.5rem !important}.bs .px-md-3{padding-right:1rem !important;padding-left:1rem !important}.bs .px-md-4{padding-right:1.5rem !important;padding-left:1.5rem !important}.bs .px-md-5{padding-right:3rem !important;padding-left:3rem !important}.bs .py-md-0{padding-top:0 !important;padding-bottom:0 !important}.bs .py-md-1{padding-top:.25rem !important;padding-bottom:.25rem !important}.bs .py-md-2{padding-top:.5rem !important;padding-bottom:.5rem !important}.bs .py-md-3{padding-top:1rem !important;padding-bottom:1rem !important}.bs .py-md-4{padding-top:1.5rem !important;padding-bottom:1.5rem !important}.bs .py-md-5{padding-top:3rem !important;padding-bottom:3rem !important}.bs .pt-md-0{padding-top:0 !important}.bs .pt-md-1{padding-top:.25rem !important}.bs .pt-md-2{padding-top:.5rem !important}.bs .pt-md-3{padding-top:1rem !important}.bs .pt-md-4{padding-top:1.5rem !important}.bs .pt-md-5{padding-top:3rem !important}.bs .pe-md-0{padding-right:0 !important}.bs .pe-md-1{padding-right:.25rem !important}.bs .pe-md-2{padding-right:.5rem !important}.bs .pe-md-3{padding-right:1rem !important}.bs .pe-md-4{padding-right:1.5rem !important}.bs .pe-md-5{padding-right:3rem !important}.bs .pb-md-0{padding-bottom:0 !important}.bs .pb-md-1{padding-bottom:.25rem !important}.bs .pb-md-2{padding-bottom:.5rem !important}.bs .pb-md-3{padding-bottom:1rem !important}.bs .pb-md-4{padding-bottom:1.5rem !important}.bs .pb-md-5{padding-bottom:3rem !important}.bs .ps-md-0{padding-left:0 !important}.bs .ps-md-1{padding-left:.25rem !important}.bs .ps-md-2{padding-left:.5rem !important}.bs .ps-md-3{padding-left:1rem !important}.bs .ps-md-4{padding-left:1.5rem !important}.bs .ps-md-5{padding-left:3rem !important}.bs .text-md-start{text-align:left !important}.bs .text-md-end{text-align:right !important}.bs .text-md-center{text-align:center !important}}@media (min-width: 992px){.bs .float-lg-start{float:left !important}.bs .float-lg-end{float:right !important}.bs .float-lg-none{float:none !important}.bs .d-lg-inline{display:inline !important}.bs .d-lg-inline-block{display:inline-block !important}.bs .d-lg-block{display:block !important}.bs .d-lg-grid{display:grid !important}.bs .d-lg-table{display:table !important}.bs .d-lg-table-row{display:table-row !important}.bs .d-lg-table-cell{display:table-cell !important}.bs .d-lg-flex{display:flex !important}.bs .d-lg-inline-flex{display:inline-flex !important}.bs .d-lg-none{display:none !important}.bs .flex-lg-fill{flex:1 1 auto !important}.bs .flex-lg-row{flex-direction:row !important}.bs .flex-lg-column{flex-direction:column !important}.bs .flex-lg-row-reverse{flex-direction:row-reverse !important}.bs .flex-lg-column-reverse{flex-direction:column-reverse !important}.bs .flex-lg-grow-0{flex-grow:0 !important}.bs .flex-lg-grow-1{flex-grow:1 !important}.bs .flex-lg-shrink-0{flex-shrink:0 !important}.bs .flex-lg-shrink-1{flex-shrink:1 !important}.bs .flex-lg-wrap{flex-wrap:wrap !important}.bs .flex-lg-nowrap{flex-wrap:nowrap !important}.bs .flex-lg-wrap-reverse{flex-wrap:wrap-reverse !important}.bs .gap-lg-0{gap:0 !important}.bs .gap-lg-1{gap:.25rem !important}.bs .gap-lg-2{gap:.5rem !important}.bs .gap-lg-3{gap:1rem !important}.bs .gap-lg-4{gap:1.5rem !important}.bs .gap-lg-5{gap:3rem !important}.bs .justify-content-lg-start{justify-content:flex-start !important}.bs .justify-content-lg-end{justify-content:flex-end !important}.bs .justify-content-lg-center{justify-content:center !important}.bs .justify-content-lg-between{justify-content:space-between !important}.bs .justify-content-lg-around{justify-content:space-around !important}.bs .justify-content-lg-evenly{justify-content:space-evenly !important}.bs .align-items-lg-start{align-items:flex-start !important}.bs .align-items-lg-end{align-items:flex-end !important}.bs .align-items-lg-center{align-items:center !important}.bs .align-items-lg-baseline{align-items:baseline !important}.bs .align-items-lg-stretch{align-items:stretch !important}.bs .align-content-lg-start{align-content:flex-start !important}.bs .align-content-lg-end{align-content:flex-end !important}.bs .align-content-lg-center{align-content:center !important}.bs .align-content-lg-between{align-content:space-between !important}.bs .align-content-lg-around{align-content:space-around !important}.bs .align-content-lg-stretch{align-content:stretch !important}.bs .align-self-lg-auto{align-self:auto !important}.bs .align-self-lg-start{align-self:flex-start !important}.bs .align-self-lg-end{align-self:flex-end !important}.bs .align-self-lg-center{align-self:center !important}.bs .align-self-lg-baseline{align-self:baseline !important}.bs .align-self-lg-stretch{align-self:stretch !important}.bs .order-lg-first{order:-1 !important}.bs .order-lg-0{order:0 !important}.bs .order-lg-1{order:1 !important}.bs .order-lg-2{order:2 !important}.bs .order-lg-3{order:3 !important}.bs .order-lg-4{order:4 !important}.bs .order-lg-5{order:5 !important}.bs .order-lg-last{order:6 !important}.bs .m-lg-0{margin:0 !important}.bs .m-lg-1{margin:.25rem !important}.bs .m-lg-2{margin:.5rem !important}.bs .m-lg-3{margin:1rem !important}.bs .m-lg-4{margin:1.5rem !important}.bs .m-lg-5{margin:3rem !important}.bs .m-lg-auto{margin:auto !important}.bs .mx-lg-0{margin-right:0 !important;margin-left:0 !important}.bs .mx-lg-1{margin-right:.25rem !important;margin-left:.25rem !important}.bs .mx-lg-2{margin-right:.5rem !important;margin-left:.5rem !important}.bs .mx-lg-3{margin-right:1rem !important;margin-left:1rem !important}.bs .mx-lg-4{margin-right:1.5rem !important;margin-left:1.5rem !important}.bs .mx-lg-5{margin-right:3rem !important;margin-left:3rem !important}.bs .mx-lg-auto{margin-right:auto !important;margin-left:auto !important}.bs .my-lg-0{margin-top:0 !important;margin-bottom:0 !important}.bs .my-lg-1{margin-top:.25rem !important;margin-bottom:.25rem !important}.bs .my-lg-2{margin-top:.5rem !important;margin-bottom:.5rem !important}.bs .my-lg-3{margin-top:1rem !important;margin-bottom:1rem !important}.bs .my-lg-4{margin-top:1.5rem !important;margin-bottom:1.5rem !important}.bs .my-lg-5{margin-top:3rem !important;margin-bottom:3rem !important}.bs .my-lg-auto{margin-top:auto !important;margin-bottom:auto !important}.bs .mt-lg-0{margin-top:0 !important}.bs .mt-lg-1{margin-top:.25rem !important}.bs .mt-lg-2{margin-top:.5rem !important}.bs .mt-lg-3{margin-top:1rem !important}.bs .mt-lg-4{margin-top:1.5rem !important}.bs .mt-lg-5{margin-top:3rem !important}.bs .mt-lg-auto{margin-top:auto !important}.bs .me-lg-0{margin-right:0 !important}.bs .me-lg-1{margin-right:.25rem !important}.bs .me-lg-2{margin-right:.5rem !important}.bs .me-lg-3{margin-right:1rem !important}.bs .me-lg-4{margin-right:1.5rem !important}.bs .me-lg-5{margin-right:3rem !important}.bs .me-lg-auto{margin-right:auto !important}.bs .mb-lg-0{margin-bottom:0 !important}.bs .mb-lg-1{margin-bottom:.25rem !important}.bs .mb-lg-2{margin-bottom:.5rem !important}.bs .mb-lg-3{margin-bottom:1rem !important}.bs .mb-lg-4{margin-bottom:1.5rem !important}.bs .mb-lg-5{margin-bottom:3rem !important}.bs .mb-lg-auto{margin-bottom:auto !important}.bs .ms-lg-0{margin-left:0 !important}.bs .ms-lg-1{margin-left:.25rem !important}.bs .ms-lg-2{margin-left:.5rem !important}.bs .ms-lg-3{margin-left:1rem !important}.bs .ms-lg-4{margin-left:1.5rem !important}.bs .ms-lg-5{margin-left:3rem !important}.bs .ms-lg-auto{margin-left:auto !important}.bs .p-lg-0{padding:0 !important}.bs .p-lg-1{padding:.25rem !important}.bs .p-lg-2{padding:.5rem !important}.bs .p-lg-3{padding:1rem !important}.bs .p-lg-4{padding:1.5rem !important}.bs .p-lg-5{padding:3rem !important}.bs .px-lg-0{padding-right:0 !important;padding-left:0 !important}.bs .px-lg-1{padding-right:.25rem !important;padding-left:.25rem !important}.bs .px-lg-2{padding-right:.5rem !important;padding-left:.5rem !important}.bs .px-lg-3{padding-right:1rem !important;padding-left:1rem !important}.bs .px-lg-4{padding-right:1.5rem !important;padding-left:1.5rem !important}.bs .px-lg-5{padding-right:3rem !important;padding-left:3rem !important}.bs .py-lg-0{padding-top:0 !important;padding-bottom:0 !important}.bs .py-lg-1{padding-top:.25rem !important;padding-bottom:.25rem !important}.bs .py-lg-2{padding-top:.5rem !important;padding-bottom:.5rem !important}.bs .py-lg-3{padding-top:1rem !important;padding-bottom:1rem !important}.bs .py-lg-4{padding-top:1.5rem !important;padding-bottom:1.5rem !important}.bs .py-lg-5{padding-top:3rem !important;padding-bottom:3rem !important}.bs .pt-lg-0{padding-top:0 !important}.bs .pt-lg-1{padding-top:.25rem !important}.bs .pt-lg-2{padding-top:.5rem !important}.bs .pt-lg-3{padding-top:1rem !important}.bs .pt-lg-4{padding-top:1.5rem !important}.bs .pt-lg-5{padding-top:3rem !important}.bs .pe-lg-0{padding-right:0 !important}.bs .pe-lg-1{padding-right:.25rem !important}.bs .pe-lg-2{padding-right:.5rem !important}.bs .pe-lg-3{padding-right:1rem !important}.bs .pe-lg-4{padding-right:1.5rem !important}.bs .pe-lg-5{padding-right:3rem !important}.bs .pb-lg-0{padding-bottom:0 !important}.bs .pb-lg-1{padding-bottom:.25rem !important}.bs .pb-lg-2{padding-bottom:.5rem !important}.bs .pb-lg-3{padding-bottom:1rem !important}.bs .pb-lg-4{padding-bottom:1.5rem !important}.bs .pb-lg-5{padding-bottom:3rem !important}.bs .ps-lg-0{padding-left:0 !important}.bs .ps-lg-1{padding-left:.25rem !important}.bs .ps-lg-2{padding-left:.5rem !important}.bs .ps-lg-3{padding-left:1rem !important}.bs .ps-lg-4{padding-left:1.5rem !important}.bs .ps-lg-5{padding-left:3rem !important}.bs .text-lg-start{text-align:left !important}.bs .text-lg-end{text-align:right !important}.bs .text-lg-center{text-align:center !important}}@media (min-width: 1200px){.bs .float-xl-start{float:left !important}.bs .float-xl-end{float:right !important}.bs .float-xl-none{float:none !important}.bs .d-xl-inline{display:inline !important}.bs .d-xl-inline-block{display:inline-block !important}.bs .d-xl-block{display:block !important}.bs .d-xl-grid{display:grid !important}.bs .d-xl-table{display:table !important}.bs .d-xl-table-row{display:table-row !important}.bs .d-xl-table-cell{display:table-cell !important}.bs .d-xl-flex{display:flex !important}.bs .d-xl-inline-flex{display:inline-flex !important}.bs .d-xl-none{display:none !important}.bs .flex-xl-fill{flex:1 1 auto !important}.bs .flex-xl-row{flex-direction:row !important}.bs .flex-xl-column{flex-direction:column !important}.bs .flex-xl-row-reverse{flex-direction:row-reverse !important}.bs .flex-xl-column-reverse{flex-direction:column-reverse !important}.bs .flex-xl-grow-0{flex-grow:0 !important}.bs .flex-xl-grow-1{flex-grow:1 !important}.bs .flex-xl-shrink-0{flex-shrink:0 !important}.bs .flex-xl-shrink-1{flex-shrink:1 !important}.bs .flex-xl-wrap{flex-wrap:wrap !important}.bs .flex-xl-nowrap{flex-wrap:nowrap !important}.bs .flex-xl-wrap-reverse{flex-wrap:wrap-reverse !important}.bs .gap-xl-0{gap:0 !important}.bs .gap-xl-1{gap:.25rem !important}.bs .gap-xl-2{gap:.5rem !important}.bs .gap-xl-3{gap:1rem !important}.bs .gap-xl-4{gap:1.5rem !important}.bs .gap-xl-5{gap:3rem !important}.bs .justify-content-xl-start{justify-content:flex-start !important}.bs .justify-content-xl-end{justify-content:flex-end !important}.bs .justify-content-xl-center{justify-content:center !important}.bs .justify-content-xl-between{justify-content:space-between !important}.bs .justify-content-xl-around{justify-content:space-around !important}.bs .justify-content-xl-evenly{justify-content:space-evenly !important}.bs .align-items-xl-start{align-items:flex-start !important}.bs .align-items-xl-end{align-items:flex-end !important}.bs .align-items-xl-center{align-items:center !important}.bs .align-items-xl-baseline{align-items:baseline !important}.bs .align-items-xl-stretch{align-items:stretch !important}.bs .align-content-xl-start{align-content:flex-start !important}.bs .align-content-xl-end{align-content:flex-end !important}.bs .align-content-xl-center{align-content:center !important}.bs .align-content-xl-between{align-content:space-between !important}.bs .align-content-xl-around{align-content:space-around !important}.bs .align-content-xl-stretch{align-content:stretch !important}.bs .align-self-xl-auto{align-self:auto !important}.bs .align-self-xl-start{align-self:flex-start !important}.bs .align-self-xl-end{align-self:flex-end !important}.bs .align-self-xl-center{align-self:center !important}.bs .align-self-xl-baseline{align-self:baseline !important}.bs .align-self-xl-stretch{align-self:stretch !important}.bs .order-xl-first{order:-1 !important}.bs .order-xl-0{order:0 !important}.bs .order-xl-1{order:1 !important}.bs .order-xl-2{order:2 !important}.bs .order-xl-3{order:3 !important}.bs .order-xl-4{order:4 !important}.bs .order-xl-5{order:5 !important}.bs .order-xl-last{order:6 !important}.bs .m-xl-0{margin:0 !important}.bs .m-xl-1{margin:.25rem !important}.bs .m-xl-2{margin:.5rem !important}.bs .m-xl-3{margin:1rem !important}.bs .m-xl-4{margin:1.5rem !important}.bs .m-xl-5{margin:3rem !important}.bs .m-xl-auto{margin:auto !important}.bs .mx-xl-0{margin-right:0 !important;margin-left:0 !important}.bs .mx-xl-1{margin-right:.25rem !important;margin-left:.25rem !important}.bs .mx-xl-2{margin-right:.5rem !important;margin-left:.5rem !important}.bs .mx-xl-3{margin-right:1rem !important;margin-left:1rem !important}.bs .mx-xl-4{margin-right:1.5rem !important;margin-left:1.5rem !important}.bs .mx-xl-5{margin-right:3rem !important;margin-left:3rem !important}.bs .mx-xl-auto{margin-right:auto !important;margin-left:auto !important}.bs .my-xl-0{margin-top:0 !important;margin-bottom:0 !important}.bs .my-xl-1{margin-top:.25rem !important;margin-bottom:.25rem !important}.bs .my-xl-2{margin-top:.5rem !important;margin-bottom:.5rem !important}.bs .my-xl-3{margin-top:1rem !important;margin-bottom:1rem !important}.bs .my-xl-4{margin-top:1.5rem !important;margin-bottom:1.5rem !important}.bs .my-xl-5{margin-top:3rem !important;margin-bottom:3rem !important}.bs .my-xl-auto{margin-top:auto !important;margin-bottom:auto !important}.bs .mt-xl-0{margin-top:0 !important}.bs .mt-xl-1{margin-top:.25rem !important}.bs .mt-xl-2{margin-top:.5rem !important}.bs .mt-xl-3{margin-top:1rem !important}.bs .mt-xl-4{margin-top:1.5rem !important}.bs .mt-xl-5{margin-top:3rem !important}.bs .mt-xl-auto{margin-top:auto !important}.bs .me-xl-0{margin-right:0 !important}.bs .me-xl-1{margin-right:.25rem !important}.bs .me-xl-2{margin-right:.5rem !important}.bs .me-xl-3{margin-right:1rem !important}.bs .me-xl-4{margin-right:1.5rem !important}.bs .me-xl-5{margin-right:3rem !important}.bs .me-xl-auto{margin-right:auto !important}.bs .mb-xl-0{margin-bottom:0 !important}.bs .mb-xl-1{margin-bottom:.25rem !important}.bs .mb-xl-2{margin-bottom:.5rem !important}.bs .mb-xl-3{margin-bottom:1rem !important}.bs .mb-xl-4{margin-bottom:1.5rem !important}.bs .mb-xl-5{margin-bottom:3rem !important}.bs .mb-xl-auto{margin-bottom:auto !important}.bs .ms-xl-0{margin-left:0 !important}.bs .ms-xl-1{margin-left:.25rem !important}.bs .ms-xl-2{margin-left:.5rem !important}.bs .ms-xl-3{margin-left:1rem !important}.bs .ms-xl-4{margin-left:1.5rem !important}.bs .ms-xl-5{margin-left:3rem !important}.bs .ms-xl-auto{margin-left:auto !important}.bs .p-xl-0{padding:0 !important}.bs .p-xl-1{padding:.25rem !important}.bs .p-xl-2{padding:.5rem !important}.bs .p-xl-3{padding:1rem !important}.bs .p-xl-4{padding:1.5rem !important}.bs .p-xl-5{padding:3rem !important}.bs .px-xl-0{padding-right:0 !important;padding-left:0 !important}.bs .px-xl-1{padding-right:.25rem !important;padding-left:.25rem !important}.bs .px-xl-2{padding-right:.5rem !important;padding-left:.5rem !important}.bs .px-xl-3{padding-right:1rem !important;padding-left:1rem !important}.bs .px-xl-4{padding-right:1.5rem !important;padding-left:1.5rem !important}.bs .px-xl-5{padding-right:3rem !important;padding-left:3rem !important}.bs .py-xl-0{padding-top:0 !important;padding-bottom:0 !important}.bs .py-xl-1{padding-top:.25rem !important;padding-bottom:.25rem !important}.bs .py-xl-2{padding-top:.5rem !important;padding-bottom:.5rem !important}.bs .py-xl-3{padding-top:1rem !important;padding-bottom:1rem !important}.bs .py-xl-4{padding-top:1.5rem !important;padding-bottom:1.5rem !important}.bs .py-xl-5{padding-top:3rem !important;padding-bottom:3rem !important}.bs .pt-xl-0{padding-top:0 !important}.bs .pt-xl-1{padding-top:.25rem !important}.bs .pt-xl-2{padding-top:.5rem !important}.bs .pt-xl-3{padding-top:1rem !important}.bs .pt-xl-4{padding-top:1.5rem !important}.bs .pt-xl-5{padding-top:3rem !important}.bs .pe-xl-0{padding-right:0 !important}.bs .pe-xl-1{padding-right:.25rem !important}.bs .pe-xl-2{padding-right:.5rem !important}.bs .pe-xl-3{padding-right:1rem !important}.bs .pe-xl-4{padding-right:1.5rem !important}.bs .pe-xl-5{padding-right:3rem !important}.bs .pb-xl-0{padding-bottom:0 !important}.bs .pb-xl-1{padding-bottom:.25rem !important}.bs .pb-xl-2{padding-bottom:.5rem !important}.bs .pb-xl-3{padding-bottom:1rem !important}.bs .pb-xl-4{padding-bottom:1.5rem !important}.bs .pb-xl-5{padding-bottom:3rem !important}.bs .ps-xl-0{padding-left:0 !important}.bs .ps-xl-1{padding-left:.25rem !important}.bs .ps-xl-2{padding-left:.5rem !important}.bs .ps-xl-3{padding-left:1rem !important}.bs .ps-xl-4{padding-left:1.5rem !important}.bs .ps-xl-5{padding-left:3rem !important}.bs .text-xl-start{text-align:left !important}.bs .text-xl-end{text-align:right !important}.bs .text-xl-center{text-align:center !important}}@media (min-width: 1400px){.bs .float-xxl-start{float:left !important}.bs .float-xxl-end{float:right !important}.bs .float-xxl-none{float:none !important}.bs .d-xxl-inline{display:inline !important}.bs .d-xxl-inline-block{display:inline-block !important}.bs .d-xxl-block{display:block !important}.bs .d-xxl-grid{display:grid !important}.bs .d-xxl-table{display:table !important}.bs .d-xxl-table-row{display:table-row !important}.bs .d-xxl-table-cell{display:table-cell !important}.bs .d-xxl-flex{display:flex !important}.bs .d-xxl-inline-flex{display:inline-flex !important}.bs .d-xxl-none{display:none !important}.bs .flex-xxl-fill{flex:1 1 auto !important}.bs .flex-xxl-row{flex-direction:row !important}.bs .flex-xxl-column{flex-direction:column !important}.bs .flex-xxl-row-reverse{flex-direction:row-reverse !important}.bs .flex-xxl-column-reverse{flex-direction:column-reverse !important}.bs .flex-xxl-grow-0{flex-grow:0 !important}.bs .flex-xxl-grow-1{flex-grow:1 !important}.bs .flex-xxl-shrink-0{flex-shrink:0 !important}.bs .flex-xxl-shrink-1{flex-shrink:1 !important}.bs .flex-xxl-wrap{flex-wrap:wrap !important}.bs .flex-xxl-nowrap{flex-wrap:nowrap !important}.bs .flex-xxl-wrap-reverse{flex-wrap:wrap-reverse !important}.bs .gap-xxl-0{gap:0 !important}.bs .gap-xxl-1{gap:.25rem !important}.bs .gap-xxl-2{gap:.5rem !important}.bs .gap-xxl-3{gap:1rem !important}.bs .gap-xxl-4{gap:1.5rem !important}.bs .gap-xxl-5{gap:3rem !important}.bs .justify-content-xxl-start{justify-content:flex-start !important}.bs .justify-content-xxl-end{justify-content:flex-end !important}.bs .justify-content-xxl-center{justify-content:center !important}.bs .justify-content-xxl-between{justify-content:space-between !important}.bs .justify-content-xxl-around{justify-content:space-around !important}.bs .justify-content-xxl-evenly{justify-content:space-evenly !important}.bs .align-items-xxl-start{align-items:flex-start !important}.bs .align-items-xxl-end{align-items:flex-end !important}.bs .align-items-xxl-center{align-items:center !important}.bs .align-items-xxl-baseline{align-items:baseline !important}.bs .align-items-xxl-stretch{align-items:stretch !important}.bs .align-content-xxl-start{align-content:flex-start !important}.bs .align-content-xxl-end{align-content:flex-end !important}.bs .align-content-xxl-center{align-content:center !important}.bs .align-content-xxl-between{align-content:space-between !important}.bs .align-content-xxl-around{align-content:space-around !important}.bs .align-content-xxl-stretch{align-content:stretch !important}.bs .align-self-xxl-auto{align-self:auto !important}.bs .align-self-xxl-start{align-self:flex-start !important}.bs .align-self-xxl-end{align-self:flex-end !important}.bs .align-self-xxl-center{align-self:center !important}.bs .align-self-xxl-baseline{align-self:baseline !important}.bs .align-self-xxl-stretch{align-self:stretch !important}.bs .order-xxl-first{order:-1 !important}.bs .order-xxl-0{order:0 !important}.bs .order-xxl-1{order:1 !important}.bs .order-xxl-2{order:2 !important}.bs .order-xxl-3{order:3 !important}.bs .order-xxl-4{order:4 !important}.bs .order-xxl-5{order:5 !important}.bs .order-xxl-last{order:6 !important}.bs .m-xxl-0{margin:0 !important}.bs .m-xxl-1{margin:.25rem !important}.bs .m-xxl-2{margin:.5rem !important}.bs .m-xxl-3{margin:1rem !important}.bs .m-xxl-4{margin:1.5rem !important}.bs .m-xxl-5{margin:3rem !important}.bs .m-xxl-auto{margin:auto !important}.bs .mx-xxl-0{margin-right:0 !important;margin-left:0 !important}.bs .mx-xxl-1{margin-right:.25rem !important;margin-left:.25rem !important}.bs .mx-xxl-2{margin-right:.5rem !important;margin-left:.5rem !important}.bs .mx-xxl-3{margin-right:1rem !important;margin-left:1rem !important}.bs .mx-xxl-4{margin-right:1.5rem !important;margin-left:1.5rem !important}.bs .mx-xxl-5{margin-right:3rem !important;margin-left:3rem !important}.bs .mx-xxl-auto{margin-right:auto !important;margin-left:auto !important}.bs .my-xxl-0{margin-top:0 !important;margin-bottom:0 !important}.bs .my-xxl-1{margin-top:.25rem !important;margin-bottom:.25rem !important}.bs .my-xxl-2{margin-top:.5rem !important;margin-bottom:.5rem !important}.bs .my-xxl-3{margin-top:1rem !important;margin-bottom:1rem !important}.bs .my-xxl-4{margin-top:1.5rem !important;margin-bottom:1.5rem !important}.bs .my-xxl-5{margin-top:3rem !important;margin-bottom:3rem !important}.bs .my-xxl-auto{margin-top:auto !important;margin-bottom:auto !important}.bs .mt-xxl-0{margin-top:0 !important}.bs .mt-xxl-1{margin-top:.25rem !important}.bs .mt-xxl-2{margin-top:.5rem !important}.bs .mt-xxl-3{margin-top:1rem !important}.bs .mt-xxl-4{margin-top:1.5rem !important}.bs .mt-xxl-5{margin-top:3rem !important}.bs .mt-xxl-auto{margin-top:auto !important}.bs .me-xxl-0{margin-right:0 !important}.bs .me-xxl-1{margin-right:.25rem !important}.bs .me-xxl-2{margin-right:.5rem !important}.bs .me-xxl-3{margin-right:1rem !important}.bs .me-xxl-4{margin-right:1.5rem !important}.bs .me-xxl-5{margin-right:3rem !important}.bs .me-xxl-auto{margin-right:auto !important}.bs .mb-xxl-0{margin-bottom:0 !important}.bs .mb-xxl-1{margin-bottom:.25rem !important}.bs .mb-xxl-2{margin-bottom:.5rem !important}.bs .mb-xxl-3{margin-bottom:1rem !important}.bs .mb-xxl-4{margin-bottom:1.5rem !important}.bs .mb-xxl-5{margin-bottom:3rem !important}.bs .mb-xxl-auto{margin-bottom:auto !important}.bs .ms-xxl-0{margin-left:0 !important}.bs .ms-xxl-1{margin-left:.25rem !important}.bs .ms-xxl-2{margin-left:.5rem !important}.bs .ms-xxl-3{margin-left:1rem !important}.bs .ms-xxl-4{margin-left:1.5rem !important}.bs .ms-xxl-5{margin-left:3rem !important}.bs .ms-xxl-auto{margin-left:auto !important}.bs .p-xxl-0{padding:0 !important}.bs .p-xxl-1{padding:.25rem !important}.bs .p-xxl-2{padding:.5rem !important}.bs .p-xxl-3{padding:1rem !important}.bs .p-xxl-4{padding:1.5rem !important}.bs .p-xxl-5{padding:3rem !important}.bs .px-xxl-0{padding-right:0 !important;padding-left:0 !important}.bs .px-xxl-1{padding-right:.25rem !important;padding-left:.25rem !important}.bs .px-xxl-2{padding-right:.5rem !important;padding-left:.5rem !important}.bs .px-xxl-3{padding-right:1rem !important;padding-left:1rem !important}.bs .px-xxl-4{padding-right:1.5rem !important;padding-left:1.5rem !important}.bs .px-xxl-5{padding-right:3rem !important;padding-left:3rem !important}.bs .py-xxl-0{padding-top:0 !important;padding-bottom:0 !important}.bs .py-xxl-1{padding-top:.25rem !important;padding-bottom:.25rem !important}.bs .py-xxl-2{padding-top:.5rem !important;padding-bottom:.5rem !important}.bs .py-xxl-3{padding-top:1rem !important;padding-bottom:1rem !important}.bs .py-xxl-4{padding-top:1.5rem !important;padding-bottom:1.5rem !important}.bs .py-xxl-5{padding-top:3rem !important;padding-bottom:3rem !important}.bs .pt-xxl-0{padding-top:0 !important}.bs .pt-xxl-1{padding-top:.25rem !important}.bs .pt-xxl-2{padding-top:.5rem !important}.bs .pt-xxl-3{padding-top:1rem !important}.bs .pt-xxl-4{padding-top:1.5rem !important}.bs .pt-xxl-5{padding-top:3rem !important}.bs .pe-xxl-0{padding-right:0 !important}.bs .pe-xxl-1{padding-right:.25rem !important}.bs .pe-xxl-2{padding-right:.5rem !important}.bs .pe-xxl-3{padding-right:1rem !important}.bs .pe-xxl-4{padding-right:1.5rem !important}.bs .pe-xxl-5{padding-right:3rem !important}.bs .pb-xxl-0{padding-bottom:0 !important}.bs .pb-xxl-1{padding-bottom:.25rem !important}.bs .pb-xxl-2{padding-bottom:.5rem !important}.bs .pb-xxl-3{padding-bottom:1rem !important}.bs .pb-xxl-4{padding-bottom:1.5rem !important}.bs .pb-xxl-5{padding-bottom:3rem !important}.bs .ps-xxl-0{padding-left:0 !important}.bs .ps-xxl-1{padding-left:.25rem !important}.bs .ps-xxl-2{padding-left:.5rem !important}.bs .ps-xxl-3{padding-left:1rem !important}.bs .ps-xxl-4{padding-left:1.5rem !important}.bs .ps-xxl-5{padding-left:3rem !important}.bs .text-xxl-start{text-align:left !important}.bs .text-xxl-end{text-align:right !important}.bs .text-xxl-center{text-align:center !important}}@media (min-width: 1200px){.bs .fs-1{font-size:2.5rem !important}.bs .fs-2{font-size:2rem !important}.bs .fs-3{font-size:1.75rem !important}.bs .fs-4{font-size:1.5rem !important}}@media print{.bs .d-print-inline{display:inline !important}.bs .d-print-inline-block{display:inline-block !important}.bs .d-print-block{display:block !important}.bs .d-print-grid{display:grid !important}.bs .d-print-table{display:table !important}.bs .d-print-table-row{display:table-row !important}.bs .d-print-table-cell{display:table-cell !important}.bs .d-print-flex{display:flex !important}.bs .d-print-inline-flex{display:inline-flex !important}.bs .d-print-none{display:none !important}}.modal-backdrop{position:fixed;top:0;left:0;z-index:1050;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.offcanvas-backdrop::before{position:fixed;top:0;left:0;z-index:1039;width:100vw;height:100vh;content:\\\"\\\";background-color:rgba(0,0,0,0.5)}\\n\",\"\"]),r.Z=a},180:function(t){t.exports=function(t){var r=[];return r.toString=function(){return this.map((function(r){var o=t(r);return r[2]?\"@media \".concat(r[2],\" {\").concat(o,\"}\"):o})).join(\"\")},r.i=function(t,o,e){\"string\"==typeof t&&(t=[[null,t,\"\"]]);var a={};if(e)for(var i=0;i<this.length;i++){var n=this[i][0];null!=n&&(a[n]=!0)}for(var s=0;s<t.length;s++){var b=[].concat(t[s]);e&&a[b[0]]||(o&&(b[2]?b[2]=\"\".concat(o,\" and \").concat(b[2]):b[2]=o),r.push(b))}},r}},565:function(t,r,o){var e,a=function(){var t={};return function(r){if(void 0===t[r]){var o=document.querySelector(r);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}t[r]=o}return t[r]}}(),i=[];function n(t){for(var r=-1,o=0;o<i.length;o++)if(i[o].identifier===t){r=o;break}return r}function s(t,r){for(var o={},e=[],a=0;a<t.length;a++){var s=t[a],b=r.base?s[0]+r.base:s[0],l=o[b]||0,m=\"\".concat(b,\" \").concat(l);o[b]=l+1;var d=n(m),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==d?(i[d].references++,i[d].updater(p)):i.push({identifier:m,updater:f(p,r),references:1}),e.push(m)}return e}function b(t){var r=document.createElement(\"style\"),e=t.attributes||{};if(void 0===e.nonce){var i=o.nc;i&&(e.nonce=i)}if(Object.keys(e).forEach((function(t){r.setAttribute(t,e[t])})),\"function\"==typeof t.insert)t.insert(r);else{var n=a(t.insert||\"head\");if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");n.appendChild(r)}return r}var l,m=(l=[],function(t,r){return l[t]=r,l.filter(Boolean).join(\"\\n\")});function d(t,r,o,e){var a=o?\"\":e.media?\"@media \".concat(e.media,\" {\").concat(e.css,\"}\"):e.css;if(t.styleSheet)t.styleSheet.cssText=m(r,a);else{var i=document.createTextNode(a),n=t.childNodes;n[r]&&t.removeChild(n[r]),n.length?t.insertBefore(i,n[r]):t.appendChild(i)}}function p(t,r,o){var e=o.css,a=o.media,i=o.sourceMap;if(a?t.setAttribute(\"media\",a):t.removeAttribute(\"media\"),i&&\"undefined\"!=typeof btoa&&(e+=\"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i)))),\" */\")),t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}var c=null,g=0;function f(t,r){var o,e,a;if(r.singleton){var i=g++;o=c||(c=b(r)),e=d.bind(null,o,i,!1),a=d.bind(null,o,i,!0)}else o=b(r),e=p.bind(null,o,r),a=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(o)};return e(t),function(r){if(r){if(r.css===t.css&&r.media===t.media&&r.sourceMap===t.sourceMap)return;e(t=r)}else a()}}t.exports=function(t,r){(r=r||{}).singleton||\"boolean\"==typeof r.singleton||(r.singleton=(void 0===e&&(e=Boolean(window&&document&&document.all&&!window.atob)),e));var o=s(t=t||[],r);return function(t){if(t=t||[],\"[object Array]\"===Object.prototype.toString.call(t)){for(var e=0;e<o.length;e++){var a=n(o[e]);i[a].references--}for(var b=s(t,r),l=0;l<o.length;l++){var m=n(o[l]);0===i[m].references&&(i[m].updater(),i.splice(m,1))}o=b}}}}},i={};function n(t){var r=i[t];if(void 0!==r)return r.exports;var o=i[t]={id:t,exports:{}};return a[t](o,o.exports,n),o.exports}n.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(r,{a:r}),r},n.d=function(t,r){for(var o in r)n.o(r,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},n.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},t=n(565),r=n.n(t),o=n(515),e={insert:\"head\",singleton:!1},r()(o.Z,e),o.Z.locals}();\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/bs.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/index.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Accordion = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/templates.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/item.js\");\r\n/**\r\n * Accordion\r\n */\r\nvar _Accordion = /** @class */ (function (_super) {\r\n    __extends(_Accordion, _super);\r\n    // Constructor\r\n    function _Accordion(props, template, itemTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        if (itemTemplate === void 0) { itemTemplate = templates_1.HTMLItem; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._items = null;\r\n        // Ensure the id is set\r\n        _this.el.id = _this.el.id || props.id || \"accordion\";\r\n        // Render the items\r\n        _this.renderItems(itemTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the item event\r\n    _Accordion.prototype.configureEvent = function (item) {\r\n        var _this = this;\r\n        // Set the click event\r\n        if (item.elHeader) {\r\n            item.elHeader.addEventListener(\"click\", function (ev) {\r\n                // Parse the items\r\n                for (var i = 0; i < _this._items.length; i++) {\r\n                    var item_2 = _this._items[i];\r\n                    // Toggle the item if it's active\r\n                    if (item_2.isExpanded) {\r\n                        item_2.toggle();\r\n                    }\r\n                }\r\n                // Toggle this item\r\n                item.toggle();\r\n            });\r\n        }\r\n    };\r\n    // Renders the items\r\n    _Accordion.prototype.renderItems = function (itemTemplate) {\r\n        // Clear the items\r\n        this._items = [];\r\n        // Set the flag\r\n        var autoCollapse = typeof (this.props.autoCollapse) === \"boolean\" ? this.props.autoCollapse : true;\r\n        // Parse the items\r\n        var items = this.props.items || [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            // Create the item and append it to the accordion\r\n            var item = new item_1.AccordionItem(this.el.id, this.el.id + i, items[i], itemTemplate, autoCollapse);\r\n            this._items.push(item);\r\n            autoCollapse ? this.configureEvent(item) : null;\r\n            this.el.appendChild(item.el);\r\n        }\r\n    };\r\n    return _Accordion;\r\n}(base_1.Base));\r\nexports.Accordion = function (props, template, itemTemplate) { return new _Accordion(props, template, itemTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/item.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/item.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AccordionItem = void 0;\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\n/**\r\n * Accordion Item\r\n */\r\nvar AccordionItem = /** @class */ (function () {\r\n    // Constructor\r\n    function AccordionItem(parentId, itemId, props, template, autoCollapse) {\r\n        this._autoCollapse = null;\r\n        this._el = null;\r\n        this._elCollapse = null;\r\n        this._elHeader = null;\r\n        this._id = null;\r\n        this._itemId = null;\r\n        this._parentId = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._autoCollapse = autoCollapse;\r\n        this._id = \"collapse\" + itemId;\r\n        this._itemId = itemId;\r\n        this._parentId = parentId;\r\n        this._props = props;\r\n        // Create the item\r\n        var elItem = document.createElement(\"div\");\r\n        elItem.innerHTML = template;\r\n        this._el = elItem.firstChild;\r\n        // Render the header\r\n        this.renderHeader();\r\n        // Append the content\r\n        common_1.appendContent(this._el.querySelector(\".accordion-body\"), this._props.content);\r\n        // Configure the collapse element\r\n        this.configureCollapse();\r\n        // Configure the events\r\n        this.configureEvents();\r\n    }\r\n    // Configures the collapse element\r\n    AccordionItem.prototype.configureCollapse = function () {\r\n        this._elCollapse = this._el.querySelector(\".accordion-collapse\");\r\n        if (this._elCollapse) {\r\n            this._props.showFl ? this._elCollapse.classList.add(\"show\") : null;\r\n            this._elCollapse.setAttribute(\"aria-labelledby\", this._itemId);\r\n            this._elCollapse.setAttribute(\"data-bs-parent\", \"#\" + this._parentId);\r\n            this._elCollapse.id = this._id;\r\n        }\r\n    };\r\n    // Configures the events\r\n    AccordionItem.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Add a click event\r\n        this._elHeader.addEventListener(\"click\", function () {\r\n            // See if the auto collapse flag is not set\r\n            if (!_this._autoCollapse) {\r\n                // Toggle the element\r\n                _this.toggle();\r\n            }\r\n            // Call the click event\r\n            _this._props.onClick ? _this._props.onClick(_this._elHeader, _this._props) : null;\r\n        });\r\n        // Execute the render event\r\n        this._props.onRender ? this._props.onRender(this._el.querySelector(\".accordion-body\"), this._props) : null;\r\n    };\r\n    // Renders the header\r\n    AccordionItem.prototype.renderHeader = function () {\r\n        var elHeader = this._el.querySelector(\".accordion-header\");\r\n        if (elHeader) {\r\n            // Set the properties\r\n            elHeader.id = this._itemId;\r\n        }\r\n        // Get the button\r\n        this._elHeader = this._el.querySelector(\".accordion-button\");\r\n        if (this._elHeader) {\r\n            // Set the class\r\n            this._props.showFl ? null : this._elHeader.classList.add(\"collapsed\");\r\n            // Set the properties\r\n            this._elHeader.setAttribute(\"aria-controls\", \"collapse\" + this._itemId);\r\n            this._elHeader.setAttribute(\"aria-expanded\", this._props.showFl ? \"true\" : \"false\");\r\n            this._elHeader.setAttribute(\"data-bs-target\", '#' + \"collapse\" + this._itemId);\r\n            this._elHeader.innerHTML = this._props.header;\r\n        }\r\n    };\r\n    Object.defineProperty(AccordionItem.prototype, \"el\", {\r\n        /**\r\n         * Public Properties\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccordionItem.prototype, \"elCollapse\", {\r\n        // The collapse element\r\n        get: function () { return this._elCollapse; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccordionItem.prototype, \"elHeader\", {\r\n        // The header element\r\n        get: function () { return this._elHeader; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccordionItem.prototype, \"id\", {\r\n        // The item id\r\n        get: function () { return this._id; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccordionItem.prototype, \"isExpanded\", {\r\n        // Returns true if the item is expanded\r\n        get: function () {\r\n            // See if the item is expanded\r\n            return this.elCollapse.classList.contains(\"collapsing\") || this.elCollapse.classList.contains(\"show\");\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Toggles the item\r\n    AccordionItem.prototype.toggle = function () {\r\n        var _this = this;\r\n        // See if it's expanded\r\n        if (this.isExpanded) {\r\n            // Start the animation\r\n            this.elCollapse.style.height = this.el.getBoundingClientRect()[\"height\"] + \"px\";\r\n            setTimeout(function () {\r\n                _this.elCollapse.classList.add(\"collapsing\");\r\n                _this.elCollapse.classList.remove(\"collapse\");\r\n                _this.elCollapse.classList.remove(\"show\");\r\n                _this.elCollapse.style.height = \"\";\r\n            }, 10);\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                _this.elCollapse.classList.remove(\"collapsing\");\r\n                _this.elCollapse.classList.add(\"collapse\");\r\n                _this.elHeader.classList.add(\"collapsed\");\r\n            }, 250);\r\n        }\r\n        else {\r\n            // Start the animation\r\n            this.elCollapse.classList.remove(\"collapse\");\r\n            this.elCollapse.classList.add(\"collapsing\");\r\n            this.elCollapse.style.height = this.el.scrollHeight + \"px\";\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                _this.elCollapse.classList.remove(\"collapsing\");\r\n                _this.elCollapse.classList.add(\"collapse\");\r\n                _this.elCollapse.classList.add(\"show\");\r\n                _this.elCollapse.style.height = \"\";\r\n                _this.elHeader.classList.remove(\"collapsed\");\r\n            }, 250);\r\n        }\r\n    };\r\n    return AccordionItem;\r\n}());\r\nexports.AccordionItem = AccordionItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/templates.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/templates.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLItem = exports.HTML = void 0;\r\n// Accordion\r\nexports.HTML = \"<div class=\\\"accordion\\\"></div>\";\r\n// Accordion Item\r\nexports.HTMLItem = \"\\n<div class=\\\"accordion-item\\\">\\n    <h2 class=\\\"accordion-header\\\">\\n        <button class=\\\"accordion-button\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\"></button>\\n    </h2>\\n    <div class=\\\"accordion-collapse collapse\\\">\\n        <div class=\\\"accordion-body\\\"></div>\\n    </div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/index.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Alert = exports.AlertClassNames = exports.AlertTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/templates.js\");\r\n/**\r\n * Alert Types\r\n */\r\nvar AlertTypes;\r\n(function (AlertTypes) {\r\n    AlertTypes[AlertTypes[\"Danger\"] = 1] = \"Danger\";\r\n    AlertTypes[AlertTypes[\"Dark\"] = 2] = \"Dark\";\r\n    AlertTypes[AlertTypes[\"Info\"] = 3] = \"Info\";\r\n    AlertTypes[AlertTypes[\"Light\"] = 4] = \"Light\";\r\n    AlertTypes[AlertTypes[\"Primary\"] = 5] = \"Primary\";\r\n    AlertTypes[AlertTypes[\"Secondary\"] = 6] = \"Secondary\";\r\n    AlertTypes[AlertTypes[\"Success\"] = 7] = \"Success\";\r\n    AlertTypes[AlertTypes[\"Warning\"] = 8] = \"Warning\";\r\n})(AlertTypes = exports.AlertTypes || (exports.AlertTypes = {}));\r\n/**\r\n * Alert Class Names\r\n */\r\nexports.AlertClassNames = new classNames_1.ClassNames([\r\n    \"alert-danger\",\r\n    \"alert-dark\",\r\n    \"alert-info\",\r\n    \"alert-light\",\r\n    \"alert-primary\",\r\n    \"alert-secondary\",\r\n    \"alert-success\",\r\n    \"alert-warning\"\r\n]);\r\n/**\r\n * Alert\r\n */\r\nvar _Alert = /** @class */ (function (_super) {\r\n    __extends(_Alert, _super);\r\n    // Constructor\r\n    function _Alert(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._btnClose = null;\r\n        // Set the default styling\r\n        _this.el.classList.add(exports.AlertClassNames.getByType(_this.props.type) || exports.AlertClassNames.getByType(AlertTypes.Primary));\r\n        // Render the header\r\n        _this.renderHeader();\r\n        // Configure the alert\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent element\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the alert\r\n    _Alert.prototype.configure = function () {\r\n        // Append the content\r\n        common_1.appendContent(this.el, this.props.content);\r\n        // See if we need to add the dismiss icon\r\n        if (this.props.isDismissible) {\r\n            // Add the class\r\n            this.el.classList.add(\"alert-dismissible\");\r\n            // Create the button\r\n            var btn = document.createElement(\"button\");\r\n            btn.className = \"btn-close\";\r\n            btn.type = \"button\";\r\n            btn.setAttribute(\"data-bs-dismiss\", \"alert\");\r\n            btn.setAttribute(\"aria-label\", \"Close\");\r\n            // Append the button\r\n            this.el.appendChild(btn);\r\n        }\r\n    };\r\n    // Configure the events\r\n    _Alert.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // See if we are dismissing the alert\r\n        this._btnClose = this.el.querySelector(\".btn-close\");\r\n        if (this._btnClose) {\r\n            // Add a click event\r\n            this._btnClose.addEventListener(\"click\", function () {\r\n                // Add the fade class\r\n                _this.el.classList.add(\"fade\");\r\n                setTimeout(function () { _this.hide(); }, 250);\r\n            });\r\n            // Execute the event\r\n            this.props.onClose ? this.props.onClose(this.props) : null;\r\n        }\r\n    };\r\n    // Render the header\r\n    _Alert.prototype.renderHeader = function () {\r\n        var header = this.el.querySelector(\".alert-heading\");\r\n        if (header) {\r\n            // See if a header was defined\r\n            if (this.props.header) {\r\n                // Set the heading\r\n                header.innerHTML = this.props.header;\r\n            }\r\n            else {\r\n                // Remove the element\r\n                this.el.removeChild(header);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Public Properties\r\n     */\r\n    // Closes the alert\r\n    _Alert.prototype.close = function () {\r\n        // Click the close button\r\n        this._btnClose ? this._btnClose.click() : null;\r\n    };\r\n    // Clears the alert and updates the text\r\n    _Alert.prototype.setText = function (alertText) {\r\n        // Clear the element\r\n        while (this.el.firstChild) {\r\n            this.el.removeChild(this.el.firstChild);\r\n        }\r\n        // Set the text\r\n        var elText = document.createTextNode(alertText == null ? \"\" : alertText);\r\n        // Append the text\r\n        this.el.appendChild(elText);\r\n    };\r\n    // Updates the alert template type\r\n    _Alert.prototype.setType = function (alertType) {\r\n        var _this = this;\r\n        // Parse the class names\r\n        exports.AlertClassNames.parse(function (className) {\r\n            // Remove the class name\r\n            _this.el.classList.remove(className);\r\n        });\r\n        // Set the alert type\r\n        this.el.classList.add(exports.AlertClassNames.getByType(alertType) || exports.AlertClassNames.getByType(AlertTypes.Primary));\r\n    };\r\n    return _Alert;\r\n}(base_1.Base));\r\nexports.Alert = function (props, template) { return new _Alert(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/templates.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/templates.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"alert\\\" role=\\\"alert\\\">\\n    <h4 class=\\\"alert-heading\\\"></h4>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/index.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Badge = exports.BadgeClassNames = exports.BadgeTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/templates.js\");\r\n/**\r\n * Badge Types\r\n */\r\nvar BadgeTypes;\r\n(function (BadgeTypes) {\r\n    BadgeTypes[BadgeTypes[\"Danger\"] = 1] = \"Danger\";\r\n    BadgeTypes[BadgeTypes[\"Dark\"] = 2] = \"Dark\";\r\n    BadgeTypes[BadgeTypes[\"Info\"] = 3] = \"Info\";\r\n    BadgeTypes[BadgeTypes[\"Light\"] = 4] = \"Light\";\r\n    BadgeTypes[BadgeTypes[\"Primary\"] = 5] = \"Primary\";\r\n    BadgeTypes[BadgeTypes[\"Secondary\"] = 6] = \"Secondary\";\r\n    BadgeTypes[BadgeTypes[\"Success\"] = 7] = \"Success\";\r\n    BadgeTypes[BadgeTypes[\"Warning\"] = 8] = \"Warning\";\r\n})(BadgeTypes = exports.BadgeTypes || (exports.BadgeTypes = {}));\r\n/**\r\n * Badge Class Names\r\n */\r\nexports.BadgeClassNames = new classNames_1.ClassNames([\r\n    \"bg-danger\",\r\n    \"bg-dark\",\r\n    \"bg-info\",\r\n    \"bg-light\",\r\n    \"bg-primary\",\r\n    \"bg-secondary\",\r\n    \"bg-success\",\r\n    \"bg-warning\"\r\n]);\r\n/**\r\n * Badge\r\n */\r\nvar _Badge = /** @class */ (function (_super) {\r\n    __extends(_Badge, _super);\r\n    // Constructor\r\n    function _Badge(props, template) {\r\n        if (template === void 0) { template = props.href || props.onClick ? templates_1.HTMLLink : templates_1.HTMLSpan; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Set the href property\r\n        props.href ? _this.el.setAttribute(\"href\", props.href) : null;\r\n        // Configure the badge\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent element\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the badge\r\n    _Badge.prototype.configure = function () {\r\n        // See if this is a pill\r\n        if (this.props.isPill) {\r\n            // Add the class name\r\n            this.el.classList.add(\"rounded-pill\");\r\n        }\r\n        // Set the default styling\r\n        this.el.classList.add(exports.BadgeClassNames.getByType(this.props.type) || exports.BadgeClassNames.getByType(BadgeTypes.Primary));\r\n        // Append the content\r\n        common_1.appendContent(this.el, this.props.content);\r\n    };\r\n    // Configures the events\r\n    _Badge.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Set the click event\r\n        this.props.onClick ? this.el.addEventListener(\"click\", function (ev) {\r\n            // Call the event\r\n            _this.props.onClick(_this.props, ev);\r\n        }) : null;\r\n    };\r\n    return _Badge;\r\n}(base_1.Base));\r\nexports.Badge = function (props, template) { return new _Badge(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/templates.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/templates.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLSpan = exports.HTMLLink = void 0;\r\n// Link\r\nexports.HTMLLink = \"<a href=\\\"#\\\" class=\\\"badge\\\"></a>\";\r\n// Span\r\nexports.HTMLSpan = \"<span class=\\\"badge\\\"></span>\";\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Base = void 0;\r\n/**\r\n * Base Components\r\n */\r\nvar Base = /** @class */ (function () {\r\n    // Constructor\r\n    function Base(html, props) {\r\n        this._el = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._props = props;\r\n        // Create the element\r\n        var el = document.createElement(\"div\");\r\n        el.innerHTML = html == null ? \"\" : html.trim();\r\n        this._el = el.firstChild ? el.firstChild : el;\r\n        // Set the class names\r\n        var classNames = (this._props.className || \"\").split(' ');\r\n        for (var i = 0; i < classNames.length; i++) {\r\n            // Ensure the class name exists\r\n            var className = classNames[i];\r\n            if (className) {\r\n                // Add the class\r\n                this._el.classList.add(className);\r\n            }\r\n        }\r\n        // Execute the assign to event\r\n        this._props.assignTo ? this._props.assignTo(this) : null;\r\n    }\r\n    /**\r\n     * Internal Methods\r\n     */\r\n    // Configures the parent element\r\n    Base.prototype.configureParent = function () {\r\n        // Create the element\r\n        var el = document.createElement(\"div\");\r\n        el.appendChild(this._el);\r\n        // See if the parent element exists\r\n        if (this._props.el) {\r\n            // Ensure the class list exists and it's not the body element\r\n            if (this._props.el.classList && this._props.el.tagName != \"BODY\") {\r\n                // Set the bootstrap class\r\n                this._props.el.classList.contains(\"bs\") ? null : this._props.el.classList.add(\"bs\");\r\n            }\r\n            // Append the elements\r\n            while (el.children.length > 0) {\r\n                this._props.el.appendChild(el.children[0]);\r\n            }\r\n            // Update the element\r\n            el = this._props.el;\r\n        }\r\n        else {\r\n            // Set the bootstrap class\r\n            el.classList.add(\"bs\");\r\n        }\r\n        // Return the parent element\r\n        return el;\r\n    };\r\n    Object.defineProperty(Base.prototype, \"el\", {\r\n        /**\r\n         * Public Properties\r\n         */\r\n        // The component element\r\n        get: function () { return this._el; },\r\n        set: function (el) { this._el = el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Hides the alert\r\n    Base.prototype.hide = function () {\r\n        // Ensure the alert is hidden\r\n        if (this._el.classList.contains(\"d-none\")) {\r\n            return;\r\n        }\r\n        // Hide the alert\r\n        this._el.classList.add(\"d-none\");\r\n    };\r\n    Object.defineProperty(Base.prototype, \"props\", {\r\n        // The component properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Shows the alert\r\n    Base.prototype.show = function () {\r\n        // Ensure the alert is visible\r\n        if (this._el.classList.contains(\"d-none\")) {\r\n            // Show the alert\r\n            this._el.classList.remove(\"d-none\");\r\n        }\r\n    };\r\n    return Base;\r\n}());\r\nexports.Base = Base;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Breadcrumb = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/templates.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/item.js\");\r\n/**\r\n * Breadcrumb\r\n */\r\nvar _Breadcrumb = /** @class */ (function (_super) {\r\n    __extends(_Breadcrumb, _super);\r\n    // Constructor\r\n    function _Breadcrumb(props, template, itemTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Render the items\r\n        _this.renderItems(itemTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configures the events\r\n    _Breadcrumb.prototype.configureEvents = function (item) {\r\n        var _this = this;\r\n        // See if there is a click event\r\n        if (this.props.onClick) {\r\n            // Add the click event\r\n            item.el.addEventListener(\"click\", function (ev) {\r\n                // Call the click event\r\n                _this.props.onClick(item.props, ev);\r\n            });\r\n        }\r\n    };\r\n    // Renders the breadcrumb items\r\n    _Breadcrumb.prototype.renderItems = function (itemTemplate) {\r\n        // Get the list element\r\n        var elList = this.el.querySelector(\".breadcrumb\");\r\n        if (elList) {\r\n            // Parse the item properties\r\n            var itemProps = this.props.items || [];\r\n            for (var i = 0; i < itemProps.length; i++) {\r\n                var itemProp = itemProps[i];\r\n                // Set the active flag\r\n                itemProp.isActive = i == itemProps.length - 1;\r\n                // Render the item\r\n                var item = new item_1.BreadcrumbItem(itemProp, itemTemplate);\r\n                // Configure the events\r\n                this.configureEvents(item);\r\n                // Add the item\r\n                elList.appendChild(item.el);\r\n            }\r\n        }\r\n    };\r\n    return _Breadcrumb;\r\n}(base_1.Base));\r\nexports.Breadcrumb = function (props, template, itemTemplate) { return new _Breadcrumb(props, template, itemTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/item.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/item.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BreadcrumbItem = void 0;\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/templates.js\");\r\n/**\r\n * Breadcrumb Item\r\n */\r\nvar BreadcrumbItem = /** @class */ (function () {\r\n    // Constructor\r\n    function BreadcrumbItem(props, template) {\r\n        if (template === void 0) { template = props.href && !props.isActive ? templates_1.HTMLLink : templates_1.HTMLItem; }\r\n        this._el = null;\r\n        this._elLink = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._props = props;\r\n        // Create the item\r\n        var elItem = document.createElement(\"div\");\r\n        elItem.innerHTML = template;\r\n        this._el = elItem.firstChild;\r\n        // Configure the item\r\n        this.configure();\r\n        // Configure the events\r\n        this.configureEvents();\r\n    }\r\n    // Configure the item\r\n    BreadcrumbItem.prototype.configure = function () {\r\n        // See if this item is active\r\n        if (this._props.isActive) {\r\n            // Add the class name\r\n            this._el.classList.add(\"active\");\r\n            // Set the attribute\r\n            this._el.setAttribute(\"aria-current\", \"page\");\r\n        }\r\n        // See if this is a link\r\n        this._elLink = this.el.querySelector(\"a\");\r\n        if (this._elLink) {\r\n            // Configure the link\r\n            this._elLink.href = this._props.href;\r\n            this._elLink.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n        }\r\n        else {\r\n            // Configure the item\r\n            this._el.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n        }\r\n    };\r\n    // Configure the events\r\n    BreadcrumbItem.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // See if there is a click event\r\n        if (this._props.onClick) {\r\n            // Add the click event\r\n            (this._elLink || this._el).addEventListener(\"click\", function (ev) {\r\n                // Call the click event\r\n                _this._props.onClick(_this._props, ev);\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(BreadcrumbItem.prototype, \"el\", {\r\n        /**\r\n         * Public Properties\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BreadcrumbItem.prototype, \"props\", {\r\n        // The componen properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return BreadcrumbItem;\r\n}());\r\nexports.BreadcrumbItem = BreadcrumbItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/templates.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/templates.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLLink = exports.HTMLItem = exports.HTML = void 0;\r\n// Nav\r\nexports.HTML = \"\\n<nav aria-label=\\\"breadcrumb\\\">\\n    <ol class=\\\"breadcrumb\\\"></ol>\\n</nav>\".trim();\r\n// Item\r\nexports.HTMLItem = \"<li class=\\\"breadcrumb-item\\\"></li>\";\r\n// Link\r\nexports.HTMLLink = \"\\n<li class=\\\"breadcrumb-item\\\">\\n    <a href=\\\"#\\\"></a>\\n</li>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ButtonGroup = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar button_1 = __webpack_require__(/*! ../button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/templates.js\");\r\n/**\r\n * Button Group\r\n * @property props - The button group properties.\r\n */\r\nvar _ButtonGroup = /** @class */ (function (_super) {\r\n    __extends(_ButtonGroup, _super);\r\n    // Constructor\r\n    function _ButtonGroup(props, template, btnTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._buttons = null;\r\n        // Configure the button group\r\n        _this.configure(btnTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the button group\r\n    _ButtonGroup.prototype.configure = function (btnTemplate) {\r\n        // Set the attributes\r\n        this.props.id ? this.el.id = this.props.id : null;\r\n        this.props.label ? this.el.setAttribute(\"aria-label\", this.props.label) : null;\r\n        // Set the class names\r\n        this.el.classList.add(this.props.isVertical ? \"btn-group-vertical\" : \"btn-group\");\r\n        this.props.isLarge ? this.el.classList.add(\"btn-group-lg\") : null;\r\n        this.props.isSmall ? this.el.classList.add(\"btn-group-sm\") : null;\r\n        // Render the buttons\r\n        this.renderButtons(btnTemplate);\r\n    };\r\n    // Render the buttons\r\n    _ButtonGroup.prototype.renderButtons = function (btnTemplate) {\r\n        // Clear the buttons\r\n        this._buttons = [];\r\n        // Parse the buttons\r\n        var buttons = this.props.buttons || [];\r\n        for (var i = 0; i < buttons.length; i++) {\r\n            var buttonProps = buttons[i];\r\n            // Set the property\r\n            buttonProps.type = buttonProps.type || this.props.buttonType;\r\n            // Create the button\r\n            var button = button_1.Button(buttonProps, btnTemplate);\r\n            this._buttons.push(button);\r\n            // Append the button to the group\r\n            this.el.appendChild(button.el);\r\n        }\r\n    };\r\n    Object.defineProperty(_ButtonGroup.prototype, \"buttons\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // Reference to the buttons\r\n        get: function () { return this._buttons; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return _ButtonGroup;\r\n}(base_1.Base));\r\nexports.ButtonGroup = function (props, template, btnTemplate) { return new _ButtonGroup(props, template, btnTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/templates.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/templates.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"<div class=\\\"btn-group\\\" role=\\\"group\\\"></div>\";\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Button = exports.ButtonClassNames = exports.ButtonTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar badge_1 = __webpack_require__(/*! ../badge */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/index.js\");\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar spinner_1 = __webpack_require__(/*! ../spinner */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/templates.js\");\r\n/**\r\n * Button Types\r\n */\r\nvar ButtonTypes;\r\n(function (ButtonTypes) {\r\n    ButtonTypes[ButtonTypes[\"Danger\"] = 1] = \"Danger\";\r\n    ButtonTypes[ButtonTypes[\"Dark\"] = 2] = \"Dark\";\r\n    ButtonTypes[ButtonTypes[\"Info\"] = 3] = \"Info\";\r\n    ButtonTypes[ButtonTypes[\"Light\"] = 4] = \"Light\";\r\n    ButtonTypes[ButtonTypes[\"Link\"] = 5] = \"Link\";\r\n    ButtonTypes[ButtonTypes[\"Primary\"] = 6] = \"Primary\";\r\n    ButtonTypes[ButtonTypes[\"Secondary\"] = 7] = \"Secondary\";\r\n    ButtonTypes[ButtonTypes[\"Success\"] = 8] = \"Success\";\r\n    ButtonTypes[ButtonTypes[\"Warning\"] = 9] = \"Warning\";\r\n    ButtonTypes[ButtonTypes[\"OutlineDanger\"] = 10] = \"OutlineDanger\";\r\n    ButtonTypes[ButtonTypes[\"OutlineDark\"] = 11] = \"OutlineDark\";\r\n    ButtonTypes[ButtonTypes[\"OutlineInfo\"] = 12] = \"OutlineInfo\";\r\n    ButtonTypes[ButtonTypes[\"OutlineLight\"] = 13] = \"OutlineLight\";\r\n    ButtonTypes[ButtonTypes[\"OutlineLink\"] = 14] = \"OutlineLink\";\r\n    ButtonTypes[ButtonTypes[\"OutlinePrimary\"] = 15] = \"OutlinePrimary\";\r\n    ButtonTypes[ButtonTypes[\"OutlineSecondary\"] = 16] = \"OutlineSecondary\";\r\n    ButtonTypes[ButtonTypes[\"OutlineSuccess\"] = 17] = \"OutlineSuccess\";\r\n    ButtonTypes[ButtonTypes[\"OutlineWarning\"] = 18] = \"OutlineWarning\";\r\n})(ButtonTypes = exports.ButtonTypes || (exports.ButtonTypes = {}));\r\n/**\r\n * Button Classes\r\n */\r\nexports.ButtonClassNames = new classNames_1.ClassNames([\r\n    \"btn-danger\",\r\n    \"btn-dark\",\r\n    \"btn-info\",\r\n    \"btn-light\",\r\n    \"btn-link\",\r\n    \"btn-primary\",\r\n    \"btn-secondary\",\r\n    \"btn-success\",\r\n    \"btn-warning\",\r\n    \"btn-outline-danger\",\r\n    \"btn-outline-dark\",\r\n    \"btn-outline-info\",\r\n    \"btn-outline-light\",\r\n    \"btn-outline-link\",\r\n    \"btn-outline-primary\",\r\n    \"btn-outline-secondary\",\r\n    \"btn-outline-success\",\r\n    \"btn-outline-warning\"\r\n]);\r\n/**\r\n * Button\r\n * @param props The button properties.\r\n */\r\nvar _Button = /** @class */ (function (_super) {\r\n    __extends(_Button, _super);\r\n    // Constructor\r\n    function _Button(props, template) {\r\n        if (template === void 0) { template = props.isBlock ? templates_1.HTMLBlock : (props.href || props.isLink ? templates_1.HTMLLink : templates_1.HTML); }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the button\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the button\r\n    _Button.prototype.configure = function () {\r\n        // Add the class names\r\n        this.props.isLarge ? this.el.classList.add(\"btn-lg\") : null;\r\n        this.props.isSmall ? this.el.classList.add(\"btn-sm\") : null;\r\n        // Set the default type\r\n        this.setType(this.props.type || ButtonTypes.Primary);\r\n        // Set the attributes\r\n        this.props.dismiss ? this.el.setAttribute(\"data-bs-dismiss\", this.props.dismiss) : null;\r\n        this.props.href ? this.el.href = this.props.href : null;\r\n        this.props.id ? this.el.id = this.props.id : null;\r\n        this.props.isDisabled ? this.el.setAttribute(\"disabled\", \"disabled\") : null;\r\n        this.props.tabIndex != null ? this.el.setAttribute(\"tabindex\", this.props.tabIndex) : null;\r\n        this.props.target ? this.el.setAttribute(\"data-bs-target\", this.props.target) : null;\r\n        this.props.title ? this.el.title = this.props.title : null;\r\n        this.props.toggle ? this.el.setAttribute(\"data-bs-toggle\", this.props.toggle) : null;\r\n        this.props.trigger ? this.el.setAttribute(\"data-bs-trigger\", this.props.trigger) : null;\r\n        typeof (this.props.isExpanded) === \"boolean\" ? this.el.setAttribute(\"aria-expanded\", this.props.isExpanded ? \"true\" : \"false\") : null;\r\n        // See if controls are defined\r\n        if (this.props.controls) {\r\n            // See if this is a string\r\n            if (typeof (this.props.controls) === \"string\") {\r\n                // Set the controls\r\n                this.el.setAttribute(\"aria-controls\", this.props.controls);\r\n            }\r\n            else {\r\n                // Set the controls\r\n                this.el.setAttribute(\"aria-controls\", this.props.controls.join(' '));\r\n            }\r\n        }\r\n        // Set the text\r\n        this.setText(this.props.text);\r\n        // Set the icon\r\n        // TODO - Need to redo this logic to not include all icons by default\r\n        if (typeof (this.props.iconType) !== \"undefined\") {\r\n            // Append the icon\r\n            GD && GD.Icons ? this.el.appendChild(GD.Icons(this.props.iconType, this.props.iconSize, this.props.iconSize)) : null;\r\n            // Update the styling of the button\r\n            this.el.classList.add(\"btn-icon\");\r\n        }\r\n        // See if this is a spinner\r\n        if (this.props.spinnerProps) {\r\n            // Set the element to render to\r\n            this.props.spinnerProps.el = this.el;\r\n            // Render the spinner\r\n            spinner_1.Spinner(this.props.spinnerProps);\r\n        }\r\n        // See if there is a badge\r\n        if (this.props.badge) {\r\n            // Default the type\r\n            this.props.badge.type = this.props.badge.type || badge_1.BadgeTypes.Light;\r\n            // Render the badge\r\n            this.el.appendChild(badge_1.Badge(this.props.badge).el);\r\n        }\r\n    };\r\n    // Configure the events\r\n    _Button.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // See if there is a click event\r\n        if (this.props.onClick) {\r\n            // Add a click event\r\n            this.el.addEventListener(\"click\", function (ev) {\r\n                // Call the click event\r\n                _this.props.onClick(_this.props, ev);\r\n            });\r\n        }\r\n        // See if we are toggling anything\r\n        if (this.props.toggleObj && typeof (this.props.toggleObj.toggle) === \"function\") {\r\n            // Add a click event\r\n            this.el.addEventListener(\"click\", function (ev) {\r\n                // Toggle the object\r\n                _this.props.toggleObj.toggle();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Public Properties\r\n     */\r\n    // Disables the button\r\n    _Button.prototype.disable = function () { this.el.disabled = true; };\r\n    // Enables the button\r\n    _Button.prototype.enable = function () { this.el.disabled = false; };\r\n    // Sets the button text\r\n    _Button.prototype.setText = function (btnText) {\r\n        // Clear the element\r\n        while (this.el.firstChild) {\r\n            this.el.removeChild(this.el.firstChild);\r\n        }\r\n        // Set the text\r\n        var elText = document.createTextNode(btnText == null ? \"\" : btnText);\r\n        // Append the text\r\n        this.el.appendChild(elText);\r\n    };\r\n    // Sets the button type\r\n    _Button.prototype.setType = function (buttonType) {\r\n        var _this = this;\r\n        // Parse the class names\r\n        exports.ButtonClassNames.parse(function (className) {\r\n            // Remove the class names\r\n            _this.el.classList.remove(className);\r\n        });\r\n        // Set the class name\r\n        var className = exports.ButtonClassNames.getByType(buttonType) || exports.ButtonClassNames.getByType(ButtonTypes.Primary);\r\n        this.el.classList.add(className);\r\n    };\r\n    // Toggles the button\r\n    _Button.prototype.toggle = function () {\r\n        var btn = this.el;\r\n        // Toggle the element\r\n        btn.classList.contains(\"active\") ? btn.classList.remove(\"active\") : btn.classList.add(\"active\");\r\n    };\r\n    return _Button;\r\n}(base_1.Base));\r\nexports.Button = function (props, template) { return new _Button(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/templates.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/templates.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLLink = exports.HTMLBlock = exports.HTML = void 0;\r\n// Button\r\nexports.HTML = \"<button class=\\\"btn\\\" type=\\\"button\\\"></button>\";\r\n// Block\r\nexports.HTMLBlock = \"<div class=\\\"d-grid gap-2\\\">\" + exports.HTML + \"</div>\";\r\n// Link\r\nexports.HTMLLink = \"<a class=\\\"btn\\\" role=\\\"button\\\"></a>\";\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/index.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CardGroup = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar card_1 = __webpack_require__(/*! ../card */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/templates.js\");\r\n/**\r\n * Card Group\r\n * @property props - The button group properties.\r\n */\r\nvar _CardGroup = /** @class */ (function (_super) {\r\n    __extends(_CardGroup, _super);\r\n    // Constructor\r\n    function _CardGroup(props, template, cardTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the card group\r\n        _this.configure(cardTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _CardGroup.prototype.configure = function (cardTemplate) {\r\n        // Parse the cards\r\n        var cards = this.props.cards || [];\r\n        for (var i = 0; i < cards.length; i++) {\r\n            // Add the card\r\n            this.el.appendChild(card_1.Card(cards[i], cardTemplate).el);\r\n        }\r\n    };\r\n    return _CardGroup;\r\n}(base_1.Base));\r\nexports.CardGroup = function (props, template, cardTemplate) { return new _CardGroup(props, template, cardTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/templates.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/templates.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"<div class=\\\"card-group\\\"></div>\";\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/action.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/action.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CardAction = void 0;\r\nvar button_1 = __webpack_require__(/*! ../button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/templates.js\");\r\n/**\r\n * Card Action\r\n */\r\nvar CardAction = /** @class */ (function () {\r\n    // Constructor\r\n    function CardAction(props, parent) {\r\n        this._el = null;\r\n        this._parent = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._parent = parent;\r\n        this._props = props;\r\n        // Create the item\r\n        var elItem = document.createElement(\"div\");\r\n        elItem.innerHTML = templates_1.HTMLAction;\r\n        this._el = elItem.firstChild;\r\n        // Configure the item\r\n        this.configure();\r\n        // Configure the events\r\n        this.configureEvents();\r\n    }\r\n    // Configure the action\r\n    CardAction.prototype.configure = function () {\r\n        // Set the attributes\r\n        this._el.href = this._props.href || this._el.href;\r\n        this._el.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n        // Set the default type\r\n        var defaultType = button_1.ButtonClassNames[this._props.buttonType - 1] || \"card-link\";\r\n        this._el.classList.add(defaultType);\r\n    };\r\n    // Configure the events\r\n    CardAction.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // See if there is a click event\r\n        if (this._props.onClick) {\r\n            // Add a click event\r\n            this._el.addEventListener(\"click\", function (ev) {\r\n                // Execute the event\r\n                _this._props.onClick(_this._props, _this._parent.props, ev);\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(CardAction.prototype, \"el\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return CardAction;\r\n}());\r\nexports.CardAction = CardAction;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/action.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Card = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar nav_1 = __webpack_require__(/*! ../nav */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/templates.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/item.js\");\r\n/**\r\n * Card\r\n */\r\nvar _Card = /** @class */ (function (_super) {\r\n    __extends(_Card, _super);\r\n    // Constructor\r\n    function _Card(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the card\r\n        _this.configure();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card\r\n    _Card.prototype.configure = function () {\r\n        // See if the top image exists\r\n        if (this.props.imgTop) {\r\n            // Add the top image\r\n            var img = document.createElement(\"img\");\r\n            img.alt = this.props.imgTop.alt == null ? \"\" : this.props.imgTop.alt;\r\n            img.className = \"card-img-top\";\r\n            img.src = this.props.imgTop.src == null ? \"\" : this.props.imgTop.src;\r\n            this.el.appendChild(img);\r\n        }\r\n        // Configure the header\r\n        this.configureHeader();\r\n        // Render the cards\r\n        this.renderCards();\r\n        // Configure the footer\r\n        this.configureFooter();\r\n        // See if the bottom image exists\r\n        if (this.props.imgBottom) {\r\n            // Add the bottom image\r\n            var img = document.createElement(\"img\");\r\n            img.alt = this.props.imgBottom.alt == null ? \"\" : this.props.imgBottom.alt;\r\n            img.className = \"card-img-bottom\";\r\n            img.src = this.props.imgBottom.src == null ? \"\" : this.props.imgBottom.src;\r\n            this.el.appendChild(img);\r\n        }\r\n    };\r\n    // Configure the events\r\n    _Card.prototype.configureEvents = function (body) {\r\n        var _this = this;\r\n        // See if there is a click event\r\n        if (this.props.onClick) {\r\n            // Set the click event\r\n            body.el.addEventListener(\"click\", function (ev) {\r\n                // Execute the event\r\n                _this.props.onClick(body.props);\r\n            });\r\n        }\r\n    };\r\n    // Configure the header\r\n    _Card.prototype.configureHeader = function () {\r\n        // See if the header exists\r\n        if (this.props.header) {\r\n            // See if the navigation exists\r\n            if (this.props.header.nav) {\r\n                var navProps = this.props.header.nav;\r\n                // Set the class\r\n                navProps.className = [\r\n                    navProps.className || \"\",\r\n                    \"card-header-tabs\"\r\n                ].join(' ');\r\n                // Render the navigation\r\n                this.el.appendChild(nav_1.Nav(navProps).el);\r\n            }\r\n            else {\r\n                // Render the header\r\n                var header = document.createElement(\"div\");\r\n                header.className = this.props.header.className || \"\";\r\n                header.classList.add(\"card-header\");\r\n                this.el.appendChild(header);\r\n                // Append the content\r\n                common_1.appendContent(header, this.props.header.content);\r\n                // Call the render event\r\n                this.props.header.onRender ? this.props.header.onRender(header, this.props.header) : null;\r\n            }\r\n        }\r\n    };\r\n    // Configure the footer\r\n    _Card.prototype.configureFooter = function () {\r\n        // See if the footer exists\r\n        if (this.props.footer) {\r\n            // Add the footer\r\n            var footer = document.createElement(\"div\");\r\n            footer.className = this.props.footer.className || \"\";\r\n            footer.classList.add(\"card-footer\");\r\n            this.el.appendChild(footer);\r\n            // Append the content\r\n            common_1.appendContent(footer, this.props.footer.content);\r\n            // Call the render event\r\n            this.props.footer.onRender ? this.props.footer.onRender(footer, this.props.footer) : null;\r\n        }\r\n    };\r\n    // Render the cards\r\n    _Card.prototype.renderCards = function () {\r\n        // Parse the body cards\r\n        var items = this.props.body || [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            // Append the body card\r\n            var body = new item_1.CardBody(item);\r\n            this.el.appendChild(body.el);\r\n            // Configure the events\r\n            this.configureEvents(body);\r\n        }\r\n    };\r\n    return _Card;\r\n}(base_1.Base));\r\nexports.Card = function (props, template) { return new _Card(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/item.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/item.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CardBody = void 0;\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar action_1 = __webpack_require__(/*! ./action */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/action.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/templates.js\");\r\n/**\r\n * Card Body\r\n */\r\nvar CardBody = /** @class */ (function () {\r\n    // Constructor\r\n    function CardBody(props) {\r\n        this._el = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._props = props;\r\n        // Create the item\r\n        var elItem = document.createElement(\"div\");\r\n        elItem.innerHTML = templates_1.HTMLItem;\r\n        this._el = elItem.firstChild;\r\n        // Configure the item\r\n        this.configure();\r\n        // Configure the events\r\n        this.configureEvents();\r\n    }\r\n    // Configure the body\r\n    CardBody.prototype.configure = function () {\r\n        // Set the class names\r\n        if (this._props.className) {\r\n            this._el.classList.add(this._props.className);\r\n        }\r\n        // Update the title\r\n        var elTitle = this._el.querySelector(\".card-title\");\r\n        if (this._props.title || this._props.onRenderTitle) {\r\n            // Append the content\r\n            common_1.appendContent(elTitle, this._props.title);\r\n            // Call the render event\r\n            this._props.onRenderTitle ? this._props.onRenderTitle(elTitle, this._props) : null;\r\n        }\r\n        else {\r\n            // Remove the title\r\n            this._el.removeChild(elTitle);\r\n        }\r\n        // Update the sub-title\r\n        var subTitle = this._el.querySelector(\".card-subtitle\");\r\n        if (this._props.subTitle) {\r\n            // Set the title\r\n            subTitle.innerHTML = this._props.subTitle;\r\n        }\r\n        else {\r\n            // Remove the title\r\n            this._el.removeChild(subTitle);\r\n        }\r\n        // Update the text\r\n        var text = this._el.querySelector(\".card-text\");\r\n        if (this._props.text) {\r\n            // Set the title\r\n            text.innerHTML = this._props.text;\r\n        }\r\n        else {\r\n            // Remove the title\r\n            this._el.removeChild(text);\r\n        }\r\n        // Append the content\r\n        common_1.appendContent(this._el, this._props.content);\r\n        // Render the actions\r\n        this.renderActions();\r\n    };\r\n    // Configure the events\r\n    CardBody.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Call the render event if it exists\r\n        this._props.onRender ? this._props.onRender(this._el, this._props) : null;\r\n        // See if there is a click event\r\n        if (this._props.onClick) {\r\n            // Set the click event\r\n            this._el.addEventListener(\"click\", function (ev) {\r\n                // Execute the event\r\n                _this._props.onClick(_this._props, ev);\r\n            });\r\n        }\r\n    };\r\n    // Render the card actions\r\n    CardBody.prototype.renderActions = function () {\r\n        // Parse the actions\r\n        var actions = this._props.actions || [];\r\n        for (var i = 0; i < actions.length; i++) {\r\n            // Add the action\r\n            var action = new action_1.CardAction(actions[i], this);\r\n            this._el.appendChild(action.el);\r\n        }\r\n    };\r\n    Object.defineProperty(CardBody.prototype, \"el\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardBody.prototype, \"props\", {\r\n        // The component properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return CardBody;\r\n}());\r\nexports.CardBody = CardBody;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/templates.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/templates.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLItem = exports.HTMLAction = exports.HTML = void 0;\r\n// Card\r\nexports.HTML = \"<div class=\\\"card\\\"></div>\";\r\n// Action\r\nexports.HTMLAction = \"<a href=\\\"#\\\" class=\\\"btn\\\"></a>\";\r\n// Item\r\nexports.HTMLItem = \"\\n<div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\"></h5>\\n    <h6 class=\\\"card-subtitle\\\"></h6>\\n    <p class=\\\"card-text\\\"></p>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Carousel = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/item.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/templates.js\");\r\n/**\r\n * Carousel\r\n * @param props - The carousel properties.\r\n */\r\nvar _Carousel = /** @class */ (function (_super) {\r\n    __extends(_Carousel, _super);\r\n    // Constructor\r\n    function _Carousel(props, template, slideTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._eventId = null;\r\n        _this._indicators = null;\r\n        _this._pauseFlag = false;\r\n        _this._slides = null;\r\n        _this._toggle = false;\r\n        // Configure the carousel\r\n        _this.configure(slideTemplate);\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Carousel.prototype.configure = function (slideTemplate) {\r\n        // Set the attributes\r\n        this.el.id = \"carousel\" + (this.props.id == null ? \"\" : this.props.id);\r\n        this.props.enableCrossfade ? this.el.classList.add(\"carousel-fade\") : null;\r\n        // Render the indicators\r\n        this.renderIndicators();\r\n        // Render the controls\r\n        this.renderControls();\r\n        // Render the slides\r\n        this.renderSlides(slideTemplate);\r\n        // Set the dark theme\r\n        this.props.isDark ? this.setTheme(true) : null;\r\n        // Get the options\r\n        var options = this.props.options;\r\n        if (options) {\r\n            // See if the interval is set\r\n            if (options.interval) {\r\n                this.start(options.interval);\r\n            }\r\n            // See if the starting slide is set\r\n            if (options.slide) {\r\n                this.nextWhenVisible(options.slide);\r\n            }\r\n        }\r\n    };\r\n    // Configures the events\r\n    _Carousel.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        var el = this.el;\r\n        // Get the options\r\n        var options = this.props.options;\r\n        if (options) {\r\n            // See if the keyboard option is set\r\n            if (options.keyboard) {\r\n                // Add a keydown event\r\n                el.addEventListener(\"keydown\", function (ev) {\r\n                    // See if the left arrow was pressed\r\n                    if (ev.keyCode == 37) {\r\n                        // Move to the previous slide\r\n                        _this.previous();\r\n                    }\r\n                    // Else, see if the right arrow was pressed\r\n                    else if (ev.keyCode == 39) {\r\n                        // Move tot he next slide\r\n                        _this.next();\r\n                    }\r\n                });\r\n            }\r\n            // See if the pause option is set\r\n            if (options.pause) {\r\n                // Set the mouse enter event\r\n                el.addEventListener(\"mouseenter\", function () {\r\n                    // See if automation exists\r\n                    if (_this._eventId) {\r\n                        // Pause the automation\r\n                        _this.pause();\r\n                    }\r\n                });\r\n                // Set the mouse exit event\r\n                el.addEventListener(\"mouseenter\", function () {\r\n                    // See if automation exists\r\n                    if (_this._eventId) {\r\n                        // Unpause the automation\r\n                        _this.unpause();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    // Moves to the another slides\r\n    _Carousel.prototype.moveToSlide = function (current, next, slideRight) {\r\n        var _this = this;\r\n        if (slideRight === void 0) { slideRight = true; }\r\n        // Do nothing if the toggle flag is set\r\n        if (this._toggle) {\r\n            return;\r\n        }\r\n        // Set the flag\r\n        this._toggle = true;\r\n        // Ensure the slides exist\r\n        if (current && next) {\r\n            // Animate the current slide out\r\n            next.el.classList.add(slideRight ? \"carousel-item-next\" : \"carousel-item-prev\");\r\n            current.el.classList.add(slideRight ? \"carousel-item-start\" : \"carousel-item-end\");\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                // Animate the next slide in\r\n                next.el.classList.add(slideRight ? \"carousel-item-start\" : \"carousel-item-end\");\r\n                // Wait for the animation to complete\r\n                setTimeout(function () {\r\n                    // Update the classes\r\n                    next.el.classList.add(\"active\");\r\n                    current.el.classList.remove(\"active\", \"carousel-item-start\", \"carousel-item-end\");\r\n                    next.el.classList.remove(\"carousel-item-next\", \"carousel-item-prev\", \"carousel-item-start\", \"carousel-item-end\");\r\n                    // Set the flag\r\n                    _this._toggle = false;\r\n                }, 600);\r\n            }, 10);\r\n        }\r\n    };\r\n    // Renders the controls\r\n    _Carousel.prototype.renderControls = function () {\r\n        var _this = this;\r\n        // Get the controls\r\n        var nextControl = this.el.querySelector(\".carousel-control-next\");\r\n        var prevControl = this.el.querySelector(\".carousel-control-prev\");\r\n        // See if we are rendering controls\r\n        if (this.props.enableControls) {\r\n            // Configure the controls\r\n            nextControl ? nextControl.href = \"#\" + this.el.id : null;\r\n            prevControl ? prevControl.href = \"#\" + this.el.id : null;\r\n            // Set the click event\r\n            nextControl.addEventListener(\"click\", function (ev) { ev.preventDefault(); _this.next(); });\r\n            prevControl.addEventListener(\"click\", function (ev) { ev.preventDefault(); _this.previous(); });\r\n        }\r\n        else {\r\n            // Remove the controls\r\n            nextControl ? this.el.removeChild(nextControl) : null;\r\n            prevControl ? this.el.removeChild(prevControl) : null;\r\n        }\r\n    };\r\n    // Renders the indicators\r\n    _Carousel.prototype.renderIndicators = function () {\r\n        var _this = this;\r\n        // Clear the indicators\r\n        this._indicators = [];\r\n        // Get the indicators\r\n        var indicators = this.el.querySelector(\".carousel-indicators\");\r\n        if (indicators) {\r\n            // See if we are enabling indicators\r\n            if (this.props.enableIndicators) {\r\n                // Parse the items\r\n                var items = this.props.items || [];\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    // Create the item\r\n                    var elItem = document.createElement(\"li\");\r\n                    elItem.setAttribute(\"data-bs-target\", \"#\" + this.el.id);\r\n                    elItem.setAttribute(\"data-bs-slide-to\", i.toString());\r\n                    item.isActive ? elItem.classList.add(\"active\") : null;\r\n                    elItem.addEventListener(\"click\", function (ev) {\r\n                        var elSlide = ev.currentTarget;\r\n                        // Prevent the page from moving to the top\r\n                        ev.preventDefault();\r\n                        // Go to the slide\r\n                        _this.nextWhenVisible(elSlide.getAttribute(\"data-bs-slide-to\"));\r\n                    });\r\n                    // Add the item\r\n                    indicators.appendChild(elItem);\r\n                    this._indicators.push(elItem);\r\n                }\r\n            }\r\n            else {\r\n                // Remove the indicators\r\n                this.el.removeChild(indicators);\r\n            }\r\n        }\r\n    };\r\n    // Renders the slides\r\n    _Carousel.prototype.renderSlides = function (slideTemplate) {\r\n        // Clear the slides\r\n        this._slides = [];\r\n        // Get the indicators\r\n        var slides = this.el.querySelector(\".carousel-inner\");\r\n        if (slides) {\r\n            // Parse the items\r\n            var items = this.props.items || [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                var slide = new item_1.CarouselItem(items[i], slideTemplate);\r\n                this._slides.push(slide);\r\n                // Create the item element\r\n                slides.appendChild(slide.el);\r\n            }\r\n        }\r\n    };\r\n    // Starts to move automatically\r\n    _Carousel.prototype.start = function (timeToWait) {\r\n        var _this = this;\r\n        if (timeToWait === void 0) { timeToWait = 5000; }\r\n        // Do nothing if the event already exists\r\n        if (this._eventId) {\r\n            return;\r\n        }\r\n        // Validate the time\r\n        if (timeToWait < 1000) {\r\n            timeToWait = 1000;\r\n        }\r\n        // Start the event\r\n        this._eventId = setInterval(function () {\r\n            // Do nothing if we have paused it\r\n            if (_this._pauseFlag) {\r\n                return;\r\n            }\r\n            // Move to the next slide\r\n            _this.next();\r\n        }, timeToWait);\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Cycle the carousel\r\n    _Carousel.prototype.cycle = function () {\r\n        // Start the event\r\n        this.start(this.props.options && this.props.options.interval);\r\n    };\r\n    // Goes to the next slide\r\n    _Carousel.prototype.next = function () {\r\n        var currentSlide = null;\r\n        var nextSlide = null;\r\n        var options = this.props.options || {};\r\n        // Parse the slides\r\n        for (var i = 0; i < this._slides.length; i++) {\r\n            var slide = this._slides[i];\r\n            if (slide.isActive) {\r\n                // See if we are at the end and wrapping is disabled\r\n                if (i + 1 == this._slides.length && options.wrap == false) {\r\n                    // Do nothing\r\n                    return;\r\n                }\r\n                // Set the slides\r\n                currentSlide = slide;\r\n                nextSlide = this._slides[i + 1] || this._slides[0];\r\n                // Update the indicators\r\n                this._indicators[i].classList.remove(\"active\");\r\n                (this._indicators[i + 1] || this._indicators[0]).classList.add(\"active\");\r\n                break;\r\n            }\r\n        }\r\n        // Move to the next slide\r\n        this.moveToSlide(currentSlide, nextSlide);\r\n    };\r\n    // Cycles the carousel to a particular frame\r\n    _Carousel.prototype.nextWhenVisible = function (idx) {\r\n        var currentSlide = null;\r\n        var nextSlide = this._slides[idx];\r\n        var slideRight = true;\r\n        // Parse the slides\r\n        for (var i = 0; i < this._slides.length; i++) {\r\n            var slide = this._slides[i];\r\n            // See if this slide is active\r\n            if (slide.isActive) {\r\n                // Do nothing if we selected the same slide\r\n                if (idx == i) {\r\n                    return;\r\n                }\r\n                // Set the flag\r\n                slideRight = idx > i;\r\n                // Set the current slide\r\n                currentSlide = slide;\r\n                // Update the indicators\r\n                this._indicators[i].classList.remove(\"active\");\r\n                this._indicators[idx].classList.add(\"active\");\r\n                break;\r\n            }\r\n        }\r\n        // Move to the next slide\r\n        this.moveToSlide(currentSlide, nextSlide, slideRight);\r\n    };\r\n    // Pauses the slide\r\n    _Carousel.prototype.pause = function () {\r\n        // Set the flag\r\n        this._pauseFlag = true;\r\n    };\r\n    // Goes to the previous slide\r\n    _Carousel.prototype.previous = function () {\r\n        var currentSlide = null;\r\n        var options = this.props.options || {};\r\n        var prevSlide = null;\r\n        // Parse the slides\r\n        for (var i = 0; i < this._slides.length; i++) {\r\n            var slide = this._slides[i];\r\n            if (slide.isActive) {\r\n                // See if we are at the end and wrapping is disabled\r\n                if (i - 1 < 0 && options.wrap == false) {\r\n                    // Do nothing\r\n                    return;\r\n                }\r\n                // Set the slides\r\n                currentSlide = slide;\r\n                prevSlide = this._slides[i - 1] || this._slides[this._slides.length - 1];\r\n                // Update the indicators\r\n                this._indicators[i].classList.remove(\"active\");\r\n                (this._indicators[i - 1] || this._indicators[this._indicators.length - 1]).classList.add(\"active\");\r\n                break;\r\n            }\r\n        }\r\n        // Move to the next slide\r\n        this.moveToSlide(currentSlide, prevSlide, false);\r\n    };\r\n    // Enables/Disables the dark theme\r\n    _Carousel.prototype.setTheme = function (isDark) {\r\n        // See if we are setting the dark theme\r\n        if (isDark) {\r\n            // Set the theme\r\n            this.el.classList.add(\"carousel-dark\");\r\n        }\r\n        else {\r\n            // Set the theme\r\n            this.el.classList.remove(\"carousel-dark\");\r\n        }\r\n    };\r\n    // Unpauses the carousel\r\n    _Carousel.prototype.unpause = function () {\r\n        // Set the flag\r\n        this._pauseFlag = false;\r\n    };\r\n    return _Carousel;\r\n}(base_1.Base));\r\nexports.Carousel = function (props, template, slideTemplate) { return new _Carousel(props, template, slideTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/item.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/item.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CarouselItem = void 0;\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/templates.js\");\r\n/**\r\n * Carousel Item\r\n */\r\nvar CarouselItem = /** @class */ (function () {\r\n    // Constructor\r\n    function CarouselItem(props, template) {\r\n        if (template === void 0) { template = templates_1.HTMLItem; }\r\n        this._el = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._props = props;\r\n        // Create the item\r\n        var elItem = document.createElement(\"div\");\r\n        elItem.innerHTML = template;\r\n        this._el = elItem.firstChild;\r\n        // Configure the item\r\n        this.configure();\r\n    }\r\n    // Configure the item\r\n    CarouselItem.prototype.configure = function () {\r\n        // Set the attributes\r\n        this._props.isActive ? this._el.classList.add(\"active\") : null;\r\n        // Get the image elements\r\n        var captions = this._el.querySelector(\".carousel-caption\");\r\n        var img = this._el.querySelector(\"img\");\r\n        // See if we are rendering an image\r\n        if (this._props.imageUrl) {\r\n            // Set the image properties\r\n            img.alt = this._props.imageAlt == null ? \"\" : this._props.imageAlt;\r\n            img.src = this._props.imageUrl == null ? \"\" : this._props.imageUrl;\r\n            // Set the captions\r\n            captions.innerHTML = this._props.captions == null ? \"\" : this._props.captions;\r\n        }\r\n        else {\r\n            // Remove the elements\r\n            this._el.removeChild(captions);\r\n            this._el.removeChild(img);\r\n            // Append the content\r\n            common_1.appendContent(this._el, this._props.content);\r\n        }\r\n    };\r\n    Object.defineProperty(CarouselItem.prototype, \"el\", {\r\n        /**\r\n         * Public Properties\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CarouselItem.prototype, \"isActive\", {\r\n        // Returns true if this slide is active\r\n        get: function () { return this._el.classList.contains(\"active\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return CarouselItem;\r\n}());\r\nexports.CarouselItem = CarouselItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/templates.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/templates.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLItem = exports.HTML = void 0;\r\n// Carousel\r\nexports.HTML = \"\\n<div class=\\\"carousel slide\\\" data-bs-ride=\\\"carousel\\\">\\n    <ol class=\\\"carousel-indicators\\\"></ol>\\n    <div class=\\\"carousel-inner\\\"></div>\\n    <a class=\\\"carousel-control-prev\\\" href=\\\"#\\\" role=\\\"button\\\" data-bs-slide=\\\"prev\\\">\\n        <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n        <span class=\\\"visually-hidden\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" href=\\\"#\\\" role=\\\"button\\\" data-bs-slide=\\\"next\\\">\\n        <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n        <span class=\\\"visually-hidden\\\">Next</span>\\n    </a>\\n</div>\".trim();\r\n// Carousel Item\r\nexports.HTMLItem = \"\\n<div class=\\\"carousel-item\\\">\\n    <img class=\\\"d-block w-100\\\" />\\n    <div class=\\\"carousel-caption\\\"></div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/index.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckboxGroup = exports.CheckboxGroupTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/item.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/templates.js\");\r\n/**\r\n * Checkbox Group Types\r\n */\r\nvar CheckboxGroupTypes;\r\n(function (CheckboxGroupTypes) {\r\n    CheckboxGroupTypes[CheckboxGroupTypes[\"Checkbox\"] = 1] = \"Checkbox\";\r\n    CheckboxGroupTypes[CheckboxGroupTypes[\"Radio\"] = 2] = \"Radio\";\r\n    CheckboxGroupTypes[CheckboxGroupTypes[\"Switch\"] = 3] = \"Switch\";\r\n})(CheckboxGroupTypes = exports.CheckboxGroupTypes || (exports.CheckboxGroupTypes = {}));\r\n/**\r\n * Checkbox Group\r\n */\r\nvar _CheckboxGroup = /** @class */ (function (_super) {\r\n    __extends(_CheckboxGroup, _super);\r\n    // Constructor\r\n    function _CheckboxGroup(props, template, cbTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._checkboxes = null;\r\n        _this._initFl = false;\r\n        // Configure the checkbox group\r\n        _this.configure(cbTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        // Set the flag\r\n        _this._initFl = true;\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _CheckboxGroup.prototype.configure = function (cbTemplate) {\r\n        var colSize = this.props.colSize > 0 && this.props.colSize < 13 ? this.props.colSize : (this.props.label ? 10 : 12);\r\n        var renderRow = typeof (this.props.renderRow) === \"boolean\" ? this.props.renderRow : true;\r\n        // See if we are not rendering a row\r\n        if (!renderRow) {\r\n            // Remove the row class\r\n            this.el.classList.remove(\"row\");\r\n        }\r\n        // See if a label is defined\r\n        var label = this.el.querySelector(\"legend\");\r\n        if (label) {\r\n            if (this.props.label && this.props.hideLabel != true) {\r\n                // Add the label\r\n                renderRow ? label.classList.add(\"col-\" + (12 - colSize)) : null;\r\n                label.innerHTML = this.props.label;\r\n            }\r\n            else {\r\n                // Remove the label\r\n                this.el.removeChild(label);\r\n            }\r\n        }\r\n        // Get the group and configure the size\r\n        var group = this.el.querySelector(\"div\");\r\n        if (group) {\r\n            if (renderRow) {\r\n                // Set the class\r\n                group.classList.add(\"col-\" + colSize);\r\n            }\r\n            else {\r\n                // Remove the group element\r\n                this.el.removeChild(group);\r\n            }\r\n        }\r\n        // Render the checkboxes\r\n        this.renderItems(renderRow ? group : this.el, cbTemplate);\r\n    };\r\n    // Configure the events\r\n    _CheckboxGroup.prototype.configureEvents = function (item) {\r\n        var _this = this;\r\n        // See if we are not allowing multiple selections\r\n        if (this.props.multi != true) {\r\n            // Add a click event\r\n            item.checkbox.addEventListener(\"click\", function (ev) {\r\n                // Parse the checkboxes\r\n                for (var i = 0; i < _this._checkboxes.length; i++) {\r\n                    var checkbox = _this._checkboxes[i];\r\n                    // Ensure this item is checked\r\n                    if (!checkbox.isChecked) {\r\n                        continue;\r\n                    }\r\n                    // Skip this item\r\n                    if (checkbox.el.outerHTML == item.el.outerHTML) {\r\n                        continue;\r\n                    }\r\n                    // Toggle the checkbox\r\n                    checkbox.toggle();\r\n                }\r\n            });\r\n        }\r\n        // See if there is a change event defined\r\n        if (this.props.onChange) {\r\n            // Add a click event\r\n            item.checkbox.addEventListener(\"click\", function (ev) {\r\n                // Call the event\r\n                _this.props.onChange(_this.getValue(), ev);\r\n            });\r\n        }\r\n    };\r\n    // Render the checkboxes\r\n    _CheckboxGroup.prototype.renderItems = function (group, cbTemplate) {\r\n        // Clear the checkboxes\r\n        this._checkboxes = [];\r\n        // Set the items\r\n        var items = this.props.items;\r\n        if (items == null || typeof (items.length) !== \"number\") {\r\n            // Clear the items\r\n            items = [];\r\n            // Create an item based on the label\r\n            items.push({\r\n                label: this.props.label || \"\"\r\n            });\r\n        }\r\n        // See if this is a single checkbox\r\n        if (this.props.multi != true && items.length > 0) {\r\n            // See if this checkbox should be checked\r\n            if (typeof (this.props.value) === \"boolean\" && this.props.value) {\r\n                // Select the item\r\n                items[0].isSelected = true;\r\n            }\r\n        }\r\n        // Parse the items\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            // Create the checkbox\r\n            var checkbox = new item_1.CheckboxItem(item, this.props, cbTemplate);\r\n            this._checkboxes.push(checkbox);\r\n            group.appendChild(checkbox.el);\r\n            // Configure the events\r\n            this.configureEvents(checkbox);\r\n            // Execute the render event\r\n            this.props.onRender ? this.props.onRender(checkbox.el, item) : null;\r\n        }\r\n    };\r\n    /**\r\n     * Public Methods\r\n     */\r\n    // Method to get the value\r\n    _CheckboxGroup.prototype.getValue = function () {\r\n        var values = [];\r\n        // Parse the checkboxes\r\n        for (var i = 0; i < this._checkboxes.length; i++) {\r\n            var cb = this._checkboxes[i];\r\n            // See if it's checked\r\n            if (cb.isChecked) {\r\n                // Add the value\r\n                values.push(cb.props);\r\n            }\r\n        }\r\n        // Return the values\r\n        return this.props.multi ? values : values[0];\r\n    };\r\n    // Method to set the value\r\n    // Sets the dropdown value\r\n    _CheckboxGroup.prototype.setValue = function (value) {\r\n        // Ensure it's an array\r\n        var values = value ? (typeof (value.length) === \"number\" && typeof (value) !== \"string\" ? value : [value]) : [];\r\n        // Parse the items\r\n        for (var i = 0; i < this._checkboxes.length; i++) {\r\n            var checkbox = this._checkboxes[i];\r\n            // Toggle checked items\r\n            checkbox.isChecked ? checkbox.toggle() : null;\r\n        }\r\n        // Parse the values\r\n        for (var i = 0; i < values.length; i++) {\r\n            var value_1 = values[i];\r\n            // Parse the items\r\n            for (var j = 0; j < this._checkboxes.length; j++) {\r\n                var checkbox = this._checkboxes[j];\r\n                // Select this checkbox if the label matches\r\n                checkbox.props.label == value_1 ? checkbox.toggle() : null;\r\n            }\r\n        }\r\n        // See if a change event exists\r\n        if (this._initFl && this.props.onChange) {\r\n            // Execute the change event\r\n            this.props.onChange(this.getValue());\r\n        }\r\n    };\r\n    return _CheckboxGroup;\r\n}(base_1.Base));\r\nexports.CheckboxGroup = function (props, template, cbTemplate) { return new _CheckboxGroup(props, template, cbTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/item.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/item.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckboxItem = void 0;\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/templates.js\");\r\n/**\r\n * Checkbox Item\r\n */\r\nvar CheckboxItem = /** @class */ (function () {\r\n    // Constructor\r\n    function CheckboxItem(props, parent, template) {\r\n        this._el = null;\r\n        this._elCheckbox = null;\r\n        this._isSelected = null;\r\n        this._parent = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._parent = parent;\r\n        this._props = props;\r\n        // Create the element\r\n        var el = document.createElement(\"div\");\r\n        el.innerHTML = template || this.getHTML().trim();\r\n        this._el = el.firstChild;\r\n        // Configure the item\r\n        this.configure();\r\n        // Configure the events\r\n        this.configureEvents();\r\n    }\r\n    // Configure the item\r\n    CheckboxItem.prototype.configure = function () {\r\n        // Set the attributes\r\n        this._elCheckbox = this._el.querySelector(\"input\");\r\n        if (this._elCheckbox) {\r\n            this._elCheckbox.disabled = this._parent.isReadonly || this._props.isDisabled ? true : false;\r\n            // Default the title property for the checkbox\r\n            this._elCheckbox.title = this.props.label || this._parent.title || \"\";\r\n        }\r\n        // See if the title property is defined\r\n        if (this._parent.title) {\r\n            // Set the title\r\n            this._el.title = this._parent.title;\r\n        }\r\n        // See if the inline flag is set\r\n        if (this._parent.isInline) {\r\n            this._el.classList.add(\"form-check-inline\");\r\n        }\r\n        // Set the label\r\n        var label = this._el.querySelector(\"label\");\r\n        if (label) {\r\n            label.innerHTML = this._props.label || \"&nbsp;\";\r\n        }\r\n        // Ensure the checkbox exists\r\n        if (this._elCheckbox) {\r\n            // See if the \"isSelected\" property is set\r\n            if (typeof (this._props.isSelected) === \"boolean\") {\r\n                // Set the selected property\r\n                this._isSelected = this._props.isSelected;\r\n                this._elCheckbox.checked = this._isSelected;\r\n            }\r\n            // Else, see if a value exists for the group\r\n            else if (this._parent.value) {\r\n                // Parse the values\r\n                var values = typeof (this._parent.value) === \"string\" ? [this._parent.value] : this._parent.value;\r\n                for (var j = 0; j < values.length; j++) {\r\n                    // See if this item is selected\r\n                    if (values[j] == this._props.label) {\r\n                        // Select this item\r\n                        this._elCheckbox.checked = true;\r\n                    }\r\n                }\r\n                // Set the value\r\n                this._isSelected = this._elCheckbox.checked;\r\n            }\r\n            else {\r\n                // Set the default value\r\n                this._isSelected = this._props.isSelected ? true : false;\r\n                this._elCheckbox.checked = this._isSelected;\r\n            }\r\n        }\r\n    };\r\n    // Configures the events\r\n    CheckboxItem.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Add a click event\r\n        this._elCheckbox.addEventListener(\"click\", function (ev) {\r\n            // Update the value\r\n            _this._isSelected = !_this._isSelected;\r\n            _this._elCheckbox.checked = _this._isSelected;\r\n            // See if an event is defined\r\n            if (_this._props.onChange) {\r\n                // Call the event\r\n                _this._props.onChange(_this._isSelected ? _this._props : null, ev);\r\n            }\r\n        });\r\n    };\r\n    // Gets the HTML template\r\n    CheckboxItem.prototype.getHTML = function () {\r\n        // Return it based on the type\r\n        switch (this._props.type || this._parent.type) {\r\n            // Radio\r\n            case _1.CheckboxGroupTypes.Radio:\r\n                return templates_1.HTMLRadio;\r\n            // Switch\r\n            case _1.CheckboxGroupTypes.Switch:\r\n                return templates_1.HTMLSwitch;\r\n            // Default to a checkbox\r\n            default:\r\n                return templates_1.HTMLCheckbox;\r\n        }\r\n    };\r\n    Object.defineProperty(CheckboxItem.prototype, \"checkbox\", {\r\n        /**\r\n         * Public Properties\r\n         */\r\n        // The checkbox element\r\n        get: function () { return this._elCheckbox; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CheckboxItem.prototype, \"el\", {\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CheckboxItem.prototype, \"isChecked\", {\r\n        // Returns true if the checkbox is checked\r\n        get: function () {\r\n            // Get the checkbox\r\n            var cb = this._el.querySelector(\"input\");\r\n            // Return the value\r\n            return cb ? cb.checked : null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CheckboxItem.prototype, \"props\", {\r\n        // The component properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Toggles the checkbox\r\n    CheckboxItem.prototype.toggle = function () {\r\n        // Update the value\r\n        this._isSelected = !this._isSelected;\r\n        // Set the checkbox value\r\n        this._el.querySelector(\"input\").checked = this._isSelected;\r\n    };\r\n    return CheckboxItem;\r\n}());\r\nexports.CheckboxItem = CheckboxItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/templates.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/templates.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLSwitch = exports.HTMLRadio = exports.HTMLCheckbox = exports.HTML = void 0;\r\n// Checkbox\r\nexports.HTML = \"\\n<div class=\\\"row\\\">\\n    <legend class=\\\"col-form-label\\\"></legend>\\n    <div></div>\\n</div>\".trim();\r\n// Checkbox\r\nexports.HTMLCheckbox = \"\\n<div class=\\\"form-check\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" />\\n    <label class=\\\"form-check-label\\\"></label>\\n</div>\".trim();\r\n// Radio\r\nexports.HTMLRadio = \"\\n<div class=\\\"form-check\\\">\\n    <input type=\\\"radio\\\" class=\\\"form-check-input\\\" />\\n    <label class=\\\"form-check-label\\\"></label>\\n</div>\".trim();\r\n// Switch\r\nexports.HTMLSwitch = \"\\n<div class=\\\"form-check form-switch\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" />\\n    <label class=\\\"form-check-label\\\"></label>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassNames = void 0;\r\n/**\r\n * Class Names\r\n */\r\nvar ClassNames = /** @class */ (function () {\r\n    // Constructor\r\n    function ClassNames(items) {\r\n        this._items = null;\r\n        // Set the items\r\n        this._items = items || [];\r\n    }\r\n    // Gets a class name by type\r\n    // The enumerator value is equal to the index + 1\r\n    ClassNames.prototype.getByType = function (type) { return this._items[type - 1]; };\r\n    // Parse the class names\r\n    ClassNames.prototype.parse = function (callback) {\r\n        // Parse the items\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            // Call the callback\r\n            callback(this._items[i]);\r\n        }\r\n    };\r\n    return ClassNames;\r\n}());\r\nexports.ClassNames = ClassNames;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Collapse = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/templates.js\");\r\n/**\r\n * Collapse\r\n */\r\nvar _Collapse = /** @class */ (function (_super) {\r\n    __extends(_Collapse, _super);\r\n    // Constructor\r\n    function _Collapse(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Collapse.prototype.configure = function () {\r\n        // Set the id\r\n        var id = this.props.id || \"collapse\" + (new Date()).getTime();\r\n        // Set the attributes\r\n        this.el.id = id;\r\n        this.props.isMulti ? this.el.classList.add(\"multi-collapse\") : null;\r\n        // Append the content\r\n        var body = this.el.querySelector(\".card\");\r\n        common_1.appendContent(body, this.props.content);\r\n        // Execute the render event\r\n        this.props.onRender ? this.props.onRender(this.props, body) : null;\r\n        // See if we are expanding it by default\r\n        if (this.props.options && this.props.options.toggle) {\r\n            // Toggle the element\r\n            this.toggle();\r\n        }\r\n    };\r\n    Object.defineProperty(_Collapse.prototype, \"isExpanded\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // Returns true if the item is expanded\r\n        get: function () {\r\n            // See if the item is expanded\r\n            return this.el.classList.contains(\"collapsing\") || this.el.classList.contains(\"show\");\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Toggles the collapse\r\n    _Collapse.prototype.toggle = function () {\r\n        var _this = this;\r\n        // See if it's expanded\r\n        if (this.isExpanded) {\r\n            // Start the animation\r\n            this.el.style.height = this.el.getBoundingClientRect()[\"height\"] + \"px\";\r\n            setTimeout(function () {\r\n                _this.el.classList.add(\"collapsing\");\r\n                _this.el.classList.remove(\"collapse\");\r\n                _this.el.classList.remove(\"show\");\r\n                _this.el.style.height = \"\";\r\n            }, 10);\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                _this.el.classList.remove(\"collapsing\");\r\n                _this.el.classList.add(\"collapse\");\r\n            }, 250);\r\n        }\r\n        else {\r\n            // Start the animation\r\n            this.el.classList.remove(\"collapse\");\r\n            this.el.classList.add(\"collapsing\");\r\n            this.el.style.height = this.el.scrollHeight + \"px\";\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                _this.el.classList.remove(\"collapsing\");\r\n                _this.el.classList.add(\"collapse\");\r\n                _this.el.classList.add(\"show\");\r\n                _this.el.style.height = \"\";\r\n            }, 250);\r\n        }\r\n    };\r\n    return _Collapse;\r\n}(base_1.Base));\r\nexports.Collapse = function (props, template) { return new _Collapse(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/templates.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/templates.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"collapse\\\">\\n    <div class=\\\"card card-body\\\"></div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.show = exports.configureParent = exports.hide = exports.appendContent = void 0;\r\nexports.appendContent = function (elParent, content) {\r\n    // Return if the parent or content doesn't exist\r\n    if (elParent == null || content == null) {\r\n        return;\r\n    }\r\n    // See if this is a string\r\n    if (typeof (content) === \"string\" || typeof (content) === \"number\") {\r\n        // Set the html\r\n        elParent.innerHTML = content;\r\n    }\r\n    else {\r\n        // Append the content\r\n        elParent.appendChild(typeof (content) === \"function\" ? content() : content);\r\n    }\r\n};\r\nexports.hide = function (el) {\r\n    // Ensure the alert is hidden\r\n    if (el.classList.contains(\"d-none\")) {\r\n        return;\r\n    }\r\n    // Hide the alert\r\n    el.classList.add(\"d-none\");\r\n};\r\nexports.configureParent = function (component, parent) {\r\n    // Create the element\r\n    var el = document.createElement(\"div\");\r\n    el.appendChild(component);\r\n    // See if the parent element exists\r\n    if (parent) {\r\n        // Ensure the class list exists and it's not the body element\r\n        if (parent.classList && parent.tagName != \"BODY\") {\r\n            // Set the bootstrap class\r\n            parent.classList.contains(\"bs\") ? null : parent.classList.add(\"bs\");\r\n        }\r\n        // Append the elements\r\n        while (el.children.length > 0) {\r\n            parent.appendChild(el.children[0]);\r\n        }\r\n        // Update the element\r\n        el = parent;\r\n    }\r\n    else {\r\n        // Set the bootstrap class\r\n        el.classList.add(\"bs\");\r\n    }\r\n    // Return the parent element\r\n    return el;\r\n};\r\nexports.show = function (el) {\r\n    // Ensure the alert is visible\r\n    if (el.classList.contains(\"d-none\")) {\r\n        // Show the alert\r\n        el.classList.remove(\"d-none\");\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/formItem.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/formItem.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DropdownFormItem = void 0;\r\n/**\r\n * Dropdown Form Item\r\n */\r\nvar DropdownFormItem = /** @class */ (function () {\r\n    // Constructor\r\n    function DropdownFormItem(props, parent) {\r\n        this._el = null;\r\n        this._isSelected = false;\r\n        this._parent = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._parent = parent;\r\n        this._props = props;\r\n        // Configure the item\r\n        this.configure();\r\n    }\r\n    // Configures the item\r\n    DropdownFormItem.prototype.configure = function () {\r\n        // See if this is a divider\r\n        if (this._props.isDivider) {\r\n            // Create the divider\r\n            this._el = document.createElement(\"optgroup\");\r\n            this._el.className = this._props.className || \"\";\r\n            this._el.classList.add(\"dropdown-divider\");\r\n        }\r\n        // Else, see if this is a header\r\n        else if (this._props.isHeader) {\r\n            // Create the header\r\n            this._el = document.createElement(\"optgroup\");\r\n            this._el.className = this._props.className || \"\";\r\n            this._el.classList.add(\"dropdown-header\");\r\n            this._el.label = this._props.text == null ? \"\" : this._props.text;\r\n        }\r\n        else {\r\n            // Create the option\r\n            this._el = document.createElement(\"option\");\r\n            this._el.className = this._props.className || \"\";\r\n            this._el.disabled = this._props.isDisabled ? true : false;\r\n            this._el.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n            // See if the item is selected\r\n            if (this._props.isSelected) {\r\n                // Select the option\r\n                this._el.selected = true;\r\n            }\r\n            // Else, see if a value exists\r\n            else if (typeof (this._parent.value) !== \"undefined\") {\r\n                // Ensure it's an array\r\n                var values = this._parent.value && this._parent.value.length && typeof (this._parent.value) !== \"string\" ? this._parent.value : [this._parent.value];\r\n                // Parse the values\r\n                for (var i = 0; i < values.length; i++) {\r\n                    var value = typeof (this._props.value) === \"undefined\" ? this._props.text : this._props.value;\r\n                    // See if this item is selected\r\n                    if (value == values[i]) {\r\n                        // Select the option\r\n                        this._el.selected = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // Set the flag\r\n            this._isSelected = this._el.selected;\r\n        }\r\n    };\r\n    Object.defineProperty(DropdownFormItem.prototype, \"el\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropdownFormItem.prototype, \"isSelected\", {\r\n        // Returns true if the item is selected\r\n        get: function () { return this._isSelected; },\r\n        set: function (value) { this._isSelected = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropdownFormItem.prototype, \"props\", {\r\n        // The component properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Toggles the item selection\r\n    DropdownFormItem.prototype.toggle = function () {\r\n        // Skip the dividers, headers\r\n        if (this._props.isDivider || this._props.isHeader) {\r\n            return;\r\n        }\r\n        // Update the selected flag\r\n        this._isSelected = !this._isSelected;\r\n        var option = this._el;\r\n        // See if the value needs to be updated\r\n        if (option.selected != this._isSelected) {\r\n            // Update the option\r\n            option.selected = this._isSelected;\r\n        }\r\n    };\r\n    return DropdownFormItem;\r\n}());\r\nexports.DropdownFormItem = DropdownFormItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/formItem.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Dropdown = exports.DropdownTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar button_1 = __webpack_require__(/*! ../button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\");\r\nvar formItem_1 = __webpack_require__(/*! ./formItem */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/formItem.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/item.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/templates.js\");\r\n/**\r\n * Dropdown Types\r\n */\r\nexports.DropdownTypes = button_1.ButtonTypes;\r\n// Gets the template\r\nvar GetHTML = function (props) {\r\n    // See if we are rendering items for a form\r\n    if (props.formFl) {\r\n        return templates_1.HTMLForm;\r\n    }\r\n    // See if we are rendering for a nav bar\r\n    if (props.navFl) {\r\n        return templates_1.HTMLNavItem;\r\n    }\r\n    // See if we are rendering a split button dropdown\r\n    if (props.isSplit) {\r\n        return templates_1.HTMLSplit;\r\n    }\r\n    // Return the default template\r\n    return templates_1.HTML;\r\n};\r\n/**\r\n * Dropdown\r\n * @property props - The dropdown properties.\r\n */\r\nvar _Dropdown = /** @class */ (function (_super) {\r\n    __extends(_Dropdown, _super);\r\n    // Constructor\r\n    function _Dropdown(props, template) {\r\n        if (template === void 0) { template = GetHTML(props); }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._initFl = false;\r\n        _this._items = null;\r\n        // Handles the click event outside of the menu to close it\r\n        _this.handleClick = function (ev) {\r\n            // See if we clicked within the menu\r\n            if (!ev.composedPath().includes(_this._elMenu)) {\r\n                if (_this.isVisible) {\r\n                    // Hide the menu\r\n                    _this.toggle();\r\n                }\r\n                else {\r\n                    // Remove this event (This shouldn't happen, but to be safe)\r\n                    document.body.removeEventListener(\"click\", _this.handleClick);\r\n                }\r\n            }\r\n        };\r\n        // Configure the dropdown\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        // Set the flag\r\n        _this._initFl = true;\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Dropdown.prototype.configure = function () {\r\n        // See if this is for a form\r\n        if (this.props.formFl) {\r\n            // Configure the dropdown for a form\r\n            this.configureForm();\r\n        }\r\n        // Else, see if this is for a nav bar\r\n        else if (this.props.navFl) {\r\n            // Configure the dropdown for a nav bar\r\n            this.configureNavBar();\r\n        }\r\n        else {\r\n            // Configure the dropdown\r\n            this.configureDefault();\r\n        }\r\n        // Render the items\r\n        this.renderItems();\r\n        // Set the menu element\r\n        this._elMenu = this.el.querySelector(\".dropdown-menu\");\r\n        if (this._elMenu) {\r\n            // See if we are only rendering a menu\r\n            if (this.props.menuOnly) {\r\n                // Update the element\r\n                this.el = this._elMenu;\r\n            }\r\n            else {\r\n                // Hide it by default\r\n                this._elMenu.style.display = \"none\";\r\n            }\r\n        }\r\n        // Set the dark theme\r\n        this.props.isDark ? this.setTheme(true) : null;\r\n    };\r\n    // Configures the dropdown\r\n    _Dropdown.prototype.configureDefault = function () {\r\n        // Set the attributes\r\n        this.props.title ? this.el.title = this.props.title : null;\r\n        this.props.dropLeft ? this.el.classList.add(\"dropleft\") : null;\r\n        this.props.dropRight ? this.el.classList.add(\"dropright\") : null;\r\n        this.props.dropUp ? this.el.classList.add(\"dropup\") : null;\r\n        // Set the type\r\n        var btnType = button_1.ButtonClassNames.getByType(this.props.type) || button_1.ButtonClassNames.getByType(exports.DropdownTypes.Primary);\r\n        // See if this is a split button\r\n        if (this.props.isSplit) {\r\n            // Update a label\r\n            var label = this.el.querySelector(\"button\");\r\n            if (label) {\r\n                label.classList.add(btnType);\r\n                label.disabled = this.props.isReadonly ? true : false;\r\n                label.innerHTML = this.props.label == null ? \"\" : this.props.label;\r\n                // Set the click event to disable the postback\r\n                label.addEventListener(\"click\", function (ev) { ev.preventDefault(); });\r\n            }\r\n        }\r\n        else {\r\n            // Update the label\r\n            var label = this.el.querySelector(\".dropdown-toggle\");\r\n            if (label) {\r\n                label.innerHTML = this.props.label == null ? \"\" : this.props.label;\r\n            }\r\n        }\r\n        // Update the dropdown\r\n        var toggle = this.el.querySelector(\".dropdown-toggle\");\r\n        if (toggle) {\r\n            toggle.classList.add(btnType);\r\n            toggle.disabled = this.props.isReadonly ? true : false;\r\n        }\r\n        // See if we are rendering the menu only\r\n        var menu = this.el.querySelector(\".dropdown-menu\");\r\n        if (menu) {\r\n            // See if we are rendering the menu only\r\n            if (this.props.menuOnly) {\r\n                // Update the menu\r\n                this.props.id ? menu.id = this.props.id : null;\r\n                this.props.className ? menu.classList.add(this.props.className) : null;\r\n            }\r\n            else {\r\n                // Update the menu\r\n                this.props.id ? menu.setAttribute(\"aria-labelledby\", this.props.id) : null;\r\n            }\r\n            // See if a button class name exists\r\n            var classNames = (this.props.btnClassName || \"\").split(' ');\r\n            for (var i = 0; i < classNames.length; i++) {\r\n                // Ensure the class name exists\r\n                var className = classNames[i];\r\n                if (className) {\r\n                    // Add the class name\r\n                    (this.props.menuOnly ? menu : toggle).classList.add(className);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // Configure the events\r\n    _Dropdown.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Get the toggle\r\n        var toggle = this.el.querySelector(\".dropdown-toggle\");\r\n        if (toggle) {\r\n            // Set the click event to toggle the menu\r\n            toggle.addEventListener(\"click\", function (ev) { _this.toggle(); });\r\n        }\r\n        // See if this is a select element and a change event exists\r\n        var menu = this.el.querySelector(\"select\");\r\n        if (menu) {\r\n            // Add a change event\r\n            menu.addEventListener(\"change\", function (ev) {\r\n                // See if multiple options are allowed\r\n                if (_this.props.multi == true) {\r\n                    // Parse the items\r\n                    for (var i = 0; i < _this._items.length; i++) {\r\n                        var item = _this._items[i];\r\n                        // Update the flag\r\n                        item.isSelected = item.el.selected;\r\n                    }\r\n                    // Call the change event\r\n                    _this.props.onChange ? _this.props.onChange(_this.getValue(), ev) : null;\r\n                }\r\n                else {\r\n                    // Parse the items\r\n                    for (var i = 0; i < _this._items.length; i++) {\r\n                        var item = _this._items[i];\r\n                        var selectedValue = (ev.target.value || \"\").trim();\r\n                        // See if this item was selected\r\n                        if (selectedValue == (item.props.text || \"\").trim()) {\r\n                            // Ensure this item is selected\r\n                            if (!item.isSelected) {\r\n                                item.toggle();\r\n                            }\r\n                            // Call the change event\r\n                            _this.props.onChange ? _this.props.onChange(item.props, ev) : null;\r\n                        }\r\n                        else {\r\n                            // Unselect the other values\r\n                            if (item.isSelected) {\r\n                                item.toggle();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else if (this._elMenu) {\r\n            // Add a click event to show the dropdown\r\n            this._elMenu.addEventListener(\"click\", function () {\r\n                // Show the menu\r\n                _this.isVisible ? null : _this.toggle();\r\n            });\r\n        }\r\n    };\r\n    // Configures the dropdown for a form\r\n    _Dropdown.prototype.configureForm = function () {\r\n        // Configure the label\r\n        var elLabel = this.el.querySelector(\"label\");\r\n        if (elLabel) {\r\n            var label = this.props.label == null ? \"\" : this.props.label;\r\n            if (label) {\r\n                // Set the label\r\n                elLabel.innerHTML = label;\r\n            }\r\n            else {\r\n                // Remove the label\r\n                elLabel.parentNode.removeChild(elLabel);\r\n            }\r\n        }\r\n        // Update the dropdown\r\n        var dropdown = this.el.querySelector(\"select\");\r\n        if (dropdown) {\r\n            dropdown.className = this.props.className || \"\";\r\n            dropdown.classList.add(\"form-select\");\r\n            dropdown.disabled = this.props.isReadonly ? true : false;\r\n            dropdown.multiple = this.props.multi ? true : false;\r\n            this.props.title ? dropdown.title = this.props.title : null;\r\n        }\r\n    };\r\n    // Configure the item events\r\n    _Dropdown.prototype.configureItemEvents = function (item) {\r\n        var _this = this;\r\n        // Ensure this isn't a header/divider\r\n        if (item.props.isDivider || item.props.isHeader) {\r\n            return;\r\n        }\r\n        // See if multi selections is not allowed\r\n        if (this.props.multi != true) {\r\n            // Add a click event\r\n            item.el.addEventListener(\"click\", function (ev) {\r\n                // See if an item was selected, and is disabled\r\n                if (item.props.isDisabled == true) {\r\n                    // Ignore the click event\r\n                    return;\r\n                }\r\n                // Parse the items\r\n                for (var i = 0; i < _this._items.length; i++) {\r\n                    var selectedItem = _this._items[i];\r\n                    // Skip this item\r\n                    if (item.el.innerHTML == selectedItem.el.innerHTML) {\r\n                        continue;\r\n                    }\r\n                    // Ensure this item is selected\r\n                    if (selectedItem.isSelected) {\r\n                        // Unselect the item\r\n                        selectedItem.toggle();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        // Add a click event\r\n        item.el.addEventListener(\"click\", function (ev) {\r\n            // Prevent other events to occur\r\n            ev.stopPropagation();\r\n            // Toggle the menu if it's visible\r\n            _this.isVisible ? _this.toggle() : null;\r\n            // Execute the event\r\n            _this.props.onChange ? _this.props.onChange(_this.getValue(), ev) : null;\r\n        });\r\n    };\r\n    // Configures the dropdown for a nav bar\r\n    _Dropdown.prototype.configureNavBar = function () {\r\n        // Update the link\r\n        var link = this.el.querySelector(\"a\");\r\n        if (link) {\r\n            link.id = (\"navbarDDL\" + (this.props.label == null ? \"\" : this.props.label)).replace(/ /g, '');\r\n            this.props.title ? link.title = this.props.title : null;\r\n            this.props.isReadonly ? link.setAttribute(\"aria-disabled\", \"true\") : null;\r\n            link.innerHTML = this.props.label == null ? \"\" : this.props.label;\r\n        }\r\n        // See if we are rendering the menu only\r\n        var menu = this.el.querySelector(\".dropdown-menu\");\r\n        if (menu) {\r\n            if (this.props.menuOnly) {\r\n                // Update the menu\r\n                this.props.id ? menu.id = this.props.id : null;\r\n                menu.className = this.props.className ? this.props.className : \"\";\r\n                menu.classList.add(\"dropdown-menu\");\r\n            }\r\n            else {\r\n                // Update the menu\r\n                this.props.id ? menu.setAttribute(\"aria-labelledby\", this.props.id) : null;\r\n            }\r\n        }\r\n    };\r\n    // Renders the items\r\n    _Dropdown.prototype.renderItems = function () {\r\n        // Clear the items\r\n        this._items = [];\r\n        // Get the menu\r\n        var menu = this.el.querySelector(\".dropdown-menu\") || this.el.querySelector(\"select\");\r\n        if (menu) {\r\n            var isForm = menu.nodeName == \"SELECT\";\r\n            // Parse the items\r\n            var items = this.props.items || [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                // Create the item\r\n                var item = isForm ? new formItem_1.DropdownFormItem(items[i], this.props) : new item_1.DropdownItem(items[i], this.props);\r\n                this._items.push(item);\r\n                // See if this isn't for a form\r\n                if (!isForm) {\r\n                    // Configure the item events\r\n                    this.configureItemEvents(item);\r\n                }\r\n                // Add the item to the menu\r\n                menu.appendChild(item.el);\r\n            }\r\n            // See if this is a form\r\n            if (isForm) {\r\n                // Ensure the selected values match the index\r\n                var idx = menu.selectedIndex;\r\n                if (this._items[idx] && this._items[idx].isSelected == false) {\r\n                    // Select the item\r\n                    this._items[idx].toggle();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Disables the button\r\n    _Dropdown.prototype.disable = function () {\r\n        // Get the buttons\r\n        var buttons = this.el.querySelectorAll(\"button\");\r\n        for (var i = 0; i < buttons.length; i++) {\r\n            // Disable the button\r\n            buttons[i].disabled = true;\r\n        }\r\n    };\r\n    // Enables the button\r\n    _Dropdown.prototype.enable = function () {\r\n        // Get the buttons\r\n        var buttons = this.el.querySelectorAll(\"button\");\r\n        for (var i = 0; i < buttons.length; i++) {\r\n            // Enable the button\r\n            buttons[i].disabled = false;\r\n        }\r\n    };\r\n    // Gets the value\r\n    _Dropdown.prototype.getValue = function () {\r\n        var values = [];\r\n        // Parse the items\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item = this._items[i];\r\n            // See if this item is selected\r\n            if (item.isSelected) {\r\n                // Add the value\r\n                values.push(item.props);\r\n            }\r\n        }\r\n        // Return the value\r\n        return this.props.multi ? values : values[0];\r\n    };\r\n    Object.defineProperty(_Dropdown.prototype, \"isMulti\", {\r\n        // Returns true if the dropdown allows multiple selections\r\n        get: function () { return this.props.multi; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_Dropdown.prototype, \"isVisible\", {\r\n        // Returns true if the dropdown menu is visible\r\n        get: function () { return this._elMenu && this._elMenu.style.display != \"none\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Sets the dropdown items\r\n    _Dropdown.prototype.setItems = function (newItems) {\r\n        if (newItems === void 0) { newItems = []; }\r\n        // Update the properties\r\n        this.props.items = newItems;\r\n        // Get the menu\r\n        var menu = this.el.querySelector(\".dropdown-menu\") || this.el.querySelector(\"select\");\r\n        if (menu) {\r\n            // Clear the menu\r\n            while (menu.firstChild) {\r\n                menu.removeChild(menu.firstChild);\r\n            }\r\n            // Render the items\r\n            this.renderItems();\r\n        }\r\n    };\r\n    // Enables/Disables the dark theme\r\n    _Dropdown.prototype.setTheme = function (isDark) {\r\n        // Get the menu\r\n        // See if we are setting the dark theme\r\n        if (isDark) {\r\n            // Set the theme\r\n            this._elMenu.classList.add(\"dropdown-menu-dark\");\r\n        }\r\n        else {\r\n            // Set the theme\r\n            this._elMenu.classList.remove(\"dropdown-menu-dark\");\r\n        }\r\n    };\r\n    // Sets the button type\r\n    _Dropdown.prototype.setType = function (ddlType) {\r\n        // Parse the element types to search for\r\n        var elTypes = [\"button\", \".dropdown-toggle\"];\r\n        var _loop_1 = function (i) {\r\n            var el = this_1.el.querySelector(elTypes[i]);\r\n            if (el) {\r\n                // Parse the class names\r\n                button_1.ButtonClassNames.parse(function (className) {\r\n                    // Remove the class names\r\n                    el.classList.remove(className);\r\n                });\r\n                // Set the class name\r\n                var className = button_1.ButtonClassNames.getByType(ddlType);\r\n                className ? el.classList.add(className) : null;\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < elTypes.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    // Sets the dropdown value\r\n    _Dropdown.prototype.setValue = function (value) {\r\n        // Ensure it's an array\r\n        var values = value == null ? [] : (typeof (value.length) === \"number\" && typeof (value) !== \"string\" ? value : [value]);\r\n        // Parse the items\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item = this._items[i];\r\n            // Toggle checked items\r\n            item.isSelected ? item.toggle() : null;\r\n        }\r\n        // Parse the values\r\n        for (var i = 0; i < values.length; i++) {\r\n            var value_1 = values[i];\r\n            var ddlText = value_1 ? value_1.text || value_1 : null;\r\n            var ddlValue = value_1 ? value_1.value || value_1 : null;\r\n            // Parse the items\r\n            for (var j = 0; j < this._items.length; j++) {\r\n                var item = this._items[j];\r\n                // See if this is the target item\r\n                if (typeof (item.props.value) === \"undefined\") {\r\n                    // Select this item if the text matches\r\n                    item.props.text == ddlText ? item.toggle() : null;\r\n                }\r\n                else {\r\n                    // Select this item if the value matches\r\n                    item.props.value == ddlValue ? item.toggle() : null;\r\n                }\r\n            }\r\n        }\r\n        // See if this is a form\r\n        var ddl = this.el.querySelector(\"select\");\r\n        if (ddl) {\r\n            // Ensure the selected values match the index\r\n            if (this._items[ddl.selectedIndex] && this._items[ddl.selectedIndex].isSelected == false) {\r\n                // Select the item\r\n                this._items[ddl.selectedIndex].toggle();\r\n            }\r\n        }\r\n        // See if a change event exists\r\n        if (this._initFl && this.props.onChange) {\r\n            // Execute the change event\r\n            this.props.onChange(this.getValue());\r\n        }\r\n    };\r\n    // Toggles the menu\r\n    _Dropdown.prototype.toggle = function () {\r\n        var _this = this;\r\n        // Get the menu element\r\n        var elMenu = this.el.querySelector(\".dropdown-menu\");\r\n        if (elMenu) {\r\n            // See if we are showing the menu\r\n            if (elMenu.style.display == \"none\") {\r\n                // Show the menu\r\n                elMenu.style.display = \"block\";\r\n                // Add an event handler\r\n                setTimeout(function () { document.addEventListener(\"click\", _this.handleClick); }, 10);\r\n            }\r\n            else {\r\n                // Hide the menu\r\n                elMenu.style.display = \"none\";\r\n                // Remove the event handler\r\n                document.removeEventListener(\"click\", this.handleClick);\r\n            }\r\n        }\r\n    };\r\n    return _Dropdown;\r\n}(base_1.Base));\r\nexports.Dropdown = function (props, template) { return new _Dropdown(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/item.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/item.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DropdownItem = void 0;\r\n/**\r\n * Dropdown Item\r\n */\r\nvar DropdownItem = /** @class */ (function () {\r\n    // Constructor\r\n    function DropdownItem(props, parent) {\r\n        this._el = null;\r\n        this._elLink = null;\r\n        this._isSelected = false;\r\n        this._parent = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._parent = parent;\r\n        this._props = props;\r\n        // Configure the item\r\n        this.configure();\r\n        // Configure the events\r\n        this.configureEvents();\r\n    }\r\n    // Configures the item\r\n    DropdownItem.prototype.configure = function () {\r\n        // See if this is a divider\r\n        if (this._props.isDivider) {\r\n            // Add the divider\r\n            this._el = document.createElement(\"div\");\r\n            this._el.className = this._props.className || \"\";\r\n            this._el.classList.add(\"dropdown-divider\");\r\n            this._props.isDisabled ? this._el.classList.add(\"disabled\") : null;\r\n        }\r\n        // Else, see if this is a header\r\n        else if (this._props.isHeader) {\r\n            // Add the header\r\n            this._el = document.createElement(\"h6\");\r\n            this._el.className = this._props.className || \"\";\r\n            this._el.classList.add(\"dropdown-header\");\r\n            this._props.isDisabled ? this._el.classList.add(\"disabled\") : null;\r\n            this._el.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n        }\r\n        else {\r\n            // See if we are rendering this in a nav bar\r\n            if (this._parent.navFl) {\r\n                // Create the link\r\n                this._elLink = document.createElement(\"a\");\r\n                this._elLink.className = this._props.className || \"\";\r\n                this._elLink.classList.add(\"dropdown-item\");\r\n                this._props.isDisabled ? this._elLink.classList.add(\"disabled\") : null;\r\n                this._props.target ? this._elLink.setAttribute(\"data-bs-target\", this._props.target) : null;\r\n                this._props.toggle ? this._elLink.setAttribute(\"data-bs-toggle\", this._props.toggle) : null;\r\n                this._elLink.href = this._props.href || \"#\";\r\n                this._elLink.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n                // Add the item\r\n                this._el = document.createElement(\"li\");\r\n                this._el.appendChild(this._elLink);\r\n            }\r\n            else {\r\n                // Create the item\r\n                this._elLink = document.createElement(\"a\");\r\n                this._elLink.className = this._props.className || \"\";\r\n                this._elLink.classList.add(\"dropdown-item\");\r\n                this._props.isDisabled ? this._elLink.classList.add(\"disabled\") : null;\r\n                this._props.target ? this._elLink.setAttribute(\"data-bs-target\", this._props.target) : null;\r\n                this._props.toggle ? this._elLink.setAttribute(\"data-bs-toggle\", this._props.toggle) : null;\r\n                this._elLink.href = this._props.href || \"#\";\r\n                this._elLink.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n                // See if this item is selected\r\n                if (this._props.isSelected) {\r\n                    // Select the item\r\n                    this._elLink.classList.add(\"active\");\r\n                }\r\n                // Else, see if a value exists\r\n                else if (typeof (this._parent.value) !== \"undefined\") {\r\n                    // Ensure it's an array\r\n                    var values = this._parent.value && this._parent.value.length && typeof (this._parent.value) !== \"string\" ? this._parent.value : [this._parent.value];\r\n                    // Parse the values\r\n                    for (var j = 0; j < values.length; j++) {\r\n                        var value = typeof (this._props.value) === \"undefined\" ? this._props.text : this._props.value;\r\n                        // See if this item is selected\r\n                        if (value == values[j]) {\r\n                            // Select the item\r\n                            this._elLink.classList.add(\"active\");\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // Set the flag\r\n                this._isSelected = this._elLink.classList.contains(\"active\");\r\n                // Add the item\r\n                this._el = document.createElement(\"li\");\r\n                this._el.appendChild(this._elLink);\r\n            }\r\n        }\r\n    };\r\n    // Configures the events\r\n    DropdownItem.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Set the click event\r\n        this._el.addEventListener(\"click\", function (ev) {\r\n            // Prevent the page from moving to the top\r\n            ev.preventDefault();\r\n            // Toggle the item\r\n            _this.toggle();\r\n            // See if there is a click event defined\r\n            if (_this._props.onClick) {\r\n                // Execute the event\r\n                _this._props.onClick(_this._props, ev);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(DropdownItem.prototype, \"el\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropdownItem.prototype, \"isSelected\", {\r\n        // Returns true if the item is selected\r\n        get: function () { return this._isSelected; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropdownItem.prototype, \"props\", {\r\n        // The component properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Toggles the item selection\r\n    DropdownItem.prototype.toggle = function () {\r\n        // Skip the dividers, headers and nav items\r\n        if (this._props.isDivider || this._props.isHeader || this._parent.navFl) {\r\n            return;\r\n        }\r\n        // Update the selected flag\r\n        this._isSelected = !this._isSelected;\r\n        // Update the class\r\n        if (this._isSelected) {\r\n            // Add the active class\r\n            (this._elLink || this._el).classList.add(\"active\");\r\n        }\r\n        else {\r\n            // Remove the active class\r\n            (this._elLink || this._el).classList.remove(\"active\");\r\n        }\r\n    };\r\n    return DropdownItem;\r\n}());\r\nexports.DropdownItem = DropdownItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/templates.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/templates.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLSplit = exports.HTMLNavItem = exports.HTMLForm = exports.HTML = void 0;\r\n// Dropdown\r\nexports.HTML = \"\\n<div class=\\\"dropdown\\\">\\n    <button class=\\\"btn dropdown-toggle\\\" type=\\\"button\\\" data-bs-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n        aria-expanded=\\\"false\\\"></button>\\n    <ul class=\\\"dropdown-menu\\\"></ul>\\n</div>\".trim();\r\n// Form\r\nexports.HTMLForm = \"\\n<div>\\n    <label></label>\\n    <select class=\\\"form-select\\\"></select>\\n</div>\".trim();\r\n// Navigation\r\nexports.HTMLNavItem = \"\\n<li class=\\\"nav-item dropdown\\\">\\n    <a class=\\\"nav-link dropdown-toggle\\\" data-bs-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"></a>\\n    <ul class=\\\"dropdown-menu\\\"></ul>\\n</li>\".trim();\r\n// Split\r\nexports.HTMLSplit = \"\\n<div class=\\\"btn-group\\\">\\n    <button type=\\\"button\\\" class=\\\"btn\\\"></button>\\n    <button class=\\\"btn dropdown-toggle dropdown-toggle-split\\\" type=\\\"button\\\" data-bs-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n        aria-expanded=\\\"false\\\">\\n        <span class=\\\"visually-hidden\\\">Toggle Dropdown</span>\\n    </button>\\n    <ul class=\\\"dropdown-menu\\\"></ul>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/control.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/control.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormControl = void 0;\r\nvar checkboxGroup_1 = __webpack_require__(/*! ../checkboxGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/index.js\");\r\nvar custom_1 = __webpack_require__(/*! ./custom */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/custom.js\");\r\nvar dropdown_1 = __webpack_require__(/*! ../dropdown */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/index.js\");\r\nvar inputGroup_1 = __webpack_require__(/*! ../inputGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/index.js\");\r\nvar listBox_1 = __webpack_require__(/*! ../listBox */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/index.js\");\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/index.js\");\r\n/**\r\n * Form Control\r\n */\r\nvar FormControl = /** @class */ (function () {\r\n    // Constructor\r\n    function FormControl(props, formProps, elLabel) {\r\n        var _this = this;\r\n        this._cb = null;\r\n        this._custom = null;\r\n        this._el = null;\r\n        this._elLabel = null;\r\n        this._formProps = null;\r\n        this._ddl = null;\r\n        this._isRendered = false;\r\n        this._lb = null;\r\n        this._tb = null;\r\n        // Save the parameters\r\n        this._formProps = formProps;\r\n        this._props = props;\r\n        this._elLabel = elLabel;\r\n        // See if there is a rendering event\r\n        if (typeof (this._props.onControlRendering) === \"function\") {\r\n            // Call the event and see if a promise is returned\r\n            var returnVal = this._props.onControlRendering(Object.assign({}, this._props));\r\n            if (returnVal && typeof (returnVal[\"then\"]) === \"function\") {\r\n                // Wait for it to complete\r\n                returnVal[\"then\"](function (newProps) {\r\n                    // Update the properties\r\n                    _this._props = newProps || _this._props;\r\n                    // Create the control\r\n                    _this.create();\r\n                });\r\n            }\r\n            else {\r\n                // Create the control\r\n                this.create();\r\n            }\r\n        }\r\n        else {\r\n            // Create the control\r\n            this.create();\r\n        }\r\n    }\r\n    // Configure the control\r\n    FormControl.prototype.configure = function () {\r\n        // Ensure a control was created\r\n        if (this.control) {\r\n            // Set the element\r\n            this._el = this.control.el;\r\n            // See if an error message exists\r\n            if (this._props.errorMessage) {\r\n                // Get the group\r\n                var elGroup = this._el.querySelector(\".input-group\") || this._el.querySelector(\".form-check:last-child\");\r\n                if (elGroup) {\r\n                    // Add the error message\r\n                    var elErrorMessage = document.createElement(\"div\");\r\n                    elErrorMessage.className = \"invalid-feedback\";\r\n                    elErrorMessage.innerHTML = this._props.errorMessage;\r\n                    elGroup.appendChild(elErrorMessage);\r\n                }\r\n            }\r\n            // See if an element was defined to render to\r\n            if (this._props.el) {\r\n                // Append the control to the element\r\n                this._props.el.appendChild(this._el);\r\n            }\r\n            // See if the label is set\r\n            if (this._elLabel && this._formProps.isFloating && this._el.id) {\r\n                // Set the attributes\r\n                this._elLabel.setAttribute(\"for\", this._el.id);\r\n            }\r\n        }\r\n    };\r\n    // Creates the control\r\n    FormControl.prototype.create = function () {\r\n        var _this = this;\r\n        // Parse the custom classes to add\r\n        var className = [(this._props.className || \"\"), (this._props.controlClassName || \"\")].join(\" \").trim();\r\n        // Render the control based on the type\r\n        switch (this._props.type) {\r\n            // Checkbox\r\n            case _1.FormControlTypes.Checkbox:\r\n                var cbProps = this._props;\r\n                // Add the checkbox group\r\n                this._cb = checkboxGroup_1.CheckboxGroup({\r\n                    className: className,\r\n                    hideLabel: true,\r\n                    isInline: cbProps.isInline,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: cbProps.items,\r\n                    onChange: cbProps.onChange,\r\n                    title: this._props.title,\r\n                    type: checkboxGroup_1.CheckboxGroupTypes.Checkbox,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Color Picker\r\n            case _1.FormControlTypes.ColorPicker:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.ColorPicker,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Datalist\r\n            case _1.FormControlTypes.Datalist:\r\n                // Add the dropdown\r\n                this._ddl = dropdown_1.Dropdown({\r\n                    className: className,\r\n                    formFl: true,\r\n                    id: this._props.id,\r\n                    isDatalist: true,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    onChange: this._props.onChange,\r\n                    title: this._props.title,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Dropdown\r\n            case _1.FormControlTypes.Dropdown:\r\n                // Add the dropdown\r\n                this._ddl = dropdown_1.Dropdown({\r\n                    className: className,\r\n                    formFl: true,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    onChange: this._props.onChange,\r\n                    title: this._props.title,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Email\r\n            case _1.FormControlTypes.Email:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.Email,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // File\r\n            case _1.FormControlTypes.File:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.File,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // List Box\r\n            case _1.FormControlTypes.ListBox:\r\n                // Add the list box\r\n                this._lb = listBox_1.ListBox({\r\n                    id: this._props.name,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Multi-Checkbox\r\n            case _1.FormControlTypes.MultiCheckbox:\r\n                var cbMultiProps = this._props;\r\n                // Add the checkbox group\r\n                this._cb = checkboxGroup_1.CheckboxGroup({\r\n                    className: className,\r\n                    hideLabel: true,\r\n                    isInline: cbMultiProps.isInline,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: cbMultiProps.items,\r\n                    multi: true,\r\n                    onChange: cbMultiProps.onChange,\r\n                    title: this._props.title,\r\n                    type: checkboxGroup_1.CheckboxGroupTypes.Checkbox,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Multi-Dropdown\r\n            case _1.FormControlTypes.MultiDropdown:\r\n                // Add the dropdown\r\n                this._ddl = dropdown_1.Dropdown({\r\n                    className: className,\r\n                    formFl: true,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    multi: true,\r\n                    onChange: this._props.onChange,\r\n                    title: this._props.title,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Multi-List Box\r\n            case _1.FormControlTypes.MultiListBox:\r\n                // Add the list box\r\n                this._lb = listBox_1.ListBox({\r\n                    id: this._props.name,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    multi: true,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Multi-Radio\r\n            case _1.FormControlTypes.MultiRadio:\r\n                // Add the checkbox group\r\n                this._cb = checkboxGroup_1.CheckboxGroup({\r\n                    className: className,\r\n                    hideLabel: true,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    multi: true,\r\n                    onChange: this._props.onChange,\r\n                    title: this._props.title,\r\n                    type: checkboxGroup_1.CheckboxGroupTypes.Radio,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Multi-Switch\r\n            case _1.FormControlTypes.MultiSwitch:\r\n                // Add the checkbox group\r\n                this._cb = checkboxGroup_1.CheckboxGroup({\r\n                    className: className,\r\n                    hideLabel: true,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    multi: true,\r\n                    onChange: this._props.onChange,\r\n                    title: this._props.title,\r\n                    type: checkboxGroup_1.CheckboxGroupTypes.Switch,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Password\r\n            case _1.FormControlTypes.Password:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.Password,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Radio\r\n            case _1.FormControlTypes.Radio:\r\n                // Add the checkbox group\r\n                this._cb = checkboxGroup_1.CheckboxGroup({\r\n                    className: className,\r\n                    hideLabel: true,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    onChange: this._props.onChange,\r\n                    title: this._props.title,\r\n                    type: checkboxGroup_1.CheckboxGroupTypes.Radio,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Range\r\n            case _1.FormControlTypes.Range:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    min: this._props.min || 0,\r\n                    max: this._props.max || 100,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    step: this._props.step,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.Range,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Read Only\r\n            case _1.FormControlTypes.Readonly:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: true,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.TextField,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Switch\r\n            case _1.FormControlTypes.Switch:\r\n                // Add the checkbox group\r\n                this._cb = checkboxGroup_1.CheckboxGroup({\r\n                    className: className,\r\n                    hideLabel: true,\r\n                    isReadonly: this._props.isReadonly,\r\n                    items: this._props.items,\r\n                    onChange: this._props.onChange,\r\n                    title: this._props.title,\r\n                    type: checkboxGroup_1.CheckboxGroupTypes.Switch,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Text Area\r\n            case _1.FormControlTypes.TextArea:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    rows: this._props.rows,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.TextArea,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Text Field\r\n            case _1.FormControlTypes.TextField:\r\n                // Add the input\r\n                this._tb = inputGroup_1.InputGroup({\r\n                    className: className,\r\n                    id: this._props.id,\r\n                    isReadonly: this._props.isReadonly,\r\n                    onChange: this._props.onChange,\r\n                    placeholder: this._props.placeholder,\r\n                    title: this._props.title,\r\n                    type: inputGroup_1.InputGroupTypes.TextField,\r\n                    value: this._props.value\r\n                });\r\n                break;\r\n            // Custom Type\r\n            default:\r\n                // Create the default element\r\n                this._el = document.createElement(\"div\");\r\n                this._el.className = className;\r\n                // See if there is a custom type\r\n                var custom = custom_1.CustomControls.getByType(this._props.type);\r\n                if (custom && typeof (custom) === \"function\") {\r\n                    // Execute the event\r\n                    this._custom = custom(this._props);\r\n                }\r\n                break;\r\n        }\r\n        // See if a checkbox was rendered and an id was set\r\n        if (this.control && this._props.id) {\r\n            // Set the id\r\n            this.control.el.id = this._props.id;\r\n        }\r\n        // Configure the control\r\n        this.configure();\r\n        // Wait before executing the rendered event, otherwise the controls will be null\r\n        setTimeout(function () {\r\n            // Execute the events\r\n            _this._props.onControlRendered ? _this._props.onControlRendered(_this) : null;\r\n            _this._formProps.onControlRendered ? _this._formProps.onControlRendered(_this) : null;\r\n            // Set the flag\r\n            _this._isRendered = true;\r\n        }, 10);\r\n    };\r\n    Object.defineProperty(FormControl.prototype, \"el\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormControl.prototype, \"checkbox\", {\r\n        // The checkbox control\r\n        get: function () { return this._cb; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormControl.prototype, \"dropdown\", {\r\n        // The dropdown control\r\n        get: function () { return this._ddl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormControl.prototype, \"control\", {\r\n        // The textbox control\r\n        get: function () { return this._cb || this._ddl || this._lb || this._tb || this._custom; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormControl.prototype, \"listbox\", {\r\n        // The listbox control\r\n        get: function () { return this._lb; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormControl.prototype, \"textbox\", {\r\n        // The textbox control\r\n        get: function () { return this._tb; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Method to get the form control value\r\n    FormControl.prototype.getValue = function () {\r\n        // See if there is an override event\r\n        if (this._props.onGetValue) {\r\n            return this._props.onGetValue(this._props);\r\n        }\r\n        // See if this is a checkbox\r\n        if (this._cb) {\r\n            // See if the items were defined\r\n            if (this._props.items) {\r\n                // Return the value(s)\r\n                return this._cb.getValue();\r\n            }\r\n            // Return the value\r\n            return this._cb.getValue() ? true : false;\r\n        }\r\n        // See if this is a dropdown\r\n        if (this._ddl) {\r\n            // Return the value\r\n            return this._ddl.getValue();\r\n        }\r\n        // See if this is a list box\r\n        if (this._lb) {\r\n            // Return the value\r\n            return this._lb.getValue();\r\n        }\r\n        // See if this is a textbox\r\n        if (this._tb) {\r\n            // Return the value\r\n            return this._tb.getValue();\r\n        }\r\n    };\r\n    // Is loaded\r\n    FormControl.prototype.isLoaded = function () {\r\n        var _this = this;\r\n        // Return a promise\r\n        return new Promise(function (resolve) {\r\n            // Wait for the control to be created\r\n            var id = setInterval(function () {\r\n                // See if the control has been rendered\r\n                if (_this.isRendered) {\r\n                    // Stop the loop\r\n                    clearInterval(id);\r\n                    // Resolve the promise\r\n                    resolve();\r\n                }\r\n            }, 10);\r\n        });\r\n    };\r\n    Object.defineProperty(FormControl.prototype, \"isRendered\", {\r\n        // Flag indicating the control is loaded\r\n        get: function () { return this._isRendered; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormControl.prototype, \"isValid\", {\r\n        // Validates the control\r\n        get: function () {\r\n            var validation = { isValid: true };\r\n            // Get the element and value\r\n            var elControl = (this._cb || this._ddl || this._lb || this._tb) ? (this._cb || this._ddl || this._lb || this._tb).el : this._el;\r\n            var value = this.getValue();\r\n            // See if this control is required\r\n            if (this._props.required) {\r\n                // See if a value doesn't exists\r\n                if (value == null) {\r\n                    // Set the flag\r\n                    validation.isValid = false;\r\n                }\r\n                // Else, see if the value is an array\r\n                else if (typeof (value.length) === \"number\") {\r\n                    // Set the flag\r\n                    validation.isValid = value.length > 0;\r\n                }\r\n            }\r\n            // See if an event exists\r\n            if (this._props.onValidate) {\r\n                // Call the event\r\n                var returnValue = this._props.onValidate(this._props, { value: value });\r\n                if (typeof (returnValue) === \"boolean\") {\r\n                    // Set the flag\r\n                    validation.isValid = returnValue;\r\n                }\r\n                // Else, ensure it exists\r\n                else if (returnValue) {\r\n                    // Set the validation\r\n                    validation = __assign(__assign({}, validation), returnValue);\r\n                }\r\n            }\r\n            // Update the validation\r\n            this.updateValidation(elControl, validation);\r\n            // Return the flag\r\n            return validation.isValid;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormControl.prototype, \"props\", {\r\n        // The form control properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Sets the form control label\r\n    FormControl.prototype.setLabel = function (value) {\r\n        // Update the label\r\n        this._elLabel ? this._elLabel.innerHTML = value || \"\" : null;\r\n    };\r\n    // Sets the custom control\r\n    FormControl.prototype.setControl = function (control) {\r\n        // Set the custom control\r\n        this._custom = control;\r\n    };\r\n    // Sets the form control value\r\n    FormControl.prototype.setValue = function (value) {\r\n        // Set the value\r\n        this.control ? this.control.setValue(value) : null;\r\n    };\r\n    // Updates the control validation\r\n    FormControl.prototype.updateValidation = function (elControl, validation) {\r\n        // Get the form control\r\n        var elFormControl = elControl.querySelector(\".form-control\") || elControl.querySelector(\".form-select\");\r\n        if (elFormControl) {\r\n            // Clear the invalid/valid classes\r\n            elFormControl.classList.remove(\"is-invalid\");\r\n            elFormControl.classList.remove(\"is-valid\");\r\n            // Set the class\r\n            elFormControl.classList.add(validation.isValid ? \"is-valid\" : \"is-invalid\");\r\n        }\r\n        else {\r\n            var validateControls = function (controls) {\r\n                // Parse the controls\r\n                for (var i = 0; i < controls.length; i++) {\r\n                    var control = controls[i];\r\n                    // Clear the invalid/valid classes\r\n                    control.classList.remove(\"is-invalid\");\r\n                    control.classList.remove(\"is-valid\");\r\n                    // Set the class\r\n                    control.classList.add(validation.isValid ? \"is-valid\" : \"is-invalid\");\r\n                }\r\n            };\r\n            // Get the checkboxes\r\n            var elCheckboxes = elControl.querySelectorAll(\".form-check-input\");\r\n            if (elCheckboxes.length > 0) {\r\n                // Validate the controls\r\n                validateControls(elCheckboxes);\r\n                // Set the form control\r\n                elFormControl = elCheckboxes.length > 0 ? elCheckboxes[elCheckboxes.length - 1] : elFormControl;\r\n            }\r\n            // Get the custom controls\r\n            var elCustomControls = elControl.querySelectorAll(\".custom-control-input\");\r\n            if (elCustomControls.length > 0) {\r\n                // Validate the controls\r\n                validateControls(elCustomControls);\r\n                // Set the form control\r\n                elFormControl = elCustomControls.length > 0 ? elCustomControls[elCustomControls.length - 1] : elFormControl;\r\n            }\r\n        }\r\n        // Ensure the form control exists\r\n        if (elFormControl) {\r\n            var useTooltip = this._formProps.validationType == _1.FormValidationTypes.Tooltip;\r\n            // See if there is invalid feedback\r\n            if (validation.invalidMessage || this._props.errorMessage) {\r\n                // Get the element\r\n                var invalidClassName = useTooltip ? \"invalid-tooltip\" : \"invalid-feedback\";\r\n                var elMessage = elFormControl.parentNode.querySelector(\".\" + invalidClassName);\r\n                if (elMessage == null) {\r\n                    // Create the element\r\n                    elMessage = document.createElement(\"div\");\r\n                    elMessage.className = invalidClassName;\r\n                    elFormControl.parentNode.appendChild(elMessage);\r\n                }\r\n                // Set the message\r\n                elMessage.innerHTML = validation.invalidMessage || this._props.errorMessage;\r\n            }\r\n            // See if there is valid feedback\r\n            if (validation.validMessage) {\r\n                // Get the element\r\n                var validClassName = useTooltip ? \"valid-tooltip\" : \"valid-feedback\";\r\n                var elMessage = elFormControl.parentNode.querySelector(\".\" + validClassName);\r\n                if (elMessage == null) {\r\n                    // Create the element\r\n                    elMessage = document.createElement(\"div\");\r\n                    elMessage.className = validClassName;\r\n                    elFormControl.parentNode.appendChild(elMessage);\r\n                }\r\n                // Set the message\r\n                elMessage.innerHTML = validation.validMessage;\r\n            }\r\n        }\r\n    };\r\n    return FormControl;\r\n}());\r\nexports.FormControl = FormControl;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/control.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/custom.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/custom.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CustomControls = void 0;\r\n/**\r\n * Custom Controls\r\n */\r\nvar CustomControls = /** @class */ (function () {\r\n    function CustomControls() {\r\n    }\r\n    // Gets the event by type\r\n    CustomControls.getByType = function (key) { return this._customTypes[key]; };\r\n    // Registers a custom control type\r\n    CustomControls.registerType = function (key, event) { this._customTypes[key] = event; };\r\n    CustomControls._customTypes = {};\r\n    return CustomControls;\r\n}());\r\nexports.CustomControls = CustomControls;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/custom.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/group.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/group.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormGroup = void 0;\r\nvar control_1 = __webpack_require__(/*! ./control */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/control.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/templates.js\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/types.js\");\r\n/**\r\n * Form Group\r\n */\r\nvar FormGroup = /** @class */ (function () {\r\n    // Constructor\r\n    function FormGroup(props, formProps) {\r\n        this._control = null;\r\n        this._el = null;\r\n        this._props = null;\r\n        this._formProps = null;\r\n        // Save the properties\r\n        this._props = props;\r\n        this._formProps = formProps;\r\n        // Create the element\r\n        var el = document.createElement(\"div\");\r\n        el.innerHTML = templates_1.HTMLGroup;\r\n        this._el = el.firstChild;\r\n        this._el.className = formProps.groupClassName = formProps.groupClassName || \"\";\r\n        // Configure the control\r\n        this.configure();\r\n    }\r\n    // Configure the row\r\n    FormGroup.prototype.configure = function () {\r\n        var _this = this;\r\n        // Execute the rendering event\r\n        this.configureEvents(this._props.onControlRendering).then(function () {\r\n            // Execute the parent rendering event\r\n            _this.configureEvents(_this._formProps.onControlRendering).then(function () {\r\n                // Render the control\r\n                _this.render();\r\n            });\r\n        });\r\n    };\r\n    // Configure the events\r\n    FormGroup.prototype.configureEvents = function (event) {\r\n        var _this = this;\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Execute the rendering event\r\n            var returnVal = event ? event(_this._props) : null;\r\n            if (returnVal && returnVal.then) {\r\n                // Wait for the event to complete\r\n                returnVal.then(function (props) {\r\n                    // Update the properties\r\n                    _this._props = props;\r\n                    // Resolve the promise\r\n                    resolve();\r\n                }, reject);\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n    // Renders the control\r\n    FormGroup.prototype.render = function () {\r\n        var _this = this;\r\n        // Update the label\r\n        var elLabel = this._el.querySelector(\"label\");\r\n        var label = this._props.label || (this._control && this._control.props.label);\r\n        if (label) {\r\n            // Set the text\r\n            elLabel.innerHTML = label;\r\n        }\r\n        else {\r\n            // Remove the label\r\n            this._el.removeChild(elLabel);\r\n            elLabel = null;\r\n        }\r\n        // Update the description\r\n        var elDescription = this._el.querySelector(\"small\");\r\n        var description = this._props.description || (this._control && this._control.props.description);\r\n        if (description) {\r\n            // Set the text\r\n            elDescription.innerHTML = description;\r\n        }\r\n        else {\r\n            // Remove the description\r\n            this._el.removeChild(elDescription);\r\n            elDescription = null;\r\n        }\r\n        // Create the control\r\n        this._control = new control_1.FormControl(this._props, this._formProps, elLabel);\r\n        // Wait for the control to be created\r\n        this._control.isLoaded().then(function () {\r\n            // See if the id/name and control element exists\r\n            var controlId = _this._props.id || _this._props.name;\r\n            var elControl = _this._control.control && _this._control.control.el ? _this._control.control.el : null;\r\n            elControl = elControl ? elControl.querySelector(\"input\") || elControl.querySelector(\"select\") || elControl : null;\r\n            if (controlId && elControl && _this._props.type != types_1.FormControlTypes.Checkbox) {\r\n                // See if the description exists\r\n                if (elDescription) {\r\n                    // Set the id and aria properties\r\n                    elDescription ? elDescription.id = controlId + \"_desc\" : null;\r\n                    elControl.setAttribute(\"aria-describedby\", elDescription.id);\r\n                }\r\n                // See if the label exists\r\n                if (elLabel) {\r\n                    // Set the id and aria properties\r\n                    elLabel ? elLabel.id = controlId + \"_label\" : null;\r\n                    elControl.setAttribute(\"aria-labelledby\", elLabel.id);\r\n                }\r\n            }\r\n            // Append the control, after the label\r\n            elDescription ? _this._el.insertBefore(_this._control.el, elDescription) : _this._el.appendChild(_this._control.el);\r\n        });\r\n    };\r\n    Object.defineProperty(FormGroup.prototype, \"control\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        get: function () { return this._control; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormGroup.prototype, \"el\", {\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FormGroup;\r\n}());\r\nexports.FormGroup = FormGroup;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/group.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormControl = exports.Form = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar control_1 = __webpack_require__(/*! ./control */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/control.js\");\r\nvar group_1 = __webpack_require__(/*! ./group */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/group.js\");\r\nvar row_1 = __webpack_require__(/*! ./row */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/row.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/templates.js\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/types.js\");\r\n__exportStar(__webpack_require__(/*! ./custom */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/custom.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/types.js\"), exports);\r\n/**\r\n * Form\r\n * @property props - The form properties.\r\n */\r\nvar _Form = /** @class */ (function (_super) {\r\n    __extends(_Form, _super);\r\n    // Constructor\r\n    function _Form(props) {\r\n        var _this = _super.call(this, templates_1.HTML, props) || this;\r\n        _this._groups = null;\r\n        _this._rows = null;\r\n        // Configure the form\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the form\r\n    _Form.prototype.configure = function () {\r\n        // Clear the groups and rows\r\n        this._groups = [];\r\n        this._rows = [];\r\n        // Add the class name\r\n        var classNames = (this.props.className || \"\").split(\" \");\r\n        for (var i = 0; i < classNames.length; i++) {\r\n            var className = classNames[i];\r\n            // Append the class name\r\n            className ? this.el.classList.add(className) : null;\r\n        }\r\n        // Set the floating class\r\n        this.props.isFloating ? this.el.classList.add(\"form-floating\") : null;\r\n        // Append the controls\r\n        this.appendControls(this.props.controls);\r\n        // Append the rows\r\n        this.appendRows(this.props.rows);\r\n    };\r\n    // Configure the events\r\n    _Form.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // See if an onrendered event exists\r\n        if (this.props.onRendered) {\r\n            // Wait before executing the rendered event, otherwise the controls will be null\r\n            var intervalId_1 = setInterval(function () {\r\n                var isLoaded = true;\r\n                // Parse the controls\r\n                for (var i = 0; i < _this.controls.length; i++) {\r\n                    var control = _this.controls[i];\r\n                    // Set the flag\r\n                    isLoaded = isLoaded && control && control.isRendered;\r\n                }\r\n                // See if the form is loaded\r\n                if (isLoaded) {\r\n                    // Clear the interval\r\n                    clearInterval(intervalId_1);\r\n                    // Execute the event\r\n                    _this.props.onRendered(_this.controls);\r\n                }\r\n            }, 10);\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Append controls to the form\r\n    _Form.prototype.appendControls = function (controls) {\r\n        if (controls === void 0) { controls = []; }\r\n        // Parse the controls\r\n        for (var i = 0; i < controls.length; i++) {\r\n            // Create the group\r\n            var group = new group_1.FormGroup(controls[i], this.props);\r\n            this._groups.push(group);\r\n            this.el.appendChild(group.el);\r\n        }\r\n    };\r\n    // Append rows to the form\r\n    _Form.prototype.appendRows = function (rows) {\r\n        if (rows === void 0) { rows = []; }\r\n        // Parse the rows\r\n        for (var i = 0; i < rows.length; i++) {\r\n            // Create the row\r\n            var row = new row_1.FormRow(rows[i], this.props);\r\n            this._rows.push(row);\r\n            this.el.appendChild(row.el);\r\n        }\r\n    };\r\n    Object.defineProperty(_Form.prototype, \"controls\", {\r\n        // The forms controls\r\n        get: function () {\r\n            var controls = [];\r\n            // Parse the groups\r\n            for (var i = 0; i < this._groups.length; i++) {\r\n                // Add the control\r\n                controls.push(this._groups[i].control);\r\n            }\r\n            // Parse the rows\r\n            for (var i = 0; i < this._rows.length; i++) {\r\n                // Add the controls\r\n                controls = controls.concat(this._rows[i].controls);\r\n            }\r\n            // Return the controls\r\n            return controls;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Gets a form control by its name\r\n    _Form.prototype.getControl = function (name) {\r\n        // Parse the controls\r\n        var controls = this.controls;\r\n        for (var i = 0; i < controls.length; i++) {\r\n            var control = controls[i];\r\n            // See if this is the control we are looking for\r\n            if (control && control.props && control.props.name == name) {\r\n                // Return the control\r\n                return control;\r\n            }\r\n        }\r\n        // Control not found\r\n        return null;\r\n    };\r\n    // Gets the form values\r\n    _Form.prototype.getValues = function () {\r\n        var values = {};\r\n        // Parse the controls\r\n        var controls = this.controls;\r\n        for (var i = 0; i < controls.length; i++) {\r\n            var control = controls[i];\r\n            if (control.props.name) {\r\n                // Set the value\r\n                values[control.props.name] = control.getValue();\r\n            }\r\n        }\r\n        // Return the values\r\n        return values;\r\n    };\r\n    // Validates the form\r\n    _Form.prototype.isValid = function () {\r\n        var isValid = true;\r\n        // Parse the controls\r\n        var controls = this.controls;\r\n        for (var i = 0; i < controls.length; i++) {\r\n            // See if this control is valid\r\n            if (controls[i].isValid == false) {\r\n                // Set the flag\r\n                isValid = false;\r\n            }\r\n        }\r\n        // Return the flag\r\n        return isValid;\r\n    };\r\n    return _Form;\r\n}(base_1.Base));\r\nexports.Form = function (props) { return new _Form(props); };\r\n/**\r\n * Form Control\r\n */\r\nexports.FormControl = function (props) {\r\n    // Create a base object\r\n    var base = new base_1.Base(\"\", props);\r\n    // Create the control\r\n    var control = new control_1.FormControl(props, { validationType: types_1.FormValidationTypes.Default });\r\n    // Wait for the control to be loaded\r\n    control.isLoaded().then(function () {\r\n        // Set the element\r\n        base.el = control.el;\r\n        // Configure the parent\r\n        base.configureParent();\r\n    });\r\n    // Return the control\r\n    return control;\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/row.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/row.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormRow = void 0;\r\nvar group_1 = __webpack_require__(/*! ./group */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/group.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/templates.js\");\r\n/**\r\n * Form Row\r\n */\r\nvar FormRow = /** @class */ (function () {\r\n    // Constructor\r\n    function FormRow(props, parent) {\r\n        this._columns = null;\r\n        this._el = null;\r\n        this._parent = null;\r\n        this._props = null;\r\n        // Save the parameters\r\n        this._parent = parent;\r\n        this._props = props;\r\n        // Create the element\r\n        var el = document.createElement(\"div\");\r\n        el.innerHTML = templates_1.HTMLRow;\r\n        this._el = el.firstChild;\r\n        // Configure the row\r\n        this.configure();\r\n    }\r\n    // Configure the row\r\n    FormRow.prototype.configure = function () {\r\n        // Set the attributes\r\n        this._props.isCentered ? this._el.classList.add(\"align-items-center\") : null;\r\n        // Set the class name\r\n        var classNames = this._parent.rowClassName ? this._parent.rowClassName.split(' ') : [];\r\n        classNames = this._props.className ? classNames.concat(this._props.className.split(' ')) : classNames;\r\n        for (var i = 0; i < classNames.length; i++) {\r\n            this._el.classList.add(classNames[i]);\r\n        }\r\n        // Clear the columns and group\r\n        this._columns = [];\r\n        // Render the columns\r\n        this.renderColumns();\r\n    };\r\n    // Render the columns\r\n    FormRow.prototype.renderColumns = function () {\r\n        // Parse the columns\r\n        var columns = this._props.columns || [];\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var columnProps = columns[i];\r\n            // Set the value\r\n            var value = columnProps.control.value;\r\n            if (typeof (value) === \"undefined\" && this._parent.value) {\r\n                // Set the value\r\n                value = this._parent.value[columnProps.control.name] || value;\r\n            }\r\n            columnProps.control.value = value;\r\n            // Create the column\r\n            var column = new group_1.FormGroup(columnProps.control, this._parent);\r\n            this._columns.push(column);\r\n            this._el.appendChild(column.el);\r\n            // Get the class names\r\n            var classNames = (columnProps.className || \"\").split(\" \");\r\n            for (var i_1 = 0; i_1 < classNames.length; i_1++) {\r\n                var className = classNames[i_1];\r\n                // Add the class name if it exists\r\n                className ? column.el.classList.add(className) : null;\r\n            }\r\n            // Create the column\r\n            var colSize = columnProps.size > 0 && columnProps.size < 13 ? columnProps.size : 0;\r\n            // See if this column is auto sized\r\n            if (columnProps.isAutoSized || this.props.isAutoSized || this.props.isCentered) {\r\n                // Add the class name\r\n                column.el.classList.add(\"col-auto\");\r\n            }\r\n            // Else, see if a size is defined\r\n            else if (colSize > 0 && colSize < 13) {\r\n                // Add the class name based on the size\r\n                column.el.classList.add(\"col-\" + colSize);\r\n            }\r\n            else {\r\n                // Default the size\r\n                column.el.classList.add(\"col\");\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(FormRow.prototype, \"el\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // The component HTML element\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormRow.prototype, \"controls\", {\r\n        // The form controls\r\n        get: function () {\r\n            var controls = [];\r\n            // Parse the columns\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                // Add the control\r\n                controls.push(this._columns[i].control);\r\n            }\r\n            // Return the controls\r\n            return controls;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormRow.prototype, \"props\", {\r\n        // The component properties\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FormRow;\r\n}());\r\nexports.FormRow = FormRow;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/row.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/templates.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/templates.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLRow = exports.HTMLGroup = exports.HTML = void 0;\r\n// Form\r\nexports.HTML = \"<form class=\\\"needs-validation\\\"></form>\";\r\n// Group\r\nexports.HTMLGroup = \"\\n<div>\\n    <label class=\\\"form-label\\\" tabindex=\\\"-1\\\"></label>\\n    <small class=\\\"form-text text-muted\\\" tabindex=\\\"-1\\\"></small>\\n</div>\".trim();\r\n// Row\r\nexports.HTMLRow = \"<div class=\\\"row\\\"></div>\";\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/types.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/types.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormValidationTypes = exports.FormControlTypes = void 0;\r\n/**\r\n * Form Control Types\r\n */\r\nvar FormControlTypes;\r\n(function (FormControlTypes) {\r\n    FormControlTypes[FormControlTypes[\"Checkbox\"] = 1] = \"Checkbox\";\r\n    FormControlTypes[FormControlTypes[\"ColorPicker\"] = 2] = \"ColorPicker\";\r\n    FormControlTypes[FormControlTypes[\"Email\"] = 3] = \"Email\";\r\n    FormControlTypes[FormControlTypes[\"Datalist\"] = 4] = \"Datalist\";\r\n    FormControlTypes[FormControlTypes[\"Dropdown\"] = 5] = \"Dropdown\";\r\n    FormControlTypes[FormControlTypes[\"File\"] = 6] = \"File\";\r\n    FormControlTypes[FormControlTypes[\"ListBox\"] = 7] = \"ListBox\";\r\n    FormControlTypes[FormControlTypes[\"MultiCheckbox\"] = 8] = \"MultiCheckbox\";\r\n    FormControlTypes[FormControlTypes[\"MultiDropdown\"] = 9] = \"MultiDropdown\";\r\n    FormControlTypes[FormControlTypes[\"MultiListBox\"] = 10] = \"MultiListBox\";\r\n    FormControlTypes[FormControlTypes[\"MultiRadio\"] = 11] = \"MultiRadio\";\r\n    FormControlTypes[FormControlTypes[\"MultiSwitch\"] = 12] = \"MultiSwitch\";\r\n    FormControlTypes[FormControlTypes[\"Password\"] = 13] = \"Password\";\r\n    FormControlTypes[FormControlTypes[\"Radio\"] = 14] = \"Radio\";\r\n    FormControlTypes[FormControlTypes[\"Range\"] = 15] = \"Range\";\r\n    FormControlTypes[FormControlTypes[\"Readonly\"] = 16] = \"Readonly\";\r\n    FormControlTypes[FormControlTypes[\"Switch\"] = 17] = \"Switch\";\r\n    FormControlTypes[FormControlTypes[\"TextArea\"] = 18] = \"TextArea\";\r\n    FormControlTypes[FormControlTypes[\"TextField\"] = 19] = \"TextField\";\r\n})(FormControlTypes = exports.FormControlTypes || (exports.FormControlTypes = {}));\r\n/**\r\n * Form Validation Types\r\n */\r\nvar FormValidationTypes;\r\n(function (FormValidationTypes) {\r\n    FormValidationTypes[FormValidationTypes[\"Default\"] = 1] = \"Default\";\r\n    FormValidationTypes[FormValidationTypes[\"Tooltip\"] = 2] = \"Tooltip\";\r\n})(FormValidationTypes = exports.FormValidationTypes || (exports.FormValidationTypes = {}));\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/types.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./accordion */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/accordion/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./alert */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/alert/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./badge */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./breadcrumb */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/breadcrumb/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./buttonGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./card */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/card/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cardGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/cardGroup/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./carousel */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/carousel/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./checkboxGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/checkboxGroup/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./collapse */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/collapse/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dropdown */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/form/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./inputGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./jumbotron */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./listBox */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./listGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./modal */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./offcanvas */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./nav */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./navbar */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./pagination */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./popover */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/popover/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./progress */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./progressGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./spinner */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./table */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./toast */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./toolbar */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./tooltip */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/tooltip/index.js\"), exports);\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InputGroup = exports.InputGroupTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar button_1 = __webpack_require__(/*! ../button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/templates.js\");\r\n/**\r\n * Input Group Types\r\n */\r\nvar InputGroupTypes;\r\n(function (InputGroupTypes) {\r\n    InputGroupTypes[InputGroupTypes[\"ColorPicker\"] = 1] = \"ColorPicker\";\r\n    InputGroupTypes[InputGroupTypes[\"Email\"] = 2] = \"Email\";\r\n    InputGroupTypes[InputGroupTypes[\"File\"] = 3] = \"File\";\r\n    InputGroupTypes[InputGroupTypes[\"Password\"] = 4] = \"Password\";\r\n    InputGroupTypes[InputGroupTypes[\"Range\"] = 5] = \"Range\";\r\n    InputGroupTypes[InputGroupTypes[\"Search\"] = 6] = \"Search\";\r\n    InputGroupTypes[InputGroupTypes[\"TextArea\"] = 7] = \"TextArea\";\r\n    InputGroupTypes[InputGroupTypes[\"TextField\"] = 8] = \"TextField\";\r\n})(InputGroupTypes = exports.InputGroupTypes || (exports.InputGroupTypes = {}));\r\n/**\r\n * Input Group\r\n * @param props The input group properties.\r\n */\r\nvar _InputGroup = /** @class */ (function (_super) {\r\n    __extends(_InputGroup, _super);\r\n    // Constructor\r\n    function _InputGroup(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._initFl = false;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the textbox\r\n        _this.configureTextbox();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        // Set the flag\r\n        _this._initFl = true;\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _InputGroup.prototype.configure = function () {\r\n        var elInput = this.el.querySelector(\"input\");\r\n        if (elInput) {\r\n            // Set the class names\r\n            this.props.isLarge ? this.el.classList.add(\"input-group-lg\") : null;\r\n            this.props.isSmall ? this.el.classList.add(\"input-group-sm\") : null;\r\n            // Update the label\r\n            var label = this.el.querySelector(\"label\");\r\n            if (label) {\r\n                this.props.id ? label.setAttribute(\"for\", this.props.id) : null;\r\n                // See if this is a file\r\n                if (this.props.type == InputGroupTypes.File) {\r\n                    // Set the class\r\n                    label.classList.add(\"form-file-label\");\r\n                    // Set the text\r\n                    var spanText = document.createElement(\"span\");\r\n                    spanText.classList.add(\"form-file-text\");\r\n                    spanText.innerHTML = this.props.label || \"Choose a file...\";\r\n                    label.appendChild(spanText);\r\n                    // Set the button\r\n                    var spanButton = document.createElement(\"span\");\r\n                    spanButton.classList.add(\"form-file-button\");\r\n                    spanButton.innerHTML = \"Browse\";\r\n                    label.appendChild(spanButton);\r\n                }\r\n                else {\r\n                    // Set the label if it exists\r\n                    if (this.props.label) {\r\n                        label.innerHTML = this.props.label;\r\n                    }\r\n                    // Else, remove it\r\n                    else {\r\n                        this.el.removeChild(label);\r\n                    }\r\n                }\r\n            }\r\n            // See if the label exists\r\n            if (this.props.prependedLabel) {\r\n                // Add the label\r\n                var label_1 = document.createElement(\"span\");\r\n                label_1.classList.add(\"input-group-text\");\r\n                label_1.innerHTML = this.props.prependedLabel;\r\n                this.el.insertBefore(label_1, elInput);\r\n            }\r\n            // Parse the buttons\r\n            var buttons = this.props.prependedButtons || [];\r\n            for (var i = 0; i < buttons.length; i++) {\r\n                // Add the button\r\n                this.el.insertBefore(button_1.Button(buttons[i]).el, elInput);\r\n            }\r\n            // Default the appended buttons\r\n            var appendedButtons = this.props.appendedButtons || [];\r\n            if (this.props.type == InputGroupTypes.Range) {\r\n                // Add the button\r\n                appendedButtons.push({\r\n                    id: \"range-value\",\r\n                    text: this.props.value == null ? \"\" : this.props.value\r\n                });\r\n            }\r\n            // See if the label exists\r\n            if (this.props.appendedLabel) {\r\n                // Add the label\r\n                var label_2 = document.createElement(\"span\");\r\n                label_2.classList.add(\"input-group-text\");\r\n                label_2.innerHTML = this.props.appendedLabel;\r\n                this.el.appendChild(label_2);\r\n            }\r\n            // Parse the buttons\r\n            for (var i = 0; i < appendedButtons.length; i++) {\r\n                // Add the button\r\n                this.el.appendChild(button_1.Button(appendedButtons[i]).el);\r\n            }\r\n        }\r\n    };\r\n    // Configure the events\r\n    _InputGroup.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        var isMultiLine = this.props.type == InputGroupTypes.TextArea;\r\n        var elInput = this.el.querySelector(\"input\") || this.el.querySelector(\"textarea\");\r\n        if (elInput) {\r\n            // See if a change event exists\r\n            var callbackValue_1 = null;\r\n            if (this.props.onChange) {\r\n                // Add an input event\r\n                elInput.addEventListener(\"input\", function (ev) {\r\n                    // See if we have already executed the change event\r\n                    if (callbackValue_1 != elInput.value) {\r\n                        // Set the value\r\n                        callbackValue_1 = elInput.value;\r\n                        // Call the change event\r\n                        _this.props.onChange(callbackValue_1, ev);\r\n                    }\r\n                });\r\n            }\r\n            // See if this is a range\r\n            if (this.props.type == InputGroupTypes.Range) {\r\n                // Add a change event\r\n                elInput.addEventListener(\"input\", function () {\r\n                    // Get the button\r\n                    var btn = _this.el.querySelector(\"#range-value\");\r\n                    if (btn) {\r\n                        // Update the value\r\n                        btn.innerHTML = elInput.value;\r\n                    }\r\n                });\r\n            }\r\n            // See if this is not a multi-line\r\n            if (!isMultiLine) {\r\n                // Add a mouse up event to detect the clear event\r\n                elInput.addEventListener(\"mouseup\", function (ev) {\r\n                    // Get the current value\r\n                    var el = ev.currentTarget;\r\n                    var oldValue = el.value;\r\n                    // Wait for the user to stop updating the value\r\n                    setTimeout(function () {\r\n                        // Get the current value\r\n                        var currentValue = el.value;\r\n                        // See if the values have changed\r\n                        if (currentValue != oldValue) {\r\n                            // See if we have already executed the change event\r\n                            if (callbackValue_1 != currentValue) {\r\n                                // Set the value\r\n                                callbackValue_1 = currentValue;\r\n                                // Call the events\r\n                                _this.props.onChange ? _this.props.onChange(callbackValue_1, ev) : null;\r\n                                _this.props.onClear && callbackValue_1 == \"\" ? _this.props.onClear() : null;\r\n                            }\r\n                        }\r\n                    }, 1);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    // Configures the text box\r\n    _InputGroup.prototype.configureTextbox = function () {\r\n        var isTextArea = this.props.type == InputGroupTypes.TextArea;\r\n        var input = this.el.querySelector(\"input\");\r\n        var textarea = this.el.querySelector(\"textarea\");\r\n        // See if this is a text area\r\n        if (isTextArea) {\r\n            // Remove the input\r\n            input ? this.el.removeChild(input) : null;\r\n            // Ensure the textarea exists\r\n            if (textarea) {\r\n                // Update the textbox\r\n                this.props.id ? textarea.id = this.props.id : null;\r\n                this.props.placeholder ? textarea.placeholder = this.props.placeholder : null;\r\n                textarea.disabled = this.props.isReadonly ? true : false;\r\n                textarea.readOnly = textarea.disabled;\r\n                textarea.rows = this.props.rows;\r\n                this.props.title ? textarea.title = this.props.title : null;\r\n            }\r\n        }\r\n        else {\r\n            // Remove the textarea\r\n            textarea ? this.el.removeChild(textarea) : null;\r\n            // Ensure the input exists\r\n            if (input) {\r\n                // Update the textbox\r\n                this.props.id ? input.id = this.props.id : null;\r\n                this.props.placeholder ? input.placeholder = this.props.placeholder : null;\r\n                input.disabled = this.props.isReadonly ? true : false;\r\n                input.readOnly = input.disabled;\r\n                this.props.title ? input.title = this.props.title : null;\r\n                typeof (this.props.min) === \"number\" ? input.min = this.props.min + \"\" : null;\r\n                typeof (this.props.max) === \"number\" ? input.max = this.props.max + \"\" : null;\r\n                typeof (this.props.step) === \"number\" ? input.step = this.props.step + \"\" : null;\r\n                // Update the type\r\n                switch (this.props.type) {\r\n                    // Color Picker\r\n                    case InputGroupTypes.ColorPicker:\r\n                        input.classList.add(\"form-control-color\");\r\n                        input.type = \"color\";\r\n                        break;\r\n                    // Email\r\n                    case InputGroupTypes.Email:\r\n                        input.classList.add(\"form-email\");\r\n                        input.type = \"email\";\r\n                        break;\r\n                    // File\r\n                    case InputGroupTypes.File:\r\n                        this.el.classList.add(\"form-file\");\r\n                        input.classList.remove(\"form-control\");\r\n                        input.classList.add(\"form-file-input\");\r\n                        input.type = \"file\";\r\n                        break;\r\n                    // Password\r\n                    case InputGroupTypes.Password:\r\n                        input.classList.add(\"form-password\");\r\n                        input.type = \"password\";\r\n                        break;\r\n                    // Range\r\n                    case InputGroupTypes.Range:\r\n                        input.classList.add(\"form-range\");\r\n                        input.type = \"range\";\r\n                        break;\r\n                    // Search\r\n                    case InputGroupTypes.Search:\r\n                        input.classList.add(\"form-search\");\r\n                        input.type = \"search\";\r\n                        input.setAttribute(\"aria-label\", \"Search\");\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        // Set the default value\r\n        this.setValue(this.props.value);\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    _InputGroup.prototype.getValue = function () { return this.textbox.value; };\r\n    // Sets the textbox value\r\n    _InputGroup.prototype.setValue = function (value) {\r\n        if (value === void 0) { value = \"\"; }\r\n        // Set the textbox value\r\n        this.textbox.value = value;\r\n        // See if a change event exists\r\n        if (this._initFl && this.props.onChange) {\r\n            // Execute the change event\r\n            this.props.onChange(value);\r\n        }\r\n    };\r\n    Object.defineProperty(_InputGroup.prototype, \"textbox\", {\r\n        // Returns the textbox\r\n        get: function () { return this.el.querySelector(\"input\") || this.el.querySelector(\"textarea\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return _InputGroup;\r\n}(base_1.Base));\r\nexports.InputGroup = function (props, template) { return new _InputGroup(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/templates.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/templates.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"input-group\\\">\\n    <label></label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" />\\n    <textarea class=\\\"form-control\\\"></textarea>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/index.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Jumbotron = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/templates.js\");\r\n/**\r\n * Jumbotron\r\n */\r\nvar _Jumbotron = /** @class */ (function (_super) {\r\n    __extends(_Jumbotron, _super);\r\n    // Constructor\r\n    function _Jumbotron(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Jumbotron.prototype.configure = function () {\r\n        // Set the class names\r\n        this.props.isFluid ? this.el.classList.add(\"jumbotron-fluid\") : null;\r\n        // Set the title\r\n        var title = this.el.querySelector(\"h1\");\r\n        if (title) {\r\n            if (this.props.title) {\r\n                // Set the title\r\n                title.innerHTML = this.props.title;\r\n            }\r\n            else {\r\n                // Remove the title\r\n                this.el.removeChild(title);\r\n            }\r\n        }\r\n        // Set the lead\r\n        var lead = this.el.querySelector(\"p\");\r\n        if (lead) {\r\n            if (this.props.lead) {\r\n                // Set the lead\r\n                lead.innerHTML = this.props.lead;\r\n            }\r\n            else {\r\n                // Remove the lead\r\n                this.el.removeChild(lead);\r\n            }\r\n        }\r\n        // Append the content\r\n        common_1.appendContent(this.el, this.props.content);\r\n    };\r\n    // Configures the events\r\n    _Jumbotron.prototype.configureEvents = function () {\r\n        // Call the render event\r\n        this.props.onRenderContent ? this.props.onRenderContent(this.el) : null;\r\n    };\r\n    return _Jumbotron;\r\n}(base_1.Base));\r\nexports.Jumbotron = function (props, template) { return new _Jumbotron(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/templates.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/templates.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"row py-5 m-0\\\">\\n    <h1 class=\\\"display-4\\\"></h1>\\n    <p class=\\\"lead\\\"></p>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/jumbotron/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/index.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ListBox = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/templates.js\");\r\n/**\r\n * List Box\r\n * @property props - The list box properties.\r\n */\r\nvar _ListBox = /** @class */ (function (_super) {\r\n    __extends(_ListBox, _super);\r\n    // Constructor\r\n    function _ListBox(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._elLabel = null;\r\n        _this._elSearchBox = null;\r\n        _this._elDatalist = null;\r\n        _this._elValues = null;\r\n        _this._initFl = false;\r\n        _this._items = null;\r\n        _this._selectedItems = null;\r\n        // Configure the list box\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        // Set the flag\r\n        _this._initFl = true;\r\n        return _this;\r\n    }\r\n    // Configures the list box\r\n    _ListBox.prototype.configure = function () {\r\n        this._elLabel = this.el.querySelector(\"label\");\r\n        this._elSearchBox = this.el.querySelector(\"input\");\r\n        this._elDatalist = this.el.querySelector(\"datalist\");\r\n        this._elValues = this.el.querySelector(\"ul\");\r\n        // See if the placeholder exists\r\n        if (this.props.placeholder) {\r\n            // Update the placeholder\r\n            this._elSearchBox ? this._elSearchBox.placeholder = this.props.placeholder : null;\r\n        }\r\n        // See if the id is set\r\n        if (this.props.id) {\r\n            // Update the ids\r\n            this.el.id = this.props.id;\r\n            this._elLabel ? this._elLabel.setAttribute(\"for\", this.props.id + \"-search\") : null;\r\n            this._elSearchBox ? this._elSearchBox.id = this.props.id + \"-search\" : null;\r\n            this._elSearchBox ? this._elSearchBox.setAttribute(\"list\", this.props.id + \"-list\") : null;\r\n            this._elDatalist ? this._elDatalist.id = this.props.id + \"-list\" : null;\r\n        }\r\n        // See if the label exists\r\n        if (this._elLabel) {\r\n            if (this.props.label) {\r\n                this._elLabel.innerHTML = this.props.label;\r\n            }\r\n            else {\r\n                // Remove the label\r\n                this.el.removeChild(this._elLabel);\r\n            }\r\n        }\r\n        // See if this is read-only\r\n        if (this.props.isReadonly) {\r\n            // Disable the search box\r\n            this._elSearchBox ? this._elSearchBox.disabled = true : null;\r\n        }\r\n        // Set the options\r\n        this.setOptions(this.props.items);\r\n        // Set the value if it's been defined\r\n        if (typeof (this.props.value) !== \"undefined\") {\r\n            this.setValue(this.props.value);\r\n        }\r\n    };\r\n    // Configures the events\r\n    _ListBox.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Set the change event on the search box\r\n        this._elSearchBox.addEventListener(\"input\", function (ev) {\r\n            var value = _this._elSearchBox.value;\r\n            // Parse the items\r\n            for (var i = 0; i < _this._items.length; i++) {\r\n                var item = _this._items[i];\r\n                // See if this is the target item\r\n                if (item.text == value) {\r\n                    // See if this is a multi-select\r\n                    if (_this.props.multi) {\r\n                        var existsFl = false;\r\n                        // Parse the selected items\r\n                        for (var j = 0; j < _this._selectedItems.length; j++) {\r\n                            var selectedItem = _this._selectedItems[j];\r\n                            // See if this item is already selected\r\n                            if (selectedItem.text == item.text) {\r\n                                // Set the flag\r\n                                existsFl = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        // Ensure the item wasn't already selected\r\n                        if (!existsFl) {\r\n                            // Set the value\r\n                            _this.setValue(_this._selectedItems.concat(item).sort(function (a, b) {\r\n                                if (a.text < b.text) {\r\n                                    return -1;\r\n                                }\r\n                                if (a.text > b.text) {\r\n                                    return 1;\r\n                                }\r\n                                return 0;\r\n                            }));\r\n                            // Call the change event\r\n                            _this.props.onChange ? _this.props.onChange(_this._selectedItems, ev) : null;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Set the value\r\n                        _this.setValue(value);\r\n                        // Call the change event\r\n                        _this.props.onChange ? _this.props.onChange(_this._selectedItems, ev) : null;\r\n                    }\r\n                    // Clear the selected value\r\n                    _this._elSearchBox.value = \"\";\r\n                    // Bug - Edge (non-chromium)\r\n                    // The menu is still visible, so we fill force a \"blur\" to hide the menu after selection\r\n                    _this._elSearchBox.blur();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    // Method to configure the item event\r\n    _ListBox.prototype.configureItemEvent = function (elRemove, elItem, item) {\r\n        var _this = this;\r\n        // Ensure the remove element exists\r\n        if (elRemove) {\r\n            // Add a click event to the badge\r\n            var badge = elItem.querySelector(\".badge\");\r\n            if (badge) {\r\n                badge.addEventListener(\"click\", function (ev) {\r\n                    // Remove the item\r\n                    _this._elValues.removeChild(elItem);\r\n                    // Find the selected item\r\n                    for (var i = 0; i < _this._selectedItems.length; i++) {\r\n                        var selectedItem = _this._selectedItems[i];\r\n                        // See if this is the target item\r\n                        if (selectedItem.text == item.text) {\r\n                            // Remove this item\r\n                            _this._selectedItems.splice(i, 1);\r\n                            // Call the change event\r\n                            _this.props.onChange ? _this.props.onChange(_this._selectedItems, ev) : null;\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    _ListBox.prototype.getValue = function () { return this._selectedItems; };\r\n    _ListBox.prototype.setOptions = function (items) {\r\n        if (items === void 0) { items = []; }\r\n        var elDatalist = this.el.querySelector(\"datalist\");\r\n        if (elDatalist) {\r\n            // Save a reference to the items\r\n            this._items = items;\r\n            // Clear the options\r\n            while (elDatalist.firstChild) {\r\n                elDatalist.removeChild(elDatalist.firstChild);\r\n            }\r\n            // Clear the value\r\n            this._elSearchBox.value = \"\";\r\n            this._selectedItems = [];\r\n            // Parse the items\r\n            for (var i = 0; i < items.length; i++) {\r\n                var props = items[i];\r\n                // Add the option\r\n                var elOption = document.createElement(\"option\");\r\n                elOption.value = props.text;\r\n                elDatalist.appendChild(elOption);\r\n                // See if the item is selected\r\n                if (props.isSelected) {\r\n                    // Add the selected item\r\n                    this._selectedItems.push(props);\r\n                }\r\n            }\r\n            // See if items are selected\r\n            if (this._selectedItems.length > 0) {\r\n                // Set the value\r\n                this.setValue(this._selectedItems);\r\n            }\r\n        }\r\n    };\r\n    // Set the value\r\n    _ListBox.prototype.setValue = function (value) {\r\n        // Clear the items\r\n        this._selectedItems = [];\r\n        while (this._elValues.firstChild) {\r\n            this._elValues.removeChild(this._elValues.firstChild);\r\n        }\r\n        // Parse the values\r\n        if (value) {\r\n            // Ensure this is an array\r\n            var values = typeof (value) === \"string\" || typeof (value) === \"number\" ? [value] : value;\r\n            // Parse the values\r\n            for (var i = 0; i < values.length; i++) {\r\n                var itemValue = values[i];\r\n                itemValue = typeof (itemValue) === \"string\" || typeof (itemValue) === \"number\" ? itemValue : itemValue.text;\r\n                // Parse the items\r\n                for (var j = 0; j < this._items.length; j++) {\r\n                    var item = this._items[j];\r\n                    // See if this is the target item\r\n                    if (item.text == itemValue || item.value == itemValue) {\r\n                        // Add the selected item\r\n                        this._selectedItems.push(item);\r\n                        // Create the list item\r\n                        var elItem = document.createElement(\"div\");\r\n                        elItem.innerHTML = templates_1.HTMLItem;\r\n                        elItem = elItem.firstChild;\r\n                        this._elValues.appendChild(elItem);\r\n                        // Set the text value\r\n                        var elRemove = elItem.querySelector(\"span\");\r\n                        if (elRemove) {\r\n                            var text = document.createTextNode(item.text);\r\n                            elItem.insertBefore(text, elRemove);\r\n                        }\r\n                        // See if this is read-only\r\n                        if (this.props.isReadonly) {\r\n                            // Delete the \"remove\" button\r\n                            elItem.removeChild(elRemove);\r\n                            elRemove = null;\r\n                        }\r\n                        // Configure the event for this item\r\n                        this.configureItemEvent(elRemove, elItem, item);\r\n                        // Break from the loop\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // See if a change event exists\r\n        if (this._initFl && this.props.onChange) {\r\n            // Execute the change event\r\n            this.props.onChange(this.getValue());\r\n        }\r\n    };\r\n    return _ListBox;\r\n}(base_1.Base));\r\nexports.ListBox = function (props, template) { return new _ListBox(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/templates.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/templates.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLItem = exports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"listbox\\\">\\n    <label class=\\\"form-label\\\" for=\\\"search-options\\\"></label>\\n    <input class=\\\"form-control\\\" id=\\\"search-options\\\" list=\\\"options\\\" placeholder=\\\"Type to search...\\\">\\n    <datalist id=\\\"options\\\"></datalist>\\n    <ul class=\\\"list-group\\\"></ul>\\n</div>\".trim();\r\nexports.HTMLItem = \"\\n<li class=\\\"list-group-item d-flex justify-content-between align-items-center active\\\">\\n    <span class=\\\"badge bg-secondary rounded-pill\\\">&times;</span>\\n</li>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listBox/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/index.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ListGroup = exports.ListGroupClassNames = exports.ListGroupItemTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/item.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/templates.js\");\r\n/**\r\n * List Group Item Types\r\n */\r\nvar ListGroupItemTypes;\r\n(function (ListGroupItemTypes) {\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Danger\"] = 1] = \"Danger\";\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Dark\"] = 2] = \"Dark\";\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Info\"] = 3] = \"Info\";\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Light\"] = 4] = \"Light\";\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Primary\"] = 5] = \"Primary\";\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Secondary\"] = 6] = \"Secondary\";\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Success\"] = 7] = \"Success\";\r\n    ListGroupItemTypes[ListGroupItemTypes[\"Warning\"] = 8] = \"Warning\";\r\n})(ListGroupItemTypes = exports.ListGroupItemTypes || (exports.ListGroupItemTypes = {}));\r\n/**\r\n * List Group Classes\r\n */\r\nexports.ListGroupClassNames = new classNames_1.ClassNames([\r\n    \"list-group-item-danger\",\r\n    \"list-group-item-dark\",\r\n    \"list-group-item-info\",\r\n    \"list-group-item-light\",\r\n    \"list-group-item-primary\",\r\n    \"list-group-item-secondary\",\r\n    \"list-group-item-success\",\r\n    \"list-group-item-warning\"\r\n]);\r\n/**\r\n * List Group\r\n * @param props The list group properties.\r\n */\r\nvar _ListGroup = /** @class */ (function (_super) {\r\n    __extends(_ListGroup, _super);\r\n    // Constructor\r\n    function _ListGroup(props, template, itemTemplate) {\r\n        if (template === void 0) { template = props.isTabs && props.colWidth > 0 && props.colWidth < 12 ? templates_1.HTMLTabs : templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._items = null;\r\n        // Configure the collapse\r\n        _this.configure(itemTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _ListGroup.prototype.configure = function (itemTemplate) {\r\n        // Update the list group\r\n        var listGroup = this.el.querySelector(\".list-group\") || this.el;\r\n        if (listGroup) {\r\n            this.props.isFlush ? listGroup.classList.add(\"list-group-flush\") : null;\r\n            this.props.isHorizontal ? listGroup.classList.add(\"list-group-horizontal\") : null;\r\n            this.props.isNumbered ? listGroup.classList.add(\"list-group-numbered\") : null;\r\n            this.props.isTabs ? listGroup.setAttribute(\"role\", \"tablist\") : null;\r\n        }\r\n        // See if the column width is defined\r\n        var column = this.el.querySelector(\".col\");\r\n        if (column) {\r\n            // Update the width\r\n            column.className = \"col-\" + this.props.colWidth;\r\n        }\r\n        // Render the items\r\n        this.renderItems(listGroup, itemTemplate);\r\n    };\r\n    // Configures the item event\r\n    _ListGroup.prototype.configureEvents = function (tab) {\r\n        var _this = this;\r\n        // Add a click event\r\n        tab.el.addEventListener(\"click\", function () {\r\n            // Parse the tabs\r\n            for (var i = 0; i < _this._items.length; i++) {\r\n                var item = _this._items[i];\r\n                // See if it's visible\r\n                if (item.isVisible) {\r\n                    // Toggle it\r\n                    item.toggle(_this.props.fadeTabs);\r\n                }\r\n            }\r\n            // Toggle the link\r\n            tab.toggle(_this.props.fadeTabs);\r\n        });\r\n    };\r\n    // Render the items\r\n    _ListGroup.prototype.renderItems = function (listGroup, itemTemplate) {\r\n        // Clear the items\r\n        this._items = [];\r\n        // Get the tab content element\r\n        var tabs = this.el.querySelector(\".tab-content\");\r\n        // Parse the items\r\n        var items = this.props.items || [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            // Create the item\r\n            var item = new item_1.ListGroupItem(items[i], tabs ? true : false, itemTemplate);\r\n            this._items.push(item);\r\n            listGroup.appendChild(item.el);\r\n            // See if we are rendering tabs\r\n            if (tabs) {\r\n                // Configure the events\r\n                this.configureEvents(item);\r\n                // Add the tab content\r\n                tabs.appendChild(item.elTab);\r\n                // See if the fade option is enabled\r\n                if (this.props.fadeTabs) {\r\n                    // Set the class name\r\n                    item.elTab.classList.add(\"fade\");\r\n                    // See if the tab is active\r\n                    if (item.props.isActive) {\r\n                        // Set the class name\r\n                        item.elTab.classList.add(\"show\");\r\n                        item.elTab.classList.add(\"active\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    _ListGroup.prototype.showTab = function (tabId) {\r\n        // Parse the tabs\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item = this._items[i];\r\n            // See if this is the target tab\r\n            if (tabId === i + 1 || item.elTab.id == tabId) {\r\n                // Toggle it if it's not visible\r\n                item.isVisible ? null : item.toggle(this.props.fadeTabs);\r\n            }\r\n            // Else, see if it's visible\r\n            else if (item.isVisible) {\r\n                // Toggle it\r\n                item.toggle(this.props.fadeTabs);\r\n            }\r\n        }\r\n    };\r\n    return _ListGroup;\r\n}(base_1.Base));\r\nexports.ListGroup = function (props, template, itemTemplate) { return new _ListGroup(props, template, itemTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/item.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/item.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ListGroupItem = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar badge_1 = __webpack_require__(/*! ../badge */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/badge/index.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/templates.js\");\r\n/**\r\n * List Group Item\r\n */\r\nvar ListGroupItem = /** @class */ (function (_super) {\r\n    __extends(ListGroupItem, _super);\r\n    // Constructor\r\n    function ListGroupItem(props, isTab, itemTemplate) {\r\n        if (isTab === void 0) { isTab = false; }\r\n        if (itemTemplate === void 0) { itemTemplate = isTab ? templates_1.HTMLTabItem : templates_1.HTMLItem; }\r\n        var _this = _super.call(this, itemTemplate, props) || this;\r\n        _this._elTab = null;\r\n        // See if this is for a tab\r\n        if (isTab) {\r\n            // Create the tab element\r\n            var el = document.createElement(\"div\");\r\n            el.innerHTML = templates_1.HTMLTab;\r\n            _this._elTab = el.firstChild;\r\n        }\r\n        // Configure the item\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        return _this;\r\n    }\r\n    // Configure the item\r\n    ListGroupItem.prototype.configure = function () {\r\n        // Set the class name\r\n        this.props.badge ? this.el.classList.add(\"d-flex\") : null;\r\n        this.props.badge ? this.el.classList.add(\"justify-content-between\") : null;\r\n        this.props.isActive ? this.el.classList.add(\"active\") : null;\r\n        // See if this item is active\r\n        if (this.props.isActive) {\r\n            // Set the class name\r\n            this.el.classList.add(\"active\");\r\n            // Set the attribute\r\n            this.el.setAttribute(\"aria-current\", \"true\");\r\n        }\r\n        // See if this item is disabled\r\n        if (this.props.isDisabled) {\r\n            // Set the class name\r\n            this.el.classList.add(\"disabled\");\r\n            // Set the attribute\r\n            this.el.setAttribute(\"aria-disabled\", \"true\");\r\n        }\r\n        // Set the class name\r\n        var className = _1.ListGroupClassNames.getByType(this.props.type);\r\n        className ? this.el.classList.add(className) : null;\r\n        // See if this is a tab\r\n        if (this._elTab) {\r\n            var tabId = this.props.tabName.replace(/[^a-zA-Z]/g, \"\");\r\n            // Set the properties\r\n            this.el.id = tabId + \"-tab\";\r\n            this.el.setAttribute(\"href\", \"#\" + tabId);\r\n            this.el.setAttribute(\"data-bs-toggle\", \"list\");\r\n            this.el.setAttribute(\"aria-controls\", tabId);\r\n            this.el.innerHTML = this.props.tabName;\r\n            // Update the tab\r\n            this._elTab.id = tabId;\r\n            this._elTab.setAttribute(\"aria-labelledby\", tabId);\r\n            this.props.isActive ? this._elTab.classList.add(\"active\") : null;\r\n        }\r\n        // Append the content\r\n        common_1.appendContent(this._elTab || this.el, this.props.content);\r\n        // See if there is a badge\r\n        if (this.props.badge) {\r\n            // Append a badge\r\n            this.el.appendChild(badge_1.Badge(this.props.badge).el);\r\n        }\r\n    };\r\n    // Configures the events\r\n    ListGroupItem.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Add a click event\r\n        this.el.addEventListener(\"click\", function (ev) {\r\n            // Prevent the page from moving to the top\r\n            ev.preventDefault();\r\n            // Execute the event\r\n            _this.props.onClick ? _this.props.onClick(_this.el, _this.props) : null;\r\n        });\r\n        // See if there is a render event\r\n        if (this.props.onRender) {\r\n            // Execute the render event\r\n            this.props.onRender(this._elTab || this.el, this.props);\r\n        }\r\n    };\r\n    Object.defineProperty(ListGroupItem.prototype, \"elTab\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // The HTML tab element\r\n        get: function () { return this._elTab; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListGroupItem.prototype, \"isVisible\", {\r\n        // Returns true if the link is visible\r\n        get: function () { return this.el.classList.contains(\"active\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Toggles a link\r\n    ListGroupItem.prototype.toggle = function (fadeTabs) {\r\n        // See if this item is currently active\r\n        if (this.isVisible) {\r\n            // Hide this link and tab\r\n            this.el.classList.remove(\"active\");\r\n            this._elTab ? this._elTab.classList.remove(\"active\") : null;\r\n            this._elTab ? this._elTab.classList.remove(\"show\") : null;\r\n        }\r\n        else {\r\n            // Show this link and tab\r\n            this.el.classList.add(\"active\");\r\n            this._elTab ? this._elTab.classList.add(\"active\") : null;\r\n            this._elTab && fadeTabs ? this._elTab.classList.add(\"show\") : null;\r\n        }\r\n    };\r\n    return ListGroupItem;\r\n}(base_1.Base));\r\nexports.ListGroupItem = ListGroupItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/templates.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/templates.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLTabs = exports.HTMLTabItem = exports.HTMLTab = exports.HTMLItem = exports.HTML = void 0;\r\n// List Group\r\nexports.HTML = \"<ul class=\\\"list-group\\\"></ul>\";\r\n// Item\r\nexports.HTMLItem = \"<li class=\\\"list-group-item\\\"></li>\";\r\n// Tab\r\nexports.HTMLTab = \"<div class=\\\"tab-pane\\\" role=\\\"tabpanel\\\"></div>\";\r\n// Tab Item\r\nexports.HTMLTabItem = \"<a class=\\\"list-group-item\\\"></a>\";\r\n// Tabs\r\nexports.HTMLTabs = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"list-group\\\" role=\\\"tablist\\\"></div>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"tab-content\\\"></div>\\n    </div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/listGroup/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/index.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Modal = exports.ModalClassNames = exports.ModalTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/templates.js\");\r\n/**\r\n * Modal Types\r\n */\r\nvar ModalTypes;\r\n(function (ModalTypes) {\r\n    ModalTypes[ModalTypes[\"Small\"] = 1] = \"Small\";\r\n    ModalTypes[ModalTypes[\"Medium\"] = 2] = \"Medium\";\r\n    ModalTypes[ModalTypes[\"Large\"] = 3] = \"Large\";\r\n    ModalTypes[ModalTypes[\"XLarge\"] = 4] = \"XLarge\";\r\n    ModalTypes[ModalTypes[\"Full\"] = 5] = \"Full\";\r\n    ModalTypes[ModalTypes[\"FullSmall\"] = 6] = \"FullSmall\";\r\n    ModalTypes[ModalTypes[\"FullMedium\"] = 7] = \"FullMedium\";\r\n    ModalTypes[ModalTypes[\"FullLarge\"] = 8] = \"FullLarge\";\r\n    ModalTypes[ModalTypes[\"FullXLarge\"] = 9] = \"FullXLarge\";\r\n})(ModalTypes = exports.ModalTypes || (exports.ModalTypes = {}));\r\n/**\r\n * Modal Classes\r\n */\r\nexports.ModalClassNames = new classNames_1.ClassNames([\r\n    \"modal-sm\",\r\n    \"\",\r\n    \"modal-lg\",\r\n    \"modal-xl\",\r\n    \"modal-fullscreen\",\r\n    \"modal-fullscreen-sm-down\",\r\n    \"modal-fullscreen-md-down\",\r\n    \"modal-fullscreen-lg-down\",\r\n    \"modal-fullscreen-xl-down\"\r\n]);\r\n/**\r\n * Modal\r\n * @param props The modal properties.\r\n */\r\nvar _Modal = /** @class */ (function (_super) {\r\n    __extends(_Modal, _super);\r\n    // Constructor\r\n    function _Modal(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._options = null;\r\n        _this._tranisitioningFl = false;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Modal.prototype.configure = function () {\r\n        // Set the modal attributes\r\n        this.props.id ? this.el.id = this.props.id : null;\r\n        this.props.disableFade ? null : this.el.classList.add(\"fade\");\r\n        // Update the dialog\r\n        var dialog = this.el.querySelector(\".modal-dialog\");\r\n        if (dialog) {\r\n            this.props.isCentered ? dialog.classList.add(\"modal-dialog-centered\") : null;\r\n            // Add the class name, based on the type\r\n            var className = exports.ModalClassNames.getByType(this.props.type);\r\n            className ? dialog.classList.add(className) : null;\r\n            // Update the title\r\n            this.setTitle(this.props.title);\r\n            // See if we are hiding the close button\r\n            if (this.props.hideCloseButton) {\r\n                // Remove the close button\r\n                var closeButton = dialog.querySelector(\".btn-close\");\r\n                closeButton ? closeButton.parentNode.removeChild(closeButton) : null;\r\n            }\r\n        }\r\n        // Set the body\r\n        common_1.appendContent(this.el.querySelector(\".modal-body\"), this.props.body);\r\n        // Set the footer\r\n        common_1.appendContent(this.el.querySelector(\".modal-footer\"), this.props.footer);\r\n        // Get the modal options\r\n        this._options = this.props.options;\r\n        if (this._options) {\r\n            // Set the backdrop\r\n            if (typeof (this._options.backdrop) === \"boolean\") {\r\n                this.el.setAttribute(\"data-bs-backdrop\", this._options.backdrop ? \"true\" : \"false\");\r\n            }\r\n            // Set the focus\r\n            if (typeof (this._options.focus) === \"boolean\") {\r\n                this.el.setAttribute(\"data-bs-focus\", this._options.backdrop ? \"true\" : \"false\");\r\n            }\r\n            // Set the keyboard\r\n            if (typeof (this._options.keyboard) === \"boolean\") {\r\n                this.el.setAttribute(\"data-bs-keyboard\", this._options.backdrop ? \"true\" : \"false\");\r\n            }\r\n            // See if we are showing the modal\r\n            if (this._options.visible) {\r\n                // Toggle the modal\r\n                this.toggle();\r\n            }\r\n        }\r\n    };\r\n    // Configure the events\r\n    _Modal.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Execute the events\r\n        this.props.onRenderBody ? this.props.onRenderBody(this.el.querySelector(\".modal-body\")) : null;\r\n        this.props.onRenderFooter ? this.props.onRenderFooter(this.el.querySelector(\".modal-footer\")) : null;\r\n        // Get the close button\r\n        var elClose = this.el.querySelector(\".btn-close\");\r\n        if (elClose) {\r\n            // Add a click event\r\n            elClose.addEventListener(\"click\", function () {\r\n                // Hide the modal\r\n                _this.hide();\r\n                // Call the event\r\n                _this.props.onClose ? _this.props.onClose(_this.el) : null;\r\n            });\r\n        }\r\n        // See if the keyboard option is set\r\n        if (this._options && this._options.keyboard) {\r\n            // Add a click event\r\n            this.el.addEventListener(\"keydown\", function (ev) {\r\n                // See if the escape key was clicked and the modal is visible\r\n                if (ev.keyCode === 27 && _this.isVisible) {\r\n                    // Toggle the modal\r\n                    _this.toggle();\r\n                }\r\n            });\r\n        }\r\n        // See if we are auto closing the modal\r\n        var autoClose = this.props.options && typeof (this.props.options.autoClose) === \"boolean\" ? this.props.options.autoClose : true;\r\n        if (autoClose) {\r\n            // Add a click event to the modal\r\n            document.body.addEventListener(\"click\", function (ev) {\r\n                var elContent = _this.el.querySelector(\".modal-content\");\r\n                // Do nothing if we are tranisitionsing\r\n                if (_this._tranisitioningFl) {\r\n                    return;\r\n                }\r\n                // Do nothing if we clicked within the modal\r\n                if (ev.composedPath().includes(elContent)) {\r\n                    return;\r\n                }\r\n                else {\r\n                    // Get the mouse coordinates\r\n                    var x = ev.clientX;\r\n                    var y = ev.clientY;\r\n                    var elCoordinate = elContent.getBoundingClientRect();\r\n                    // See if we clicked within the modal\r\n                    if (x <= elCoordinate.right && x >= elCoordinate.left && y <= elCoordinate.bottom && y >= elCoordinate.top) {\r\n                        return;\r\n                    }\r\n                    // Else, see if something was selected\r\n                    else if (x == 0 && y == 0) {\r\n                        return;\r\n                    }\r\n                }\r\n                // Close the modal if it's visible\r\n                if (_this.isVisible) {\r\n                    _this.toggle();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Hides the modal\r\n    _Modal.prototype.hide = function () {\r\n        // Toggle the modal\r\n        this.isVisible ? this.toggle() : null;\r\n    };\r\n    Object.defineProperty(_Modal.prototype, \"isVisible\", {\r\n        // Returns true if the modal is visible\r\n        get: function () { return this.el.classList.contains(\"show\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Updates the title\r\n    _Modal.prototype.setTitle = function (title) {\r\n        // Get the title\r\n        var elTitle = this.el.querySelector(\".modal-title\");\r\n        if (elTitle) {\r\n            // Set the text\r\n            elTitle.innerHTML = title == null ? \"\" : title;\r\n        }\r\n    };\r\n    // Updates the type\r\n    _Modal.prototype.setType = function (modalType) {\r\n        var dialog = this.el.querySelector(\".modal-dialog\");\r\n        // Parse the class names\r\n        exports.ModalClassNames.parse(function (className) {\r\n            // Remove the class names\r\n            className ? dialog.classList.remove(className) : null;\r\n        });\r\n        // Set the class name\r\n        var className = exports.ModalClassNames.getByType(modalType);\r\n        className ? dialog.classList.add(className) : null;\r\n    };\r\n    // Shows the modal\r\n    _Modal.prototype.show = function () {\r\n        // Toggle the modal\r\n        this.isVisible ? null : this.toggle();\r\n    };\r\n    // Toggles the modal\r\n    _Modal.prototype.toggle = function () {\r\n        var _this = this;\r\n        var backdrop = document.querySelector(\".modal-backdrop\");\r\n        // Set the flag\r\n        this._tranisitioningFl = true;\r\n        // See if this modal is visible\r\n        if (this.isVisible) {\r\n            // Hide the modal\r\n            this.el.classList.remove(\"show\");\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                // Hide the modal\r\n                _this.el.style.display = \"\";\r\n                // Remove the backdrop\r\n                backdrop ? document.body.removeChild(backdrop) : null;\r\n                backdrop = null;\r\n                // Set the flag\r\n                _this._tranisitioningFl = false;\r\n            }, 250);\r\n        }\r\n        else {\r\n            // Start the animation\r\n            this.el.classList.add(\"modal-open\");\r\n            this.el.style.display = \"block\";\r\n            // Create the backdrop if we are showing it\r\n            var showBackdrop = this._options && typeof (this._options.backdrop) === \"boolean\" ? this._options.backdrop : true;\r\n            if (showBackdrop && backdrop == null) {\r\n                backdrop = document.createElement(\"div\");\r\n                backdrop.classList.add(\"modal-backdrop\");\r\n                backdrop.classList.add(\"fade\");\r\n                backdrop.classList.add(\"show\");\r\n                document.body.appendChild(backdrop);\r\n            }\r\n            // Set the focus\r\n            this.el.focus();\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                // Show the modal\r\n                _this.el.classList.remove(\"modal-open\");\r\n                _this.el.classList.add(\"show\");\r\n                // Set the flag\r\n                _this._tranisitioningFl = false;\r\n            }, 250);\r\n        }\r\n    };\r\n    return _Modal;\r\n}(base_1.Base));\r\nexports.Modal = function (props, template) { return new _Modal(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/templates.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/templates.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"modal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\"></h5>\\n                <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" area-label=\\\"Close\\\"></button>\\n            </div>\\n            <div class=\\\"modal-body\\\"></div>\\n            <div class=\\\"modal-footer\\\"></div>\\n        </div>\\n    </div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/modal/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Nav = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar link_1 = __webpack_require__(/*! ./link */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/link.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/templates.js\");\r\n/**\r\n * Navigation\r\n * @param props - The navigation properties.\r\n */\r\nvar _Nav = /** @class */ (function (_super) {\r\n    __extends(_Nav, _super);\r\n    // Constructor\r\n    function _Nav(props, template, itemTemplate) {\r\n        if (template === void 0) { template = props.isTabs ? (props.isVertical ? templates_1.HTMLVerticalTabs : templates_1.HTMLTabs) : templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._links = null;\r\n        // Configure the collapse\r\n        _this.configure(itemTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Nav.prototype.configure = function (itemTemplate) {\r\n        // Update the navigation\r\n        var nav = this.el.querySelector(\".nav\");\r\n        if (nav) {\r\n            this.props.id ? nav.id = this.props.id : null;\r\n            this.props.enableFill ? this.el.classList.add(\"nav-fill\") : null;\r\n            this.props.isJustified ? this.el.classList.add(\"nav-justified\") : null;\r\n            this.props.isPills ? this.el.classList.add(\"nav-pills\") : null;\r\n            this.props.isTabs ? this.el.classList.add(\"nav-tabs\") : null;\r\n            this.props.isVertical ? this.el.classList.add(\"flex-column\") : null;\r\n        }\r\n        // Render the nav links\r\n        this.renderItems(itemTemplate);\r\n    };\r\n    // Configures the link event\r\n    _Nav.prototype.configureEvents = function (tab) {\r\n        var _this = this;\r\n        // Add a click event\r\n        tab.el.addEventListener(\"click\", function () {\r\n            // Parse the links\r\n            for (var i = 0; i < _this._links.length; i++) {\r\n                var link = _this._links[i];\r\n                // See if it's visible\r\n                if (link.isVisible) {\r\n                    // Toggle it\r\n                    link.toggle(_this.props.fadeTabs);\r\n                }\r\n            }\r\n            // Toggle the link\r\n            tab.toggle(_this.props.fadeTabs);\r\n        });\r\n    };\r\n    // Renders the links\r\n    _Nav.prototype.renderItems = function (itemTemplate) {\r\n        // Clear the links\r\n        this._links = [];\r\n        // Get the nav and tab elements\r\n        var nav = this.el.querySelector(\".nav\") || this.el;\r\n        if (nav) {\r\n            var tabs = this.el.querySelector(\".tab-content\");\r\n            // Parse the navigation items\r\n            var links = this.props.items || [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                // Create the link\r\n                var link = new link_1.NavLink(links[i], tabs ? true : false, itemTemplate);\r\n                nav.appendChild(link.el);\r\n                this._links.push(link);\r\n                // See if we are rendering tabs\r\n                if (tabs) {\r\n                    // Configure the events\r\n                    this.configureEvents(link);\r\n                    // Add the tab content\r\n                    tabs.appendChild(link.elTab);\r\n                    // See if the fade option is enabled\r\n                    if (this.props.fadeTabs) {\r\n                        // Set the class name\r\n                        link.elTab.classList.add(\"fade\");\r\n                        // See if the tab is active\r\n                        if (link.props.isActive) {\r\n                            // Set the class name\r\n                            link.elTab.classList.add(\"show\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Shows a tab\r\n    _Nav.prototype.showTab = function (tabId) {\r\n        // Ensure tabs exist\r\n        if (this.props.isTabs) {\r\n            // Parse the tabs\r\n            for (var i = 0; i < this._links.length; i++) {\r\n                var link = this._links[i];\r\n                // See if this is the target tab\r\n                if (tabId === i + 1 || link.elTab.id == tabId) {\r\n                    // Toggle it if it's not visible\r\n                    link.isVisible ? null : link.toggle(this.props.fadeTabs);\r\n                }\r\n                // Else, see if it's visible\r\n                else if (link.isVisible) {\r\n                    // Toggle it\r\n                    link.toggle(this.props.fadeTabs);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return _Nav;\r\n}(base_1.Base));\r\nexports.Nav = function (props, template, itemTemplate) { return new _Nav(props, template, itemTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/link.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/link.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NavLink = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/templates.js\");\r\n/**\r\n * Nav Link\r\n */\r\nvar NavLink = /** @class */ (function (_super) {\r\n    __extends(NavLink, _super);\r\n    // Constructor\r\n    function NavLink(props, isTab, template) {\r\n        if (template === void 0) { template = templates_1.HTMLLink; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._elLink = null;\r\n        _this._elTab = null;\r\n        // See if this is for a tab\r\n        if (isTab) {\r\n            // Create the tab element\r\n            var el = document.createElement(\"div\");\r\n            el.innerHTML = templates_1.HTMLTab;\r\n            _this._elTab = el.firstChild;\r\n        }\r\n        // Configure the item\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        return _this;\r\n    }\r\n    // Configure the item\r\n    NavLink.prototype.configure = function () {\r\n        // Update the link\r\n        this._elLink = this.el.querySelector(\"a.nav-link\");\r\n        if (this._elLink) {\r\n            this.props.isActive ? this._elLink.classList.add(\"active\") : null;\r\n            this.props.isDisabled ? this._elLink.classList.add(\"disabled\") : null;\r\n            this._elLink.innerHTML = this.props.title == null ? \"\" : this.props.title;\r\n            // See if this is a tab\r\n            if (this._elTab) {\r\n                var tabId = this.props.title.replace(/[^a-zA-Z]/g, \"\");\r\n                // Set the properties\r\n                this._elLink.id = tabId + \"-tab\";\r\n                this._elLink.setAttribute(\"href\", \"#\" + tabId);\r\n                this._elLink.setAttribute(\"data-bs-toggle\", \"tab\");\r\n                this._elLink.setAttribute(\"aria-controls\", tabId);\r\n                this._elLink.innerHTML = this.props.title == null ? \"\" : this.props.title;\r\n                // Update the tab\r\n                this._elTab.id = tabId;\r\n                this._elTab.setAttribute(\"aria-labelledby\", tabId);\r\n                // See if this tab is active\r\n                if (this.props.isActive) {\r\n                    // Update the classes\r\n                    this._elTab.classList.add(\"active\");\r\n                }\r\n                // Append the content\r\n                common_1.appendContent(this._elTab, this.props.tabContent);\r\n            }\r\n            else {\r\n                // Set the properties\r\n                this._elLink.setAttribute(\"href\", this.props.href || \"#\");\r\n            }\r\n        }\r\n    };\r\n    // Configures the events\r\n    NavLink.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Add a click event\r\n        this.el.addEventListener(\"click\", function (ev) {\r\n            // Prevent the page from moving to the top\r\n            ev.preventDefault();\r\n            // Execute the event\r\n            _this.props.onClick ? _this.props.onClick(_this.props, ev) : null;\r\n        });\r\n        // Execute the tab render event\r\n        this._elTab && this.props.onRenderTab ? this.props.onRenderTab(this.props, this._elTab) : null;\r\n    };\r\n    Object.defineProperty(NavLink.prototype, \"elTab\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // The HTML tab element\r\n        get: function () { return this._elTab; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NavLink.prototype, \"isVisible\", {\r\n        // Returns true if the link is visible\r\n        get: function () { return this._elLink.classList.contains(\"active\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Toggles a link\r\n    NavLink.prototype.toggle = function (fadeTabs) {\r\n        // See if this item is currently active\r\n        if (this.isVisible) {\r\n            // Hide this link and tab\r\n            this._elLink.classList.remove(\"active\");\r\n            this._elTab.classList.remove(\"active\");\r\n            this._elTab.classList.remove(\"show\");\r\n        }\r\n        else {\r\n            // Show this link and tab\r\n            this._elLink.classList.add(\"active\");\r\n            this._elTab.classList.add(\"active\");\r\n            fadeTabs ? this._elTab.classList.add(\"show\") : null;\r\n        }\r\n    };\r\n    return NavLink;\r\n}(base_1.Base));\r\nexports.NavLink = NavLink;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/link.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/templates.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/templates.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLVerticalTabs = exports.HTMLTabs = exports.HTMLTab = exports.HTMLLink = exports.HTML = void 0;\r\n// Nav\r\nexports.HTML = \"<ul class=\\\"nav\\\"></ul>\";\r\n// Link\r\nexports.HTMLLink = \"\\n<li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" href=\\\"#\\\"></a>\\n</li>\".trim();\r\n// Tab\r\nexports.HTMLTab = \"<div class=\\\"tab-pane\\\" role=\\\"tabpanel\\\"></div>\";\r\n// Tabs\r\nexports.HTMLTabs = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\"></ul>\\n        <div class=\\\"tab-content\\\"></div>\\n    </div>\\n</div>\".trim();\r\n// Vertical Tabs\r\nexports.HTMLVerticalTabs = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\">\\n        <ul class=\\\"nav flex-column\\\" role=\\\"tablist\\\"></ul>\\n    </div>\\n    <div class=\\\"col-9\\\">\\n        <div class=\\\"tab-content\\\"></div>\\n    </div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/nav/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/index.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Navbar = exports.NavbarTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar button_1 = __webpack_require__(/*! ../button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/item.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/templates.js\");\r\n/**\r\n * Navbar Types\r\n */\r\nvar NavbarTypes;\r\n(function (NavbarTypes) {\r\n    NavbarTypes[NavbarTypes[\"Dark\"] = 1] = \"Dark\";\r\n    NavbarTypes[NavbarTypes[\"Light\"] = 2] = \"Light\";\r\n    NavbarTypes[NavbarTypes[\"Primary\"] = 3] = \"Primary\";\r\n})(NavbarTypes = exports.NavbarTypes || (exports.NavbarTypes = {}));\r\n/**\r\n * Navbar\r\n */\r\nvar _Navbar = /** @class */ (function (_super) {\r\n    __extends(_Navbar, _super);\r\n    // Constructor\r\n    function _Navbar(props, template, itemTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._items = null;\r\n        // Configure the collapse\r\n        _this.configure(itemTemplate);\r\n        // Configure search\r\n        _this.configureSearch();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Navbar.prototype.configure = function (itemTemplate) {\r\n        // See if there is a brand\r\n        var brand = this.el.querySelector(\".navbar-brand\");\r\n        if (brand) {\r\n            if (this.props.brand) {\r\n                // Update the brand\r\n                this.props.brandUrl ? brand.href = this.props.brandUrl : null;\r\n                brand.innerHTML = this.props.brand == null ? \"\" : this.props.brand;\r\n            }\r\n            else {\r\n                // Remove the brand\r\n                brand.parentNode.removeChild(brand);\r\n            }\r\n        }\r\n        // Update the nav bar\r\n        var navbar = this.el.querySelector(\".navbar-collapse\");\r\n        if (navbar) {\r\n            navbar.id = this.props.id || \"navbar_content\";\r\n        }\r\n        // Set the toggle\r\n        var toggler = this.el.querySelector(\".navbar-toggler\");\r\n        if (toggler) {\r\n            toggler.setAttribute(\"aria-controls\", navbar.id);\r\n            toggler.setAttribute(\"data-bs-target\", \"#\" + navbar.id);\r\n        }\r\n        // Set the scroll\r\n        var nav = this.el.querySelector(\".navbar-nav\");\r\n        if (nav && this.props.enableScrolling) {\r\n            // Add the class\r\n            nav.classList.add(\"navbar-nav-scroll\");\r\n        }\r\n        // Add the classes based on the type\r\n        this._btnSearch = this.el.querySelector(\"button[type='submit']\");\r\n        // Set the type\r\n        this.setType(this.props.type);\r\n        // Render the items\r\n        this.renderItems(itemTemplate);\r\n    };\r\n    // Configure the events\r\n    _Navbar.prototype.configureEvents = function () {\r\n        var props = this.props.searchBox || {};\r\n        // See if search events exist\r\n        var searchbox = this.el.querySelector(\"form input\");\r\n        if (searchbox) {\r\n            // Set a keydown event to catch the \"Enter\" key being pressed\r\n            searchbox.addEventListener(\"keydown\", function (ev) {\r\n                // See if the \"Enter\" key was pressed\r\n                if (ev.keyCode == 13) {\r\n                    // Disable the postback\r\n                    ev.preventDefault();\r\n                    // See if there is a search event\r\n                    if (props.onSearch) {\r\n                        // Call the event\r\n                        props.onSearch(searchbox.value, ev);\r\n                    }\r\n                }\r\n            });\r\n            // See if a change event exists\r\n            if (props.onChange) {\r\n                // Add an input event\r\n                searchbox.addEventListener(\"input\", function (ev) {\r\n                    // Call the event\r\n                    props.onChange(searchbox.value, ev);\r\n                });\r\n                // Add a clear event\r\n                searchbox.addEventListener(\"clear\", function (ev) {\r\n                    // Call the event\r\n                    props.onChange(searchbox.value, ev);\r\n                });\r\n                // Edge has a bug where the clear event isn't triggered\r\n                // See if this is the Edge browser\r\n                if (window.navigator.userAgent.indexOf(\"Edge\") > 0) {\r\n                    // Detect the mouse click event\r\n                    searchbox.addEventListener(\"mouseup\", function () {\r\n                        var currentValue = searchbox.value;\r\n                        // Set a timeout to see if the value is cleared\r\n                        setTimeout(function () {\r\n                            // Compare the values\r\n                            if (currentValue != searchbox.value) {\r\n                                // Call the event\r\n                                props.onChange(searchbox.value);\r\n                            }\r\n                        }, 1);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // See if a search event exists\r\n        var button = this.el.querySelector(\"form button\");\r\n        if (button && props.onSearch) {\r\n            // Add a click event\r\n            button.addEventListener(\"click\", function (ev) {\r\n                // Prevent the page from moving to the top\r\n                ev.preventDefault();\r\n                // Call the event\r\n                props.onSearch(searchbox.value);\r\n            });\r\n        }\r\n    };\r\n    // Configures search\r\n    _Navbar.prototype.configureSearch = function () {\r\n        // See if we are rendering a search box\r\n        var search = this.el.querySelector(\"form\");\r\n        if (search) {\r\n            if (this.props.enableSearch || this.props.searchBox) {\r\n                var props = this.props.searchBox || {};\r\n                // Update the searchbox\r\n                var searchbox = search.querySelector(\"input\");\r\n                searchbox.placeholder = props.placeholder || searchbox.placeholder;\r\n                searchbox.value = props.value || \"\";\r\n                props.btnText ? searchbox.setAttribute(\"aria-label\", props.btnText) : null;\r\n                // See if we are rendering a button\r\n                var button = search.querySelector(\"button\");\r\n                if (props.hideButton == true) {\r\n                    // Remove the button\r\n                    search.removeChild(button);\r\n                }\r\n                else {\r\n                    // Set the button type class name\r\n                    var className = button_1.ButtonClassNames.getByType(props.btnType);\r\n                    className ? button.classList.add(className) : null;\r\n                }\r\n            }\r\n            else {\r\n                // Remove the searchbox\r\n                search.parentNode.removeChild(search);\r\n            }\r\n        }\r\n    };\r\n    // Render the items\r\n    _Navbar.prototype.renderItems = function (itemTemplate) {\r\n        // Clear the list\r\n        this._items = [];\r\n        // Create the navbar list\r\n        var list = this.el.querySelector(\"ul.navbar-nav\");\r\n        if (list) {\r\n            // Parse the items\r\n            var items = this.props.items || [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                // Create the item\r\n                var item = new item_1.NavbarItem(items[i], this.props, itemTemplate);\r\n                this._items.push(item);\r\n                list.appendChild(item.el);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Public Methods\r\n     */\r\n    // Updates the navbar template type\r\n    _Navbar.prototype.setType = function (navbarType) {\r\n        // Remove the classes\r\n        this.el.classList.remove(\"navbar-dark\");\r\n        this.el.classList.remove(\"navbar-light\");\r\n        this.el.classList.remove(\"bg-dark\");\r\n        this.el.classList.remove(\"bg-light\");\r\n        this.el.classList.remove(\"bg-primary\");\r\n        this._btnSearch.classList.remove(\"btn-outline-info\");\r\n        this._btnSearch.classList.remove(\"btn-outline-light\");\r\n        this._btnSearch.classList.remove(\"btn-outline-primary\");\r\n        // See which classes to add\r\n        switch (navbarType) {\r\n            // Dark\r\n            case NavbarTypes.Dark:\r\n                // Add the class\r\n                this.el.classList.add(\"navbar-dark\");\r\n                this.el.classList.add(\"bg-dark\");\r\n                this._btnSearch.classList.add(\"btn-outline-info\");\r\n                break;\r\n            // Primary\r\n            case NavbarTypes.Primary:\r\n                // Add the class\r\n                this.el.classList.add(\"navbar-dark\");\r\n                this.el.classList.add(\"bg-primary\");\r\n                this._btnSearch.classList.add(\"btn-outline-light\");\r\n                break;\r\n            // Default - Light\r\n            default:\r\n                // Add the class\r\n                this.el.classList.add(\"navbar-light\");\r\n                this.el.classList.add(\"bg-light\");\r\n                this._btnSearch.classList.add(\"btn-outline-primary\");\r\n                break;\r\n        }\r\n    };\r\n    return _Navbar;\r\n}(base_1.Base));\r\nexports.Navbar = function (props, template, itemTemplate) { return new _Navbar(props, template, itemTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/item.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/item.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NavbarItem = void 0;\r\nvar dropdown_1 = __webpack_require__(/*! ../dropdown */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/dropdown/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/templates.js\");\r\n/**\r\n * Navbar Item\r\n */\r\nvar NavbarItem = /** @class */ (function () {\r\n    // Constructor\r\n    function NavbarItem(props, parent, template) {\r\n        if (template === void 0) { template = templates_1.HTMLItem; }\r\n        this._el = null;\r\n        this._parent = null;\r\n        this._props = null;\r\n        // Save the properties\r\n        this._parent = parent;\r\n        this._props = props;\r\n        // Create the item\r\n        var el = document.createElement(\"div\");\r\n        el.innerHTML = template;\r\n        this._el = el.firstChild;\r\n        // Configure the item\r\n        this.configure();\r\n        // Configure the events\r\n        this.configureEvents();\r\n    }\r\n    // Configures the item\r\n    NavbarItem.prototype.configure = function () {\r\n        var link = null;\r\n        // See if this is a dropdown\r\n        if (this._props.items) {\r\n            // Render a dropdown menu\r\n            this._el = dropdown_1.Dropdown({\r\n                isReadonly: this._props.isDisabled,\r\n                items: this._props.items,\r\n                label: this._props.text,\r\n                navFl: true\r\n            }).el;\r\n            // Update the link\r\n            link = this._el.querySelector(\".nav-link\");\r\n            if (link) {\r\n                this._props.isActive ? link.classList.add(\"active\") : null;\r\n            }\r\n        }\r\n        // Else, ensure there is text\r\n        else if (this._props.text) {\r\n            // Update the link\r\n            link = this._el.querySelector(\"a\");\r\n            if (link) {\r\n                this._props.isActive ? link.classList.add(\"active\") : link.removeChild(link.querySelector('span'));\r\n                link.innerHTML = this._props.text == null ? \"\" : this._props.text;\r\n            }\r\n        }\r\n        // Update the link\r\n        if (link) {\r\n            this._props.target ? link.setAttribute(\"data-bs-target\", this._props.target) : null;\r\n            this._props.toggle ? link.setAttribute(\"data-bs-toggle\", this._props.toggle) : null;\r\n            // See if the link is disabled\r\n            if (this._props.isDisabled) {\r\n                // Add the class and set the tab index\r\n                link.classList.add(\"disabled\");\r\n                link.setAttribute(\"aria-disabled\", \"true\");\r\n                link.tabIndex = -1;\r\n            }\r\n        }\r\n    };\r\n    // Configures the events\r\n    NavbarItem.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Ensure it's not disabled\r\n        if (this._props.isDisabled) {\r\n            return;\r\n        }\r\n        // Add a click event\r\n        this._el.addEventListener(\"click\", function (ev) {\r\n            // Prevent the page from moving to the top\r\n            ev.preventDefault();\r\n            // Call the events\r\n            _this._props.onClick ? _this._props.onClick(_this._props, ev) : null;\r\n            _this._parent.onClick ? _this._parent.onClick(_this._props, ev) : null;\r\n        });\r\n    };\r\n    Object.defineProperty(NavbarItem.prototype, \"el\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        get: function () { return this._el; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return NavbarItem;\r\n}());\r\nexports.NavbarItem = NavbarItem;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/item.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/templates.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/templates.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLItem = exports.HTML = void 0;\r\n// Navbar\r\nexports.HTML = \"\\n<nav class=\\\"navbar navbar-expand-lg\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"></a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\"\\n            aria-label=\\\"Toggle Navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\">\\n            <ul class=\\\"navbar-nav mr-auto mb-2 mb-lg-0\\\"></ul>\\n        </div>\\n        <form class=\\\"d-flex\\\">\\n            <input class=\\\"form-control mr-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" />\\n            <button class=\\\"btn\\\" type=\\\"submit\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\".trim();\r\n// Item\r\nexports.HTMLItem = \"\\n<li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" href=\\\"#\\\" role=\\\"link\\\">\\n        <span class=\\\"visually-hidden\\\">(current)</span>\\n    </a>\\n</li>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/navbar/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/index.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Offcanvas = exports.OffcanvasClassNames = exports.OffcanvasTypes = void 0;\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/templates.js\");\r\n/**\r\n * Offcanvas Types\r\n */\r\nvar OffcanvasTypes;\r\n(function (OffcanvasTypes) {\r\n    OffcanvasTypes[OffcanvasTypes[\"Bottom\"] = 1] = \"Bottom\";\r\n    OffcanvasTypes[OffcanvasTypes[\"End\"] = 2] = \"End\";\r\n    OffcanvasTypes[OffcanvasTypes[\"Start\"] = 3] = \"Start\";\r\n})(OffcanvasTypes = exports.OffcanvasTypes || (exports.OffcanvasTypes = {}));\r\n/**\r\n * Offcanvas Classes\r\n */\r\nexports.OffcanvasClassNames = new classNames_1.ClassNames([\r\n    \"offcanvas-bottom\",\r\n    \"offcanvas-end\",\r\n    \"offcanvas-start\"\r\n]);\r\n/**\r\n * Offcanvas\r\n */\r\nvar _Offcanvas = /** @class */ (function (_super) {\r\n    __extends(_Offcanvas, _super);\r\n    // Constructor\r\n    function _Offcanvas(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._tranisitioningFl = false;\r\n        // Configure the offcanvas\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Offcanvas.prototype.configure = function () {\r\n        // Set the attributes\r\n        this.props.id ? this.el.id = this.props.id : null;\r\n        // Set the type\r\n        this.setType(this.props.type);\r\n        // Get the options\r\n        var options = this.props.options || {\r\n            backdrop: true,\r\n            keyboard: true,\r\n            scroll: false\r\n        };\r\n        // Set the properties\r\n        options.backdrop ? this.el.setAttribute(\"data-bs-body\", \"backdrop\") : null;\r\n        options.scroll ? this.el.setAttribute(\"data-bs-body\", \"scroll\") : null;\r\n        // Set the header\r\n        common_1.appendContent(this.el.querySelector(\".offcanvas-header > div\"), this.props.title);\r\n        // Set the body\r\n        common_1.appendContent(this.el.querySelector(\".offcanvas-body\"), this.props.body);\r\n        // Set the focus\r\n        if (options.focus) {\r\n            this.el.focus();\r\n        }\r\n        // Set the visibility\r\n        if (options.visible) {\r\n            this.toggle();\r\n        }\r\n    };\r\n    // Configure the events\r\n    _Offcanvas.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Execute the events\r\n        this.props.onRenderHeader ? this.props.onRenderHeader(this.el.querySelector(\".offcanvas-header > div\"), this.props) : null;\r\n        this.props.onRenderBody ? this.props.onRenderBody(this.el.querySelector(\".offcanvas-body\"), this.props) : null;\r\n        // Get the close button\r\n        var elClose = this.el.querySelector(\".btn-close\");\r\n        if (elClose) {\r\n            // Add a click event\r\n            elClose.addEventListener(\"click\", function () {\r\n                // Hide the modal\r\n                _this.hide();\r\n            });\r\n        }\r\n        // See if we are auto closing the offcanvas\r\n        var autoClose = this.props.options && typeof (this.props.options.autoClose) === \"boolean\" ? this.props.options.autoClose : true;\r\n        if (autoClose) {\r\n            // Add a click event to the offcanvas\r\n            document.body.addEventListener(\"click\", function (ev) {\r\n                // Do nothing if we are tranisitionsing\r\n                if (_this._tranisitioningFl) {\r\n                    return;\r\n                }\r\n                // Do nothing if we clicked within the offcanvas\r\n                if (ev.composedPath().includes(_this.el)) {\r\n                    return;\r\n                }\r\n                else {\r\n                    // Get the mouse coordinates\r\n                    var x = ev.clientX;\r\n                    var y = ev.clientY;\r\n                    var elCoordinate = _this.el.getBoundingClientRect();\r\n                    // See if we clicked within the offcanvas\r\n                    if (x <= elCoordinate.right && x >= elCoordinate.left && y <= elCoordinate.bottom && y >= elCoordinate.top) {\r\n                        return;\r\n                    }\r\n                    // Else, see if something was selected\r\n                    else if (x == 0 && y == 0) {\r\n                        return;\r\n                    }\r\n                }\r\n                // Close the offcanvas if it's visible\r\n                if (_this.isVisible) {\r\n                    _this.toggle();\r\n                }\r\n            });\r\n        }\r\n        // See if the keyboard option is set\r\n        if (this.props.options && this.props.options.keyboard) {\r\n            // Add a click event\r\n            this.el.addEventListener(\"keydown\", function (ev) {\r\n                // See if the escape key was clicked and the modal is visible\r\n                if (ev.keyCode === 27 && _this.isVisible) {\r\n                    // Toggle the modal\r\n                    _this.toggle();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Hides the modal\r\n    _Offcanvas.prototype.hide = function () {\r\n        // Toggle the modal\r\n        this.isVisible ? this.toggle() : null;\r\n    };\r\n    Object.defineProperty(_Offcanvas.prototype, \"isVisible\", {\r\n        // Returns true if the modal is visible\r\n        get: function () { return this.el.classList.contains(\"show\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Sets the offcanvas type\r\n    _Offcanvas.prototype.setType = function (offcanvasType) {\r\n        var _this = this;\r\n        // Parse the class names\r\n        exports.OffcanvasClassNames.parse(function (className) {\r\n            // Remove the class names\r\n            _this.el.classList.remove(className);\r\n        });\r\n        // Set the class name\r\n        var className = exports.OffcanvasClassNames.getByType(offcanvasType) || exports.OffcanvasClassNames.getByType(OffcanvasTypes.End);\r\n        this.el.classList.add(className);\r\n    };\r\n    // Shows the modal\r\n    _Offcanvas.prototype.show = function () {\r\n        // Toggle the modal\r\n        this.isVisible ? null : this.toggle();\r\n    };\r\n    // Toggles the modal\r\n    _Offcanvas.prototype.toggle = function () {\r\n        var _this = this;\r\n        // Set the flag\r\n        this._tranisitioningFl = true;\r\n        // See if this modal is visible\r\n        if (this.isVisible) {\r\n            // Hide the modal\r\n            this.el.classList.add(\"offcanvas-toggling\");\r\n            this.el.classList.remove(\"show\");\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                _this.el.style.visibility = \"hidden\";\r\n                _this.el.classList.remove(\"offcanvas-toggling\");\r\n                // Set the flag\r\n                _this._tranisitioningFl = false;\r\n            }, 250);\r\n            // Remove the backdrop\r\n            document.body.classList.remove(\"offcanvas-backdrop\");\r\n        }\r\n        else {\r\n            // See if we are showing the backdrop\r\n            if (this.props.options && this.props.options.backdrop) {\r\n                // Add the backdrop\r\n                document.body.classList.add(\"offcanvas-backdrop\");\r\n            }\r\n            // Show the modal\r\n            this.el.style.visibility = \"visible\";\r\n            this.el.classList.add(\"offcanvas-toggling\");\r\n            this.el.classList.add(\"show\");\r\n            // Wait for the animation to complete\r\n            setTimeout(function () {\r\n                // Update the class\r\n                _this.el.classList.remove(\"offcanvas-toggling\");\r\n                // Set the flag\r\n                _this._tranisitioningFl = false;\r\n            }, 250);\r\n        }\r\n    };\r\n    return _Offcanvas;\r\n}(base_1.Base));\r\nexports.Offcanvas = function (props, template) { return new _Offcanvas(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/templates.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/templates.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"offcanvas\\\" tabindex=\\\"-1\\\">\\n    <div class=\\\"offcanvas-header\\\">\\n        <div></div>\\n        <button type=\\\"button\\\" class=\\\"btn-close text-reset\\\" data-bs-dismiss=\\\"offcanvas\\\" aria-label=\\\"Close\\\"></button>\\n    </div>\\n    <div class=\\\"offcanvas-body\\\"></div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/offcanvas/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Pagination = exports.PaginationAlignment = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/templates.js\");\r\n/**\r\n * Pagination Alignment\r\n */\r\nvar PaginationAlignment;\r\n(function (PaginationAlignment) {\r\n    PaginationAlignment[PaginationAlignment[\"Center\"] = 1] = \"Center\";\r\n    PaginationAlignment[PaginationAlignment[\"Left\"] = 2] = \"Left\";\r\n    PaginationAlignment[PaginationAlignment[\"Right\"] = 3] = \"Right\";\r\n})(PaginationAlignment = exports.PaginationAlignment || (exports.PaginationAlignment = {}));\r\n/**\r\n * Pagination\r\n */\r\nvar _Pagination = /** @class */ (function (_super) {\r\n    __extends(_Pagination, _super);\r\n    // Constructor\r\n    function _Pagination(props, template, itemTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        if (itemTemplate === void 0) { itemTemplate = templates_1.HTMLItem; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._items = null;\r\n        // Configure the collapse\r\n        _this.configure(itemTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Pagination.prototype.configure = function (itemTemplate) {\r\n        // Update the nav properties\r\n        this.props.label ? this.el.setAttribute(\"aria-label\", this.props.label) : null;\r\n        // Update the list\r\n        var list = this.el.querySelector(\"ul\");\r\n        if (list) {\r\n            this.props.isLarge ? list.classList.add(\"pagination-lg\") : null;\r\n            this.props.isSmall ? list.classList.add(\"pagination-sm\") : null;\r\n            // Read the alignment\r\n            switch (this.props.alignment) {\r\n                // Danger\r\n                case PaginationAlignment.Center:\r\n                    list.classList.add(\"justify-content-center\");\r\n                    break;\r\n                // Dark\r\n                case PaginationAlignment.Right:\r\n                    list.classList.add(\"justify-content-end\");\r\n                    break;\r\n            }\r\n            // Render the page numbers\r\n            this.renderPageNumbers(list, itemTemplate);\r\n        }\r\n    };\r\n    // Configures the next/previous buttons, based on the active index\r\n    _Pagination.prototype.configureNextPrevButtons = function (activePage) {\r\n        // Update the previous button\r\n        var prevItem = this._items[0];\r\n        if (activePage == 1) {\r\n            // Ensure the previous item is disabled\r\n            prevItem.classList.add(\"disabled\");\r\n        }\r\n        else {\r\n            // Ensure the previous item is enabled\r\n            prevItem.classList.remove(\"disabled\");\r\n        }\r\n        // Update the next button\r\n        var nextItem = this._items[this._items.length - 1];\r\n        if (activePage == this._items.length - 2) {\r\n            // Ensure the previous item is disabled\r\n            nextItem.classList.add(\"disabled\");\r\n        }\r\n        else {\r\n            // Ensure the previous item is enabled\r\n            nextItem.classList.remove(\"disabled\");\r\n        }\r\n    };\r\n    // Configure the events\r\n    _Pagination.prototype.configureEvents = function (item) {\r\n        var _this = this;\r\n        // See if this is the next or previous item and skip it\r\n        var link = item.querySelector(\"a\").getAttribute(\"aria-label\");\r\n        if (link == \"Previous\" || link == \"Next\") {\r\n            var isPrevious_1 = link == \"Previous\";\r\n            // Add a click event\r\n            item.addEventListener(\"click\", function (ev) {\r\n                // Prevent the page from moving to the top\r\n                ev.preventDefault();\r\n                // Do nothing if it's disabled\r\n                if (item.classList.contains(\"disabled\")) {\r\n                    return;\r\n                }\r\n                // Parse the items, excluding the next/previous items\r\n                for (var i = 1; i < _this._items.length - 1; i++) {\r\n                    var item_1 = _this._items[i];\r\n                    // See if this item is active\r\n                    if (item_1.classList.contains(\"active\")) {\r\n                        // See if the previous button was clicked\r\n                        if (isPrevious_1) {\r\n                            // Click the previous item if it's available\r\n                            i - 1 > 0 ? _this._items[i - 1].click() : null;\r\n                        }\r\n                        else {\r\n                            // Click the next item if it's available\r\n                            i < _this._items.length - 2 ? _this._items[i + 1].click() : null;\r\n                        }\r\n                        // Break from the loop\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            var pageNumber_1 = parseInt(link);\r\n            // Add a click event\r\n            item.addEventListener(\"click\", function (ev) {\r\n                // Prevent the page from moving to the top\r\n                ev.preventDefault();\r\n                // Parse the active items\r\n                var activeItems = _this.el.querySelectorAll(\".page-item.active\");\r\n                for (var i = 0; i < activeItems.length; i++) {\r\n                    var item_2 = activeItems[i];\r\n                    // Clear the active class\r\n                    item_2.classList.remove(\"active\");\r\n                    // Remove the active span\r\n                    var span_1 = item_2.querySelector(\"span\");\r\n                    span_1 ? span_1.parentNode.removeChild(span_1) : null;\r\n                }\r\n                // Make this item active\r\n                item.classList.add(\"active\");\r\n                // Add the span\r\n                var span = document.createElement(\"span\");\r\n                span.classList.add(\"visually-hidden\");\r\n                span.innerHTML = \"(current)\";\r\n                item.appendChild(span);\r\n                // Configure the next/previous buttons\r\n                _this.configureNextPrevButtons(pageNumber_1);\r\n                // Class the click event\r\n                _this.props.onClick ? _this.props.onClick(parseInt(item.innerHTML), ev) : null;\r\n            });\r\n        }\r\n    };\r\n    // Creates an page number item\r\n    _Pagination.prototype.createItem = function (text, itemTemplate) {\r\n        // Create the item\r\n        var el = document.createElement(\"div\");\r\n        el.innerHTML = itemTemplate;\r\n        var item = el.firstChild;\r\n        this._items.push(item);\r\n        // Update the link\r\n        var link = item.querySelector(\"a\");\r\n        if (link) {\r\n            link.innerHTML = text;\r\n            link.setAttribute(\"aria-label\", link.innerHTML);\r\n        }\r\n        // Configure the events\r\n        this.configureEvents(item);\r\n        // Return the item\r\n        return item;\r\n    };\r\n    // Renders the page numbers\r\n    _Pagination.prototype.renderPageNumbers = function (list, itemTemplate) {\r\n        // Clear the items\r\n        this._items = [];\r\n        // Create the previous link\r\n        var item = this.createItem(\"Previous\", itemTemplate);\r\n        list.appendChild(item);\r\n        // Loop for the number of pages to create\r\n        // Parse the number of pages\r\n        var pages = this.props.numberOfPages || 1;\r\n        for (var i = 1; i <= pages; i++) {\r\n            // Create a link\r\n            item = this.createItem(i.toString(), itemTemplate);\r\n            list.appendChild(item);\r\n        }\r\n        // Create the next link\r\n        item = this.createItem(\"Next\", itemTemplate);\r\n        list.appendChild(item);\r\n        // Set the first page number as active\r\n        this._items[1].click();\r\n    };\r\n    return _Pagination;\r\n}(base_1.Base));\r\nexports.Pagination = function (props, template, itemTemplate) { return new _Pagination(props, template, itemTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/templates.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/templates.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLItem = exports.HTML = void 0;\r\n// Pagination\r\nexports.HTML = \"\\n<nav>\\n    <ul class=\\\"pagination\\\"></ul>\\n</nav>\".trim();\r\n// Item\r\nexports.HTMLItem = \"\\n<li class=\\\"page-item\\\">\\n    <a class=\\\"page-link\\\" href=\\\"#\\\"></a>\\n</li>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/pagination/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/popover/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/popover/index.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Popover = exports.PopoverTypes = void 0;\r\nvar popper_min_js_1 = __webpack_require__(/*! ../../../libs/popper.min.js */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/libs/popper.min.js\");\r\nvar button_1 = __webpack_require__(/*! ../button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\");\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\n/**\r\n * Popover Types\r\n */\r\nvar PopoverTypes;\r\n(function (PopoverTypes) {\r\n    PopoverTypes[PopoverTypes[\"Auto\"] = 1] = \"Auto\";\r\n    PopoverTypes[PopoverTypes[\"Bottom\"] = 2] = \"Bottom\";\r\n    PopoverTypes[PopoverTypes[\"Left\"] = 3] = \"Left\";\r\n    PopoverTypes[PopoverTypes[\"Right\"] = 4] = \"Right\";\r\n    PopoverTypes[PopoverTypes[\"Top\"] = 5] = \"Top\";\r\n})(PopoverTypes = exports.PopoverTypes || (exports.PopoverTypes = {}));\r\n/**\r\n * Popover\r\n */\r\nvar _Popover = /** @class */ (function (_super) {\r\n    __extends(_Popover, _super);\r\n    // Constructor\r\n    function _Popover(props, template) {\r\n        if (template === void 0) { template = \"\"; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._elContent = null;\r\n        _this._popovers = null;\r\n        _this._popper = null;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the parent, if the target wasn't specified\r\n        _this.props.target ? null : _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Popover.prototype.configure = function () {\r\n        var _this = this;\r\n        // Ensure the main popover element exists\r\n        // This will ensure the popovers are wrapped with a parent element with the \"bs\" class applied to it.\r\n        this._popovers = document.querySelector(\"#bs-popovers\");\r\n        if (this._popovers == null) {\r\n            // Create the main element\r\n            this._popovers = document.createElement(\"div\");\r\n            this._popovers.classList.add(\"bs\");\r\n            this._popovers.id = \"bs-popovers\";\r\n            // Add it to the page\r\n            document.body.appendChild(this._popovers);\r\n        }\r\n        // Set the options to target the main popover element\r\n        var options = this.props.options || {};\r\n        // See if the placement needs to be set\r\n        if (options.placement == null) {\r\n            // Set the type\r\n            switch (this.props.type) {\r\n                // Auto\r\n                case PopoverTypes.Auto:\r\n                    options.placement = \"auto\";\r\n                    break;\r\n                // Bottom\r\n                case PopoverTypes.Bottom:\r\n                    options.placement = \"bottom\";\r\n                    break;\r\n                // Left\r\n                case PopoverTypes.Left:\r\n                    options.placement = \"left\";\r\n                    break;\r\n                // Right\r\n                case PopoverTypes.Right:\r\n                    options.placement = \"right\";\r\n                    break;\r\n                // Top\r\n                case PopoverTypes.Top:\r\n                    options.placement = \"top\";\r\n                    break;\r\n                // Default\r\n                default:\r\n                    options.placement = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n        // See if we are targeting an element\r\n        var elPopover = null;\r\n        if (this.props.target) {\r\n            // Set the popover to the target element\r\n            elPopover = this.props.target;\r\n            // Ensure the attributes are set in the target element\r\n            elPopover.setAttribute(\"tabindex\", \"0\");\r\n            elPopover.setAttribute(\"toggle\", \"data-bs-popover\");\r\n            elPopover.setAttribute(\"trigger\", \"focus\");\r\n            // Update this element\r\n            this.el = elPopover;\r\n        }\r\n        else {\r\n            // Create the button\r\n            var btnProps = this.props.btnProps || {};\r\n            btnProps.isLink = this.props.isDismissible ? true : false;\r\n            btnProps.tabIndex = btnProps.tabIndex || 0;\r\n            btnProps.toggle = \"data-bs-popover\";\r\n            this.props.isDismissible ? btnProps.trigger = \"focus\" : null;\r\n            var button = button_1.Button(btnProps);\r\n            // Update this element\r\n            this.el = button.el;\r\n            // Set the popover title and content\r\n            typeof (options.title) === \"string\" ? this.el.setAttribute(\"title\", options.title) : null;\r\n            typeof (options.content) === \"string\" ? this.el.setAttribute(\"data-bs-content\", options.content) : null;\r\n        }\r\n        // Create the popover content element\r\n        this._elContent = document.createElement(\"div\");\r\n        this._elContent.innerHTML = options.template || '<div class=\"popover fade\" role=\"tooltip\"><div class=\"popover-arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>';\r\n        this._elContent = this._elContent.firstChild;\r\n        this._elContent.style.display = \"none\";\r\n        // See if the container exists\r\n        if (options.container) {\r\n            // Append it to the custom container\r\n            options.container.appendChild(this._elContent);\r\n        }\r\n        else {\r\n            // Append it to the default\r\n            this._popovers.appendChild(this._elContent);\r\n        }\r\n        // Set the class name\r\n        switch (options.placement) {\r\n            case \"auto\":\r\n            case \"bottom\":\r\n            case \"top\":\r\n                this._elContent.classList.add(\"bs-popover-\" + options.placement);\r\n                break;\r\n            case \"left\":\r\n                this._elContent.classList.add(\"bs-popover-start\");\r\n                break;\r\n            case \"right\":\r\n                this._elContent.classList.add(\"bs-popover-end\");\r\n                break;\r\n        }\r\n        // Append the content\r\n        common_1.appendContent(this._elContent.querySelector(\".popover-body\"), options.content);\r\n        // Add an event listener\r\n        var eventType = options.trigger || \"click\";\r\n        if (eventType == \"hover\") {\r\n            this.el.addEventListener(\"mouseover\", function () {\r\n                // Toggle the element\r\n                _this.show();\r\n            });\r\n            this.el.addEventListener(\"mouseout\", function () {\r\n                // Toggle the element\r\n                _this.hide();\r\n            });\r\n        }\r\n        else {\r\n            this.el.addEventListener(eventType, function () {\r\n                // Toggle the element\r\n                _this.toggle();\r\n            });\r\n        }\r\n        // Set the modifiers\r\n        var modifiers = [\r\n            {\r\n                name: \"arrow\",\r\n                options: {\r\n                    element: \".popover-arrow\"\r\n                }\r\n            },\r\n            {\r\n                name: \"offset\",\r\n                options: {\r\n                    offset: options.offset || [0, 8]\r\n                }\r\n            }\r\n        ];\r\n        if (options.fallbackPlacement) {\r\n            modifiers.push({ name: \"flip\", options: { altBoundary: true, fallbackPlacements: options.fallbackPlacement } });\r\n        }\r\n        ;\r\n        if (options.boundary) {\r\n            modifiers.push({ name: \"preventOverflow\", options: { boundary: options.boundary } });\r\n        }\r\n        if (options.onChange) {\r\n            modifiers.push({ name: \"onChange\", enabled: true, phase: \"afterWrite\", fn: options.onChange });\r\n        }\r\n        // Create the popper\r\n        this._popper = popper_min_js_1.createPopper(this.el, this._elContent, { placement: options.placement, modifiers: modifiers });\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Disables the popover\r\n    _Popover.prototype.disable = function () {\r\n        // Disable the target element\r\n        this.el.disabled = true;\r\n    };\r\n    // Enables the popover\r\n    _Popover.prototype.enable = function () {\r\n        // Enable the target element\r\n        this.el.disabled = false;\r\n    };\r\n    // Hides the popover\r\n    _Popover.prototype.hide = function () {\r\n        // See if it's visible\r\n        if (this.isVisible) {\r\n            this.toggle();\r\n        }\r\n    };\r\n    Object.defineProperty(_Popover.prototype, \"isVisible\", {\r\n        // Determines if the popover is visible\r\n        get: function () { return this._elContent.classList.contains(\"show\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // The popper instance\r\n    _Popover.prototype.popper = function () { return this._popper; };\r\n    // Shows the popover\r\n    _Popover.prototype.show = function () {\r\n        // See if it's hidden\r\n        if (!this.isVisible) {\r\n            this.toggle();\r\n        }\r\n    };\r\n    // Toggles the popover\r\n    _Popover.prototype.toggle = function () {\r\n        // Update the popper\r\n        this._popper.update();\r\n        // Toggle the element\r\n        if (this.isVisible) {\r\n            // Hide the element\r\n            this._elContent.classList.remove(\"show\");\r\n            this._elContent.style.display = \"none\";\r\n        }\r\n        else {\r\n            // Show the element\r\n            this._elContent.style.display = \"\";\r\n            this._elContent.classList.add(\"show\");\r\n        }\r\n    };\r\n    return _Popover;\r\n}(base_1.Base));\r\nexports.Popover = function (props, template) { return new _Popover(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/popover/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/index.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ProgressGroup = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar progress_1 = __webpack_require__(/*! ../progress */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/templates.js\");\r\n/**\r\n * Progress Group\r\n * @param props The progress group properties.\r\n */\r\nvar _ProgressGroup = /** @class */ (function (_super) {\r\n    __extends(_ProgressGroup, _super);\r\n    // Constructor\r\n    function _ProgressGroup(props, template, itemTemplate) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure(itemTemplate);\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _ProgressGroup.prototype.configure = function (itemTemplate) {\r\n        // Parse the progress bars\r\n        var progressbars = this.props.progressbars || [];\r\n        for (var i = 0; i < progressbars.length; i++) {\r\n            // Add the progress bar\r\n            this.el.appendChild(progress_1.Progress(progressbars[i], itemTemplate).progressBar);\r\n        }\r\n    };\r\n    return _ProgressGroup;\r\n}(base_1.Base));\r\nexports.ProgressGroup = function (props, template, itemTemplate) { return new _ProgressGroup(props, template, itemTemplate); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/templates.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/templates.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"<div class=\\\"progress\\\"></div>\";\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progressGroup/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Progress = exports.ProgressBarClassNames = exports.ProgressBarTypes = void 0;\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/templates.js\");\r\n/**\r\n * Progress Bar Types\r\n */\r\nvar ProgressBarTypes;\r\n(function (ProgressBarTypes) {\r\n    ProgressBarTypes[ProgressBarTypes[\"Danger\"] = 1] = \"Danger\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Dark\"] = 2] = \"Dark\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Info\"] = 3] = \"Info\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Light\"] = 4] = \"Light\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Primary\"] = 5] = \"Primary\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Secondary\"] = 6] = \"Secondary\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Success\"] = 7] = \"Success\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Transparent\"] = 8] = \"Transparent\";\r\n    ProgressBarTypes[ProgressBarTypes[\"Warning\"] = 9] = \"Warning\";\r\n    ProgressBarTypes[ProgressBarTypes[\"White\"] = 10] = \"White\";\r\n})(ProgressBarTypes = exports.ProgressBarTypes || (exports.ProgressBarTypes = {}));\r\n/**\r\n * Progress Bar Class Names\r\n */\r\nexports.ProgressBarClassNames = new classNames_1.ClassNames([\r\n    \"bg-danger\",\r\n    \"bg-dark\",\r\n    \"bg-info\",\r\n    \"bg-light\",\r\n    \"bg-primary\",\r\n    \"bg-secondary\",\r\n    \"bg-success\",\r\n    \"bg-transparent\",\r\n    \"bg-warning\",\r\n    \"bg-white\"\r\n]);\r\n/**\r\n * Progress\r\n */\r\nvar _Progress = /** @class */ (function (_super) {\r\n    __extends(_Progress, _super);\r\n    // Constructor\r\n    function _Progress(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Progress.prototype.configure = function () {\r\n        // Set the default values\r\n        var maxValue = typeof (this.props.max) === \"number\" ? this.props.max : 100;\r\n        var minValue = typeof (this.props.min) === \"number\" ? this.props.min : 0;\r\n        var size = typeof (this.props.size) === \"number\" ? this.props.size : 0;\r\n        // Update the progress bar\r\n        var progressBar = this.el.querySelector(\".progress-bar\");\r\n        if (progressBar) {\r\n            progressBar.style.width = size + \"%\";\r\n            progressBar.setAttribute(\"aria-valuenow\", size.toString());\r\n            progressBar.setAttribute(\"aria-valuemin\", minValue.toString());\r\n            progressBar.setAttribute(\"aria-valuemax\", maxValue.toString());\r\n            this.props.isAnimated ? progressBar.classList.add(\"progress-bar-animated\") : null;\r\n            this.props.isStriped ? progressBar.classList.add(\"progress-bar-striped\") : null;\r\n            this.props.label ? progressBar.innerHTML = this.props.label : null;\r\n            // See if a type exists\r\n            var className = exports.ProgressBarClassNames.getByType(this.props.type);\r\n            if (className) {\r\n                // Add the class name\r\n                progressBar.classList.add(className);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(_Progress.prototype, \"progressBar\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // Return the progress bar element\r\n        get: function () { return this.el.querySelector(\".progress-bar\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return _Progress;\r\n}(base_1.Base));\r\nexports.Progress = function (props, template) { return new _Progress(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/templates.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/templates.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"progress\\\">\\n    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\"></div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/progress/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/index.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Spinner = exports.SpinnerClassNames = exports.SpinnerTypes = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar classNames_1 = __webpack_require__(/*! ../classNames */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/classNames.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/templates.js\");\r\n/**\r\n * Spinner Types\r\n */\r\nvar SpinnerTypes;\r\n(function (SpinnerTypes) {\r\n    SpinnerTypes[SpinnerTypes[\"Danger\"] = 1] = \"Danger\";\r\n    SpinnerTypes[SpinnerTypes[\"Dark\"] = 2] = \"Dark\";\r\n    SpinnerTypes[SpinnerTypes[\"Info\"] = 3] = \"Info\";\r\n    SpinnerTypes[SpinnerTypes[\"Light\"] = 4] = \"Light\";\r\n    SpinnerTypes[SpinnerTypes[\"Primary\"] = 5] = \"Primary\";\r\n    SpinnerTypes[SpinnerTypes[\"Secondary\"] = 6] = \"Secondary\";\r\n    SpinnerTypes[SpinnerTypes[\"Success\"] = 7] = \"Success\";\r\n    SpinnerTypes[SpinnerTypes[\"Warning\"] = 8] = \"Warning\";\r\n})(SpinnerTypes = exports.SpinnerTypes || (exports.SpinnerTypes = {}));\r\n/**\r\n * Spinner Class Names\r\n */\r\nexports.SpinnerClassNames = new classNames_1.ClassNames([\r\n    \"text-danger\",\r\n    \"text-dark\",\r\n    \"text-info\",\r\n    \"text-light\",\r\n    \"text-primary\",\r\n    \"text-secondary\",\r\n    \"text-success\",\r\n    \"text-warning\"\r\n]);\r\n/**\r\n * Spinner\r\n * @param props The spinner properties.\r\n */\r\nvar _Spinner = /** @class */ (function (_super) {\r\n    __extends(_Spinner, _super);\r\n    // Constructor\r\n    function _Spinner(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Spinner.prototype.configure = function () {\r\n        // Set the class name\r\n        if (this.props.isGrowing) {\r\n            // Set the class\r\n            this.el.classList.add(\"spinner-grow\" + (this.props.isSmall ? \"-sm\" : \"\"));\r\n        }\r\n        else {\r\n            // Set the class\r\n            this.el.classList.add(\"spinner-border\" + (this.props.isSmall ? \"-sm\" : \"\"));\r\n        }\r\n        // Set the class name\r\n        this.el.classList.add(exports.SpinnerClassNames.getByType(this.props.type) || exports.SpinnerClassNames.getByType(SpinnerTypes.Primary));\r\n        // See if text is defined\r\n        if (this.props.text) {\r\n            // Update the text\r\n            var elSpan = this.el.querySelector(\"span\");\r\n            if (elSpan) {\r\n                elSpan.innerHTML = this.props.text;\r\n            }\r\n        }\r\n    };\r\n    return _Spinner;\r\n}(base_1.Base));\r\nexports.Spinner = function (props, template) { return new _Spinner(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/templates.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/templates.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div role=\\\"status\\\">\\n    <span class=\\\"visually-hidden\\\">Loading...</span>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/spinner/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/index.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Table = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/templates.js\");\r\n/**\r\n * Table\r\n */\r\nvar _Table = /** @class */ (function (_super) {\r\n    __extends(_Table, _super);\r\n    // Constructor\r\n    function _Table(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Table.prototype.configure = function () {\r\n        // See if columns are defined\r\n        var head = this.el.querySelector(\"thead\");\r\n        if (head) {\r\n            if (this.props.columns) {\r\n                // Append the row\r\n                var row = document.createElement(\"tr\");\r\n                head.appendChild(row);\r\n                // Parse the columns\r\n                for (var i = 0; i < this.props.columns.length; i++) {\r\n                    // Append the column\r\n                    var column = document.createElement(\"th\");\r\n                    row.appendChild(column);\r\n                    // Render the column\r\n                    this.renderColumn(i, column, this.props.columns[i]);\r\n                }\r\n                // See if there is an event\r\n                if (this.props.onRenderHeaderRow) {\r\n                    // Call the event\r\n                    this.props.onRenderHeaderRow(row);\r\n                }\r\n            }\r\n        }\r\n        // Add the rows\r\n        this.addRows(this.props.rows);\r\n    };\r\n    // Renders a column\r\n    _Table.prototype.renderColumn = function (colIdx, column, props) {\r\n        var _this = this;\r\n        column.innerHTML = props.isHidden ? \"\" : props.title || props.name;\r\n        column.setAttribute(\"scope\", \"col\");\r\n        // See if there is an event for this column\r\n        if (props.onRenderHeader) {\r\n            // Call the event\r\n            props.onRenderHeader(column, props);\r\n        }\r\n        // See if there is an event for this component\r\n        if (this.props.onRenderHeaderCell) {\r\n            // Call the event\r\n            this.props.onRenderHeaderCell(column, props);\r\n        }\r\n        // See if there is a click event\r\n        if (props.onClickHeader || this.props.onClickHeader) {\r\n            // Add the click event\r\n            column.addEventListener(\"click\", function (ev) {\r\n                // Call the event\r\n                props.onClickHeader ? props.onClickHeader(column, props) : null;\r\n                _this.props.onClickHeader ? _this.props.onClickHeader(column, props) : null;\r\n            });\r\n        }\r\n    };\r\n    // Renders a cell\r\n    _Table.prototype.renderCell = function (row, props, data) {\r\n        var _this = this;\r\n        // Create the cell\r\n        var cell = document.createElement(\"td\");\r\n        cell.className = props.className || \"\";\r\n        cell.innerHTML = data[props.name] == null ? \"\" : data[props.name];\r\n        row.appendChild(cell);\r\n        // See if there is a scope\r\n        if (props.scope) {\r\n            // Set the scope\r\n            cell.setAttribute(\"scope\", props.scope);\r\n        }\r\n        // See if there is an event for this column\r\n        if (props.onRenderCell) {\r\n            // Call the event\r\n            props.onRenderCell(cell, props, data);\r\n        }\r\n        // See if there is an event for this component\r\n        if (this.props.onRenderCell) {\r\n            // Call the event\r\n            this.props.onRenderCell(cell, props, data);\r\n        }\r\n        // See if there is a click event\r\n        if (props.onClickCell || this.props.onClickCell) {\r\n            // Add the click event\r\n            cell.addEventListener(\"click\", function (ev) {\r\n                // Call the event\r\n                props.onClickCell ? props.onClickCell(cell, props, data) : null;\r\n                _this.props.onClickCell ? _this.props.onClickCell(cell, props, data) : null;\r\n            });\r\n        }\r\n    };\r\n    // Renders a row\r\n    _Table.prototype.renderRow = function (row, data) {\r\n        // See if columns\r\n        for (var i = 0; i < this.props.columns.length; i++) {\r\n            // Create the cell\r\n            this.renderCell(row, this.props.columns[i], data);\r\n        }\r\n        // See if there is an event\r\n        if (this.props.onRenderRow) {\r\n            // Call the event\r\n            this.props.onRenderRow(row, data);\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Method to add the rows\r\n    _Table.prototype.addRows = function (rows) {\r\n        if (rows === void 0) { rows = []; }\r\n        var tbody = this.el.querySelector(\"tbody\");\r\n        if (tbody) {\r\n            // Parse the rows\r\n            for (var i = 0; i < rows.length; i++) {\r\n                // Create the row\r\n                var row = document.createElement(\"tr\");\r\n                tbody.appendChild(row);\r\n                // Render the row\r\n                this.renderRow(row, rows[i]);\r\n            }\r\n        }\r\n    };\r\n    return _Table;\r\n}(base_1.Base));\r\nexports.Table = function (props, template) { return new _Table(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/templates.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/templates.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<table class=\\\"table\\\">\\n    <thead></thead>\\n    <tbody></tbody>\\n</table>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/table/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/index.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Toast = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/templates.js\");\r\n/**\r\n * Toast\r\n * @param props - The toast properties.\r\n */\r\nvar _Toast = /** @class */ (function (_super) {\r\n    __extends(_Toast, _super);\r\n    // Constructor\r\n    function _Toast(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the events\r\n        _this.configureEvents();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Toast.prototype.configure = function () {\r\n        // Get the header\r\n        var header = this.el.querySelector(\".toast-header\");\r\n        if (header) {\r\n            // See if we are rendering an image\r\n            var img = header.querySelector(\"img\");\r\n            if (img) {\r\n                if (this.props.headerImgSrc) {\r\n                    // Create the image\r\n                    img.className = this.props.headerImgClass || \"\";\r\n                    img.src = this.props.headerImgSrc;\r\n                }\r\n                else {\r\n                    // Remove the image\r\n                    img.parentNode.removeChild(img);\r\n                }\r\n            }\r\n            // See if header text is defined\r\n            var headerText = header.querySelector(\"strong\");\r\n            if (headerText) {\r\n                if (this.props.headerText) {\r\n                    // Update the header text\r\n                    headerText.innerHTML = this.props.headerText;\r\n                }\r\n                else {\r\n                    // Remove the header\r\n                    headerText.parentNode.removeChild(headerText);\r\n                }\r\n            }\r\n            // See if muted text is defined\r\n            var mutedText = header.querySelector(\"small\");\r\n            if (mutedText) {\r\n                if (this.props.mutedText) {\r\n                    // Create the text\r\n                    mutedText.innerHTML = this.props.mutedText;\r\n                }\r\n                else {\r\n                    // Remove the element\r\n                    mutedText.parentNode.removeChild(mutedText);\r\n                }\r\n            }\r\n            // Get the close button\r\n            var closeButton = header.querySelector(\"button\");\r\n            if (closeButton) {\r\n                if (this.props.options && this.props.options.autohide == false) {\r\n                    // Remove the button\r\n                    closeButton.parentNode.removeChild(closeButton);\r\n                }\r\n            }\r\n        }\r\n        // Set the body\r\n        common_1.appendContent(this.el.querySelector(\".toast-body\"), this.props.body);\r\n    };\r\n    // Configures the events\r\n    _Toast.prototype.configureEvents = function () {\r\n        var _this = this;\r\n        // Execute the render events\r\n        this.props.onRenderHeader ? this.props.onRenderHeader(this.el.querySelector(\".toast-header\"), this.props.data) : null;\r\n        this.props.onRenderBody ? this.props.onRenderBody(this.el.querySelector(\".toast-body\"), this.props.data) : null;\r\n        // See if we are dismissing the alert\r\n        var btnClose = this.el.querySelector(\".btn-close\");\r\n        if (btnClose) {\r\n            // Add a click event\r\n            btnClose.addEventListener(\"click\", function () {\r\n                // Hide the toast\r\n                _this.hide();\r\n            });\r\n        }\r\n        // See if the click event exists\r\n        if (this.props.onClick) {\r\n            // Set the click event\r\n            this.el.addEventListener(\"click\", function () {\r\n                // Execute the click event\r\n                _this.props.onClick(_this.el, _this.props.data);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    // Hides the toast\r\n    _Toast.prototype.hide = function () {\r\n        var _this = this;\r\n        // Completes the animation\r\n        var onComplete = function () {\r\n            // Remove the classes\r\n            _this.el.classList.add(\"hide\");\r\n            _this.el.classList.remove(\"fade\", \"showing\");\r\n        };\r\n        // Starts the animation\r\n        var start = function () {\r\n            // See if we are not showing animation\r\n            if (_this.props.options && _this.props.options.animation == false) {\r\n                // Update the classes\r\n                _this.el.classList.remove(\"show\");\r\n                // Complete the request\r\n                onComplete();\r\n            }\r\n            else {\r\n                // Start the animation\r\n                _this.el.classList.add(\"fade\");\r\n                _this.el.classList.remove(\"show\");\r\n                _this.el.classList.add(\"showing\");\r\n                // Complete the animation\r\n                setTimeout(onComplete, 250);\r\n            }\r\n        };\r\n        // See if there is a delay\r\n        var delay = this.props.options ? this.props.options.delay : null;\r\n        if (delay > 0) {\r\n            // Delay the request\r\n            setTimeout(start, delay);\r\n        }\r\n        else {\r\n            // Start the animation\r\n            start();\r\n        }\r\n    };\r\n    // Shows the toast\r\n    _Toast.prototype.show = function () {\r\n        var _this = this;\r\n        // Completes the animation\r\n        var onComplete = function () {\r\n            // Update the classes\r\n            _this.el.classList.remove(\"fade\", \"showing\");\r\n            _this.el.classList.add(\"show\");\r\n        };\r\n        // See if we are not showing animation\r\n        if (this.props.options && this.props.options.animation == false) {\r\n            // Update the classes\r\n            this.el.classList.remove(\"hide\");\r\n            // Complete the request\r\n            onComplete();\r\n        }\r\n        else {\r\n            // Start the animation\r\n            this.el.classList.add(\"fade\");\r\n            this.el.classList.remove(\"hide\");\r\n            this.el.classList.add(\"showing\");\r\n            // Complete the animation\r\n            setTimeout(onComplete, 250);\r\n        }\r\n    };\r\n    return _Toast;\r\n}(base_1.Base));\r\nexports.Toast = function (props, template) { return new _Toast(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/templates.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/templates.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"\\n<div class=\\\"toast show\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\">\\n    <div class=\\\"toast-header\\\">\\n        <img class=\\\"rounded mr-2\\\">\\n        <strong class=\\\"me-auto\\\"></strong>\\n        <small></small>\\n        <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\"></button>\\n    </div>\\n    <div class=\\\"toast-body\\\"></div>\\n</div>\".trim();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toast/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/index.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Toolbar = void 0;\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar buttonGroup_1 = __webpack_require__(/*! ../buttonGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/buttonGroup/index.js\");\r\nvar inputGroup_1 = __webpack_require__(/*! ../inputGroup */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/inputGroup/index.js\");\r\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/templates.js\");\r\n/**\r\n * Toolbar\r\n */\r\nvar _Toolbar = /** @class */ (function (_super) {\r\n    __extends(_Toolbar, _super);\r\n    // Constructor\r\n    function _Toolbar(props, template) {\r\n        if (template === void 0) { template = templates_1.HTML; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the card group\r\n    _Toolbar.prototype.configure = function () {\r\n        // Parse the items\r\n        var items = this.props.items || [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var el = null;\r\n            // See if this is a button group\r\n            if (item.buttons) {\r\n                // Render an button group\r\n                el = buttonGroup_1.ButtonGroup({ buttons: item.buttons }).el;\r\n            }\r\n            // See if this is an input group\r\n            if (item.inputGroup) {\r\n                // Render an input group\r\n                el = inputGroup_1.InputGroup(item.inputGroup).el;\r\n            }\r\n            // Ensure the element exists\r\n            if (el) {\r\n                // See if there is a spacing value defined, and this is not the last element\r\n                if (this.props.spacing > 0 && i < items.length - 1) {\r\n                    // Add the spacing\r\n                    el.classList.add(\"mr-\" + this.props.spacing);\r\n                }\r\n                // Append the element\r\n                this.el.appendChild(el);\r\n            }\r\n        }\r\n    };\r\n    return _Toolbar;\r\n}(base_1.Base));\r\nexports.Toolbar = function (props, template) { return new _Toolbar(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/templates.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/templates.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTML = void 0;\r\nexports.HTML = \"<div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\"></div>\";\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/toolbar/templates.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/tooltip/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/tooltip/index.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Tooltip = exports.TooltipTypes = void 0;\r\nvar popper_min_js_1 = __webpack_require__(/*! ../../../libs/popper.min.js */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/libs/popper.min.js\");\r\nvar base_1 = __webpack_require__(/*! ../base */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/base.js\");\r\nvar button_1 = __webpack_require__(/*! ../button */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/button/index.js\");\r\nvar common_1 = __webpack_require__(/*! ../common */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/common.js\");\r\n/**\r\n * Tooltip Types\r\n */\r\nvar TooltipTypes;\r\n(function (TooltipTypes) {\r\n    TooltipTypes[TooltipTypes[\"Auto\"] = 1] = \"Auto\";\r\n    TooltipTypes[TooltipTypes[\"Bottom\"] = 2] = \"Bottom\";\r\n    TooltipTypes[TooltipTypes[\"Left\"] = 3] = \"Left\";\r\n    TooltipTypes[TooltipTypes[\"Right\"] = 4] = \"Right\";\r\n    TooltipTypes[TooltipTypes[\"Top\"] = 5] = \"Top\";\r\n})(TooltipTypes = exports.TooltipTypes || (exports.TooltipTypes = {}));\r\n/**\r\n * Tooltip\r\n */\r\nvar _Tooltip = /** @class */ (function (_super) {\r\n    __extends(_Tooltip, _super);\r\n    // Constructor\r\n    function _Tooltip(props, template) {\r\n        if (template === void 0) { template = \"\"; }\r\n        var _this = _super.call(this, template, props) || this;\r\n        _this._btn = null;\r\n        _this._elContent = null;\r\n        _this._popper = null;\r\n        _this._tooltips = null;\r\n        // Configure the collapse\r\n        _this.configure();\r\n        // Configure the parent\r\n        _this.configureParent();\r\n        return _this;\r\n    }\r\n    // Configure the tooltip\r\n    _Tooltip.prototype.configure = function () {\r\n        // Default the toggle property for the button\r\n        var btnProps = this.props.btnProps || {};\r\n        btnProps.toggle = \"tooltip\";\r\n        // Create the button\r\n        this._btn = button_1.Button(btnProps);\r\n        // Update the element\r\n        this.el = this._btn.el;\r\n        // Configure the options\r\n        this.configureOptions();\r\n    };\r\n    // Configure the options\r\n    _Tooltip.prototype.configureOptions = function () {\r\n        var _this = this;\r\n        // Ensure the main tooltips element exists\r\n        // This will ensure the tooltips are wrapped with a parent element with the \"bs\" class applied to it.\r\n        this._tooltips = document.querySelector(\"#bs-tooltips\");\r\n        if (this._tooltips == null) {\r\n            // Create the main element\r\n            this._tooltips = document.createElement(\"div\");\r\n            this._tooltips.classList.add(\"bs\");\r\n            this._tooltips.id = \"bs-tooltips\";\r\n            // Add it to the page\r\n            document.body.appendChild(this._tooltips);\r\n        }\r\n        // Set the options to target the main tooltips element\r\n        var options = this.props.options || {};\r\n        // Create the popover content element\r\n        this._elContent = document.createElement(\"div\");\r\n        this._elContent.innerHTML = options.template || '<div class=\"tooltip fade\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>';\r\n        this._elContent = this._elContent.firstChild;\r\n        this._elContent.style.display = \"none\";\r\n        // Set the content\r\n        common_1.appendContent(this._elContent.querySelector(\".tooltip-inner\"), options.title);\r\n        // See if the container exists\r\n        if (options.container) {\r\n            // Append it to the custom container\r\n            options.container.appendChild(this._elContent);\r\n        }\r\n        else {\r\n            // Append it to the default\r\n            this._tooltips.appendChild(this._elContent);\r\n        }\r\n        // Set the type\r\n        var placement = null;\r\n        switch (this.props.type) {\r\n            // Auto\r\n            case TooltipTypes.Auto:\r\n                placement = \"auto\";\r\n                this._elContent.classList.add(\"bs-tooltip-auto\");\r\n                break;\r\n            // Bottom\r\n            case TooltipTypes.Bottom:\r\n                placement = \"bottom\";\r\n                this._elContent.classList.add(\"bs-tooltip-bottom\");\r\n                break;\r\n            // Left\r\n            case TooltipTypes.Left:\r\n                placement = \"left\";\r\n                this._elContent.classList.add(\"bs-tooltip-start\");\r\n                break;\r\n            // Right\r\n            case TooltipTypes.Right:\r\n                placement = \"right\";\r\n                this._elContent.classList.add(\"bs-tooltip-end\");\r\n                break;\r\n            // Right\r\n            case TooltipTypes.Top:\r\n                placement = \"top\";\r\n                this._elContent.classList.add(\"bs-tooltip-top\");\r\n                break;\r\n            // Default - Auto\r\n            default:\r\n                placement = \"auto\";\r\n                this._elContent.classList.add(\"bs-tooltip-auto\");\r\n                break;\r\n        }\r\n        // Default the placement\r\n        options.placement = options.placement || placement;\r\n        // Set the attributes\r\n        this.el.setAttribute(\"data-bs-placement\", options.placement);\r\n        // See if the title is a string\r\n        if (typeof (options.title) === \"string\") {\r\n            // Set the attribute\r\n            this.el.setAttribute(\"title\", options.title);\r\n        }\r\n        // Add an event listener\r\n        var eventType = options.trigger || \"click\";\r\n        if (eventType == \"hover\") {\r\n            this.el.addEventListener(\"mouseover\", function () {\r\n                // Toggle the element\r\n                _this.show();\r\n            });\r\n            this.el.addEventListener(\"mouseout\", function () {\r\n                // Toggle the element\r\n                _this.hide();\r\n            });\r\n        }\r\n        else {\r\n            this.el.addEventListener(eventType, function () {\r\n                // Toggle the element\r\n                _this.toggle();\r\n            });\r\n        }\r\n        // Set the modifiers\r\n        var modifiers = [\r\n            {\r\n                name: \"arrow\",\r\n                options: {\r\n                    element: \".popover-arrow\"\r\n                }\r\n            },\r\n            {\r\n                name: \"offset\",\r\n                options: {\r\n                    offset: options.offset || [0, 8]\r\n                }\r\n            }\r\n        ];\r\n        if (options.fallbackPlacement) {\r\n            modifiers.push({ name: \"flip\", options: { altBoundary: true, fallbackPlacements: options.fallbackPlacement } });\r\n        }\r\n        ;\r\n        if (options.boundary) {\r\n            modifiers.push({ name: \"preventOverflow\", options: { boundary: options.boundary } });\r\n        }\r\n        if (options.onChange) {\r\n            modifiers.push({ name: \"onChange\", enabled: true, phase: \"afterWrite\", fn: options.onChange });\r\n        }\r\n        // Create the popper\r\n        this._popper = popper_min_js_1.createPopper(this.el, this._elContent, { placement: options.placement, modifiers: modifiers });\r\n    };\r\n    Object.defineProperty(_Tooltip.prototype, \"button\", {\r\n        /**\r\n         * Public Interface\r\n         */\r\n        // Reference to the button\r\n        get: function () { return this._btn; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Disbles the tooltip\r\n    _Tooltip.prototype.disable = function () {\r\n        // Disable the button\r\n        this._btn.disable();\r\n    };\r\n    // Enables the tooltip\r\n    _Tooltip.prototype.enable = function () {\r\n        // Enable the button\r\n        this._btn.enable();\r\n    };\r\n    // Hides the popover\r\n    _Tooltip.prototype.hide = function () {\r\n        // See if it's visible\r\n        if (this.isVisible) {\r\n            this.toggle();\r\n        }\r\n    };\r\n    Object.defineProperty(_Tooltip.prototype, \"isVisible\", {\r\n        // Determines if the popover is visible\r\n        get: function () { return this._elContent.classList.contains(\"show\"); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // The popper instance\r\n    _Tooltip.prototype.popper = function () { return this._popper; };\r\n    // Shows the popover\r\n    _Tooltip.prototype.show = function () {\r\n        // See if it's hidden\r\n        if (!this.isVisible) {\r\n            this.toggle();\r\n        }\r\n    };\r\n    // Toggles the tooltip\r\n    _Tooltip.prototype.toggle = function () {\r\n        // Update the popper\r\n        this._popper.update();\r\n        // Toggle the element\r\n        if (this.isVisible) {\r\n            // Hide the element\r\n            this._elContent.classList.remove(\"show\");\r\n            this._elContent.style.display = \"none\";\r\n        }\r\n        else {\r\n            // Show the element\r\n            this._elContent.style.display = \"\";\r\n            this._elContent.classList.add(\"show\");\r\n        }\r\n    };\r\n    return _Tooltip;\r\n}(base_1.Base));\r\nexports.Tooltip = function (props, template) { return new _Tooltip(props, template); };\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/tooltip/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/ie.js":
/*!***********************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/ie.js ***!
  \***********************************************************************/
/***/ (function() {

eval("// Fix to ensure the library loads in IE\r\n(function () {\r\n    if (typeof window.CustomEvent === \"function\")\r\n        return false; //If not IE\r\n    function CustomEvent(event, params) {\r\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/ie.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.createPopper = exports.Components = void 0;\r\n// Bootstrap styles\r\n__webpack_require__(/*! ./bs */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/bs.js\");\r\n// Import the IE fix\r\n__webpack_require__(/*! ./ie */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/ie.js\");\r\n// Bootstrap Components\r\nvar Components = __webpack_require__(/*! ./components */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/components/index.js\");\r\nexports.Components = Components;\r\n// Popper Lib\r\nvar popper_min_js_1 = __webpack_require__(/*! ../libs/popper.min.js */ \"./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/libs/popper.min.js\");\r\nObject.defineProperty(exports, \"createPopper\", ({ enumerable: true, get: function () { return popper_min_js_1.createPopper; } }));\r\n// Bootstrap Global library\r\nvar BS = { Components: Components, createPopper: popper_min_js_1.createPopper };\r\nwindow[\"GD\"] = window[\"GD\"] || BS;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/build/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/libs/popper.min.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/libs/popper.min.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("/**\n * @popperjs/core v2.9.2 - MIT License\n */\n\n!function(e,t){ true?t(exports):0}(this,(function(e){function t(e){return{width:(e=e.getBoundingClientRect()).width,height:e.height,top:e.top,right:e.right,bottom:e.bottom,left:e.left,x:e.left,y:e.top}}function n(e){return null==e?window:\"[object Window]\"!==e.toString()?(e=e.ownerDocument)&&e.defaultView||window:e}function o(e){return{scrollLeft:(e=n(e)).pageXOffset,scrollTop:e.pageYOffset}}function r(e){return e instanceof n(e).Element||e instanceof Element}function i(e){return e instanceof n(e).HTMLElement||e instanceof HTMLElement}function a(e){return\"undefined\"!=typeof ShadowRoot&&(e instanceof n(e).ShadowRoot||e instanceof ShadowRoot)}function s(e){return e?(e.nodeName||\"\").toLowerCase():null}function f(e){return((r(e)?e.ownerDocument:e.document)||window.document).documentElement}function p(e){return t(f(e)).left+o(e).scrollLeft}function c(e){return n(e).getComputedStyle(e)}function l(e){return e=c(e),/auto|scroll|overlay|hidden/.test(e.overflow+e.overflowY+e.overflowX)}function u(e,r,a){void 0===a&&(a=!1);var c=f(r);e=t(e);var u=i(r),d={scrollLeft:0,scrollTop:0},m={x:0,y:0};return(u||!u&&!a)&&((\"body\"!==s(r)||l(c))&&(d=r!==n(r)&&i(r)?{scrollLeft:r.scrollLeft,scrollTop:r.scrollTop}:o(r)),i(r)?((m=t(r)).x+=r.clientLeft,m.y+=r.clientTop):c&&(m.x=p(c))),{x:e.left+d.scrollLeft-m.x,y:e.top+d.scrollTop-m.y,width:e.width,height:e.height}}function d(e){var n=t(e),o=e.offsetWidth,r=e.offsetHeight;return 1>=Math.abs(n.width-o)&&(o=n.width),1>=Math.abs(n.height-r)&&(r=n.height),{x:e.offsetLeft,y:e.offsetTop,width:o,height:r}}function m(e){return\"html\"===s(e)?e:e.assignedSlot||e.parentNode||(a(e)?e.host:null)||f(e)}function h(e){return 0<=[\"html\",\"body\",\"#document\"].indexOf(s(e))?e.ownerDocument.body:i(e)&&l(e)?e:h(m(e))}function v(e,t){var o;void 0===t&&(t=[]);var r=h(e);return e=r===(null==(o=e.ownerDocument)?void 0:o.body),o=n(r),r=e?[o].concat(o.visualViewport||[],l(r)?r:[]):r,t=t.concat(r),e?t:t.concat(v(m(r)))}function g(e){return i(e)&&\"fixed\"!==c(e).position?e.offsetParent:null}function y(e){for(var t=n(e),o=g(e);o&&0<=[\"table\",\"td\",\"th\"].indexOf(s(o))&&\"static\"===c(o).position;)o=g(o);if(o&&(\"html\"===s(o)||\"body\"===s(o)&&\"static\"===c(o).position))return t;if(!o)e:{if(o=-1!==navigator.userAgent.toLowerCase().indexOf(\"firefox\"),-1===navigator.userAgent.indexOf(\"Trident\")||!i(e)||\"fixed\"!==c(e).position)for(e=m(e);i(e)&&0>[\"html\",\"body\"].indexOf(s(e));){var r=c(e);if(\"none\"!==r.transform||\"none\"!==r.perspective||\"paint\"===r.contain||-1!==[\"transform\",\"perspective\"].indexOf(r.willChange)||o&&\"filter\"===r.willChange||o&&r.filter&&\"none\"!==r.filter){o=e;break e}e=e.parentNode}o=null}return o||t}function b(e){function t(e){o.add(e.name),[].concat(e.requires||[],e.requiresIfExists||[]).forEach((function(e){o.has(e)||(e=n.get(e))&&t(e)})),r.push(e)}var n=new Map,o=new Set,r=[];return e.forEach((function(e){n.set(e.name,e)})),e.forEach((function(e){o.has(e.name)||t(e)})),r}function w(e){var t;return function(){return t||(t=new Promise((function(n){Promise.resolve().then((function(){t=void 0,n(e())}))}))),t}}function x(e){return e.split(\"-\")[0]}function O(e,t){var n=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(n&&a(n))do{if(t&&e.isSameNode(t))return!0;t=t.parentNode||t.host}while(t);return!1}function j(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function E(e,r){if(\"viewport\"===r){r=n(e);var a=f(e);r=r.visualViewport;var s=a.clientWidth;a=a.clientHeight;var l=0,u=0;r&&(s=r.width,a=r.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(l=r.offsetLeft,u=r.offsetTop)),e=j(e={width:s,height:a,x:l+p(e),y:u})}else i(r)?((e=t(r)).top+=r.clientTop,e.left+=r.clientLeft,e.bottom=e.top+r.clientHeight,e.right=e.left+r.clientWidth,e.width=r.clientWidth,e.height=r.clientHeight,e.x=e.left,e.y=e.top):(u=f(e),e=f(u),s=o(u),r=null==(a=u.ownerDocument)?void 0:a.body,a=_(e.scrollWidth,e.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),l=_(e.scrollHeight,e.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0),u=-s.scrollLeft+p(u),s=-s.scrollTop,\"rtl\"===c(r||e).direction&&(u+=_(e.clientWidth,r?r.clientWidth:0)-a),e=j({width:a,height:l,x:u,y:s}));return e}function D(e,t,n){return t=\"clippingParents\"===t?function(e){var t=v(m(e)),n=0<=[\"absolute\",\"fixed\"].indexOf(c(e).position)&&i(e)?y(e):e;return r(n)?t.filter((function(e){return r(e)&&O(e,n)&&\"body\"!==s(e)})):[]}(e):[].concat(t),(n=(n=[].concat(t,[n])).reduce((function(t,n){return n=E(e,n),t.top=_(n.top,t.top),t.right=U(n.right,t.right),t.bottom=U(n.bottom,t.bottom),t.left=_(n.left,t.left),t}),E(e,n[0]))).width=n.right-n.left,n.height=n.bottom-n.top,n.x=n.left,n.y=n.top,n}function L(e){return 0<=[\"top\",\"bottom\"].indexOf(e)?\"x\":\"y\"}function P(e){var t=e.reference,n=e.element,o=(e=e.placement)?x(e):null;e=e?e.split(\"-\")[1]:null;var r=t.x+t.width/2-n.width/2,i=t.y+t.height/2-n.height/2;switch(o){case\"top\":r={x:r,y:t.y-n.height};break;case\"bottom\":r={x:r,y:t.y+t.height};break;case\"right\":r={x:t.x+t.width,y:i};break;case\"left\":r={x:t.x-n.width,y:i};break;default:r={x:t.x,y:t.y}}if(null!=(o=o?L(o):null))switch(i=\"y\"===o?\"height\":\"width\",e){case\"start\":r[o]-=t[i]/2-n[i]/2;break;case\"end\":r[o]+=t[i]/2-n[i]/2}return r}function M(e){return Object.assign({},{top:0,right:0,bottom:0,left:0},e)}function k(e,t){return t.reduce((function(t,n){return t[n]=e,t}),{})}function A(e,n){void 0===n&&(n={});var o=n;n=void 0===(n=o.placement)?e.placement:n;var i=o.boundary,a=void 0===i?\"clippingParents\":i,s=void 0===(i=o.rootBoundary)?\"viewport\":i;i=void 0===(i=o.elementContext)?\"popper\":i;var p=o.altBoundary,c=void 0!==p&&p;o=M(\"number\"!=typeof(o=void 0===(o=o.padding)?0:o)?o:k(o,C));var l=e.elements.reference;p=e.rects.popper,a=D(r(c=e.elements[c?\"popper\"===i?\"reference\":\"popper\":i])?c:c.contextElement||f(e.elements.popper),a,s),c=P({reference:s=t(l),element:p,strategy:\"absolute\",placement:n}),p=j(Object.assign({},p,c)),s=\"popper\"===i?p:s;var u={top:a.top-s.top+o.top,bottom:s.bottom-a.bottom+o.bottom,left:a.left-s.left+o.left,right:s.right-a.right+o.right};if(e=e.modifiersData.offset,\"popper\"===i&&e){var d=e[n];Object.keys(u).forEach((function(e){var t=0<=[\"right\",\"bottom\"].indexOf(e)?1:-1,n=0<=[\"top\",\"bottom\"].indexOf(e)?\"y\":\"x\";u[e]+=d[n]*t}))}return u}function W(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return!t.some((function(e){return!(e&&\"function\"==typeof e.getBoundingClientRect)}))}function B(e){void 0===e&&(e={});var t=e.defaultModifiers,n=void 0===t?[]:t,o=void 0===(e=e.defaultOptions)?F:e;return function(e,t,i){function a(){f.forEach((function(e){return e()})),f=[]}void 0===i&&(i=o);var s={placement:\"bottom\",orderedModifiers:[],options:Object.assign({},F,o),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},f=[],p=!1,c={state:s,setOptions:function(i){return a(),s.options=Object.assign({},o,s.options,i),s.scrollParents={reference:r(e)?v(e):e.contextElement?v(e.contextElement):[],popper:v(t)},i=function(e){var t=b(e);return I.reduce((function(e,n){return e.concat(t.filter((function(e){return e.phase===n})))}),[])}(function(e){var t=e.reduce((function(e,t){var n=e[t.name];return e[t.name]=n?Object.assign({},n,t,{options:Object.assign({},n.options,t.options),data:Object.assign({},n.data,t.data)}):t,e}),{});return Object.keys(t).map((function(e){return t[e]}))}([].concat(n,s.options.modifiers))),s.orderedModifiers=i.filter((function(e){return e.enabled})),s.orderedModifiers.forEach((function(e){var t=e.name,n=e.options;n=void 0===n?{}:n,\"function\"==typeof(e=e.effect)&&(t=e({state:s,name:t,instance:c,options:n}),f.push(t||function(){}))})),c.update()},forceUpdate:function(){if(!p){var e=s.elements,t=e.reference;if(W(t,e=e.popper))for(s.rects={reference:u(t,y(e),\"fixed\"===s.options.strategy),popper:d(e)},s.reset=!1,s.placement=s.options.placement,s.orderedModifiers.forEach((function(e){return s.modifiersData[e.name]=Object.assign({},e.data)})),t=0;t<s.orderedModifiers.length;t++)if(!0===s.reset)s.reset=!1,t=-1;else{var n=s.orderedModifiers[t];e=n.fn;var o=n.options;o=void 0===o?{}:o,n=n.name,\"function\"==typeof e&&(s=e({state:s,options:o,name:n,instance:c})||s)}}},update:w((function(){return new Promise((function(e){c.forceUpdate(),e(s)}))})),destroy:function(){a(),p=!0}};return W(e,t)?(c.setOptions(i).then((function(e){!p&&i.onFirstUpdate&&i.onFirstUpdate(e)})),c):c}}function T(e){var t,o=e.popper,r=e.popperRect,i=e.placement,a=e.offsets,s=e.position,p=e.gpuAcceleration,l=e.adaptive;if(!0===(e=e.roundOffsets)){e=a.y;var u=window.devicePixelRatio||1;e={x:z(z(a.x*u)/u)||0,y:z(z(e*u)/u)||0}}else e=\"function\"==typeof e?e(a):a;e=void 0===(e=(u=e).x)?0:e,u=void 0===(u=u.y)?0:u;var d=a.hasOwnProperty(\"x\");a=a.hasOwnProperty(\"y\");var m,h=\"left\",v=\"top\",g=window;if(l){var b=y(o),w=\"clientHeight\",x=\"clientWidth\";b===n(o)&&(\"static\"!==c(b=f(o)).position&&(w=\"scrollHeight\",x=\"scrollWidth\")),\"top\"===i&&(v=\"bottom\",u-=b[w]-r.height,u*=p?1:-1),\"left\"===i&&(h=\"right\",e-=b[x]-r.width,e*=p?1:-1)}return o=Object.assign({position:s},l&&J),p?Object.assign({},o,((m={})[v]=a?\"0\":\"\",m[h]=d?\"0\":\"\",m.transform=2>(g.devicePixelRatio||1)?\"translate(\"+e+\"px, \"+u+\"px)\":\"translate3d(\"+e+\"px, \"+u+\"px, 0)\",m)):Object.assign({},o,((t={})[v]=a?u+\"px\":\"\",t[h]=d?e+\"px\":\"\",t.transform=\"\",t))}function H(e){return e.replace(/left|right|bottom|top/g,(function(e){return $[e]}))}function R(e){return e.replace(/start|end/g,(function(e){return ee[e]}))}function S(e,t,n){return void 0===n&&(n={x:0,y:0}),{top:e.top-t.height-n.y,right:e.right-t.width+n.x,bottom:e.bottom-t.height+n.y,left:e.left-t.width-n.x}}function q(e){return[\"top\",\"right\",\"bottom\",\"left\"].some((function(t){return 0<=e[t]}))}var C=[\"top\",\"bottom\",\"right\",\"left\"],N=C.reduce((function(e,t){return e.concat([t+\"-start\",t+\"-end\"])}),[]),V=[].concat(C,[\"auto\"]).reduce((function(e,t){return e.concat([t,t+\"-start\",t+\"-end\"])}),[]),I=\"beforeRead read afterRead beforeMain main afterMain beforeWrite write afterWrite\".split(\" \"),_=Math.max,U=Math.min,z=Math.round,F={placement:\"bottom\",modifiers:[],strategy:\"absolute\"},X={passive:!0},Y={name:\"eventListeners\",enabled:!0,phase:\"write\",fn:function(){},effect:function(e){var t=e.state,o=e.instance,r=(e=e.options).scroll,i=void 0===r||r,a=void 0===(e=e.resize)||e,s=n(t.elements.popper),f=[].concat(t.scrollParents.reference,t.scrollParents.popper);return i&&f.forEach((function(e){e.addEventListener(\"scroll\",o.update,X)})),a&&s.addEventListener(\"resize\",o.update,X),function(){i&&f.forEach((function(e){e.removeEventListener(\"scroll\",o.update,X)})),a&&s.removeEventListener(\"resize\",o.update,X)}},data:{}},G={name:\"popperOffsets\",enabled:!0,phase:\"read\",fn:function(e){var t=e.state;t.modifiersData[e.name]=P({reference:t.rects.reference,element:t.rects.popper,strategy:\"absolute\",placement:t.placement})},data:{}},J={top:\"auto\",right:\"auto\",bottom:\"auto\",left:\"auto\"},K={name:\"computeStyles\",enabled:!0,phase:\"beforeWrite\",fn:function(e){var t=e.state,n=e.options;e=void 0===(e=n.gpuAcceleration)||e;var o=n.adaptive;o=void 0===o||o,n=void 0===(n=n.roundOffsets)||n,e={placement:x(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:e},null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,T(Object.assign({},e,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:o,roundOffsets:n})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,T(Object.assign({},e,{offsets:t.modifiersData.arrow,position:\"absolute\",adaptive:!1,roundOffsets:n})))),t.attributes.popper=Object.assign({},t.attributes.popper,{\"data-popper-placement\":t.placement})},data:{}},Q={name:\"applyStyles\",enabled:!0,phase:\"write\",fn:function(e){var t=e.state;Object.keys(t.elements).forEach((function(e){var n=t.styles[e]||{},o=t.attributes[e]||{},r=t.elements[e];i(r)&&s(r)&&(Object.assign(r.style,n),Object.keys(o).forEach((function(e){var t=o[e];!1===t?r.removeAttribute(e):r.setAttribute(e,!0===t?\"\":t)})))}))},effect:function(e){var t=e.state,n={popper:{position:t.options.strategy,left:\"0\",top:\"0\",margin:\"0\"},arrow:{position:\"absolute\"},reference:{}};return Object.assign(t.elements.popper.style,n.popper),t.styles=n,t.elements.arrow&&Object.assign(t.elements.arrow.style,n.arrow),function(){Object.keys(t.elements).forEach((function(e){var o=t.elements[e],r=t.attributes[e]||{};e=Object.keys(t.styles.hasOwnProperty(e)?t.styles[e]:n[e]).reduce((function(e,t){return e[t]=\"\",e}),{}),i(o)&&s(o)&&(Object.assign(o.style,e),Object.keys(r).forEach((function(e){o.removeAttribute(e)})))}))}},requires:[\"computeStyles\"]},Z={name:\"offset\",enabled:!0,phase:\"main\",requires:[\"popperOffsets\"],fn:function(e){var t=e.state,n=e.name,o=void 0===(e=e.options.offset)?[0,0]:e,r=(e=V.reduce((function(e,n){var r=t.rects,i=x(n),a=0<=[\"left\",\"top\"].indexOf(i)?-1:1,s=\"function\"==typeof o?o(Object.assign({},r,{placement:n})):o;return r=(r=s[0])||0,s=((s=s[1])||0)*a,i=0<=[\"left\",\"right\"].indexOf(i)?{x:s,y:r}:{x:r,y:s},e[n]=i,e}),{}))[t.placement],i=r.x;r=r.y,null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=i,t.modifiersData.popperOffsets.y+=r),t.modifiersData[n]=e}},$={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"},ee={start:\"end\",end:\"start\"},te={name:\"flip\",enabled:!0,phase:\"main\",fn:function(e){var t=e.state,n=e.options;if(e=e.name,!t.modifiersData[e]._skip){var o=n.mainAxis;o=void 0===o||o;var r=n.altAxis;r=void 0===r||r;var i=n.fallbackPlacements,a=n.padding,s=n.boundary,f=n.rootBoundary,p=n.altBoundary,c=n.flipVariations,l=void 0===c||c,u=n.allowedAutoPlacements;c=x(n=t.options.placement),i=i||(c!==n&&l?function(e){if(\"auto\"===x(e))return[];var t=H(e);return[R(e),t,R(t)]}(n):[H(n)]);var d=[n].concat(i).reduce((function(e,n){return e.concat(\"auto\"===x(n)?function(e,t){void 0===t&&(t={});var n=t.boundary,o=t.rootBoundary,r=t.padding,i=t.flipVariations,a=t.allowedAutoPlacements,s=void 0===a?V:a,f=t.placement.split(\"-\")[1];0===(i=(t=f?i?N:N.filter((function(e){return e.split(\"-\")[1]===f})):C).filter((function(e){return 0<=s.indexOf(e)}))).length&&(i=t);var p=i.reduce((function(t,i){return t[i]=A(e,{placement:i,boundary:n,rootBoundary:o,padding:r})[x(i)],t}),{});return Object.keys(p).sort((function(e,t){return p[e]-p[t]}))}(t,{placement:n,boundary:s,rootBoundary:f,padding:a,flipVariations:l,allowedAutoPlacements:u}):n)}),[]);n=t.rects.reference,i=t.rects.popper;var m=new Map;c=!0;for(var h=d[0],v=0;v<d.length;v++){var g=d[v],y=x(g),b=\"start\"===g.split(\"-\")[1],w=0<=[\"top\",\"bottom\"].indexOf(y),O=w?\"width\":\"height\",j=A(t,{placement:g,boundary:s,rootBoundary:f,altBoundary:p,padding:a});if(b=w?b?\"right\":\"left\":b?\"bottom\":\"top\",n[O]>i[O]&&(b=H(b)),O=H(b),w=[],o&&w.push(0>=j[y]),r&&w.push(0>=j[b],0>=j[O]),w.every((function(e){return e}))){h=g,c=!1;break}m.set(g,w)}if(c)for(o=function(e){var t=d.find((function(t){if(t=m.get(t))return t.slice(0,e).every((function(e){return e}))}));if(t)return h=t,\"break\"},r=l?3:1;0<r&&\"break\"!==o(r);r--);t.placement!==h&&(t.modifiersData[e]._skip=!0,t.placement=h,t.reset=!0)}},requiresIfExists:[\"offset\"],data:{_skip:!1}},ne={name:\"preventOverflow\",enabled:!0,phase:\"main\",fn:function(e){var t=e.state,n=e.options;e=e.name;var o=n.mainAxis,r=void 0===o||o,i=void 0!==(o=n.altAxis)&&o;o=void 0===(o=n.tether)||o;var a=n.tetherOffset,s=void 0===a?0:a,f=A(t,{boundary:n.boundary,rootBoundary:n.rootBoundary,padding:n.padding,altBoundary:n.altBoundary});n=x(t.placement);var p=t.placement.split(\"-\")[1],c=!p,l=L(n);n=\"x\"===l?\"y\":\"x\",a=t.modifiersData.popperOffsets;var u=t.rects.reference,m=t.rects.popper,h=\"function\"==typeof s?s(Object.assign({},t.rects,{placement:t.placement})):s;if(s={x:0,y:0},a){if(r||i){var v=\"y\"===l?\"top\":\"left\",g=\"y\"===l?\"bottom\":\"right\",b=\"y\"===l?\"height\":\"width\",w=a[l],O=a[l]+f[v],j=a[l]-f[g],E=o?-m[b]/2:0,D=\"start\"===p?u[b]:m[b];p=\"start\"===p?-m[b]:-u[b],m=t.elements.arrow,m=o&&m?d(m):{width:0,height:0};var P=t.modifiersData[\"arrow#persistent\"]?t.modifiersData[\"arrow#persistent\"].padding:{top:0,right:0,bottom:0,left:0};v=P[v],g=P[g],m=_(0,U(u[b],m[b])),D=c?u[b]/2-E-m-v-h:D-m-v-h,u=c?-u[b]/2+E+m+g+h:p+m+g+h,c=t.elements.arrow&&y(t.elements.arrow),h=t.modifiersData.offset?t.modifiersData.offset[t.placement][l]:0,c=a[l]+D-h-(c?\"y\"===l?c.clientTop||0:c.clientLeft||0:0),u=a[l]+u-h,r&&(r=o?U(O,c):O,j=o?_(j,u):j,r=_(r,U(w,j)),a[l]=r,s[l]=r-w),i&&(r=(i=a[n])+f[\"x\"===l?\"top\":\"left\"],f=i-f[\"x\"===l?\"bottom\":\"right\"],r=o?U(r,c):r,o=o?_(f,u):f,o=_(r,U(i,o)),a[n]=o,s[n]=o-i)}t.modifiersData[e]=s}},requiresIfExists:[\"offset\"]},oe={name:\"arrow\",enabled:!0,phase:\"main\",fn:function(e){var t,n=e.state,o=e.name,r=e.options,i=n.elements.arrow,a=n.modifiersData.popperOffsets,s=x(n.placement);if(e=L(s),s=0<=[\"left\",\"right\"].indexOf(s)?\"height\":\"width\",i&&a){r=M(\"number\"!=typeof(r=\"function\"==typeof(r=r.padding)?r(Object.assign({},n.rects,{placement:n.placement})):r)?r:k(r,C));var f=d(i),p=\"y\"===e?\"top\":\"left\",c=\"y\"===e?\"bottom\":\"right\",l=n.rects.reference[s]+n.rects.reference[e]-a[e]-n.rects.popper[s];a=a[e]-n.rects.reference[e],a=(i=(i=y(i))?\"y\"===e?i.clientHeight||0:i.clientWidth||0:0)/2-f[s]/2+(l/2-a/2),s=_(r[p],U(a,i-f[s]-r[c])),n.modifiersData[o]=((t={})[e]=s,t.centerOffset=s-a,t)}},effect:function(e){var t=e.state;if(null!=(e=void 0===(e=e.options.element)?\"[data-popper-arrow]\":e)){if(\"string\"==typeof e&&!(e=t.elements.popper.querySelector(e)))return;O(t.elements.popper,e)&&(t.elements.arrow=e)}},requires:[\"popperOffsets\"],requiresIfExists:[\"preventOverflow\"]},re={name:\"hide\",enabled:!0,phase:\"main\",requiresIfExists:[\"preventOverflow\"],fn:function(e){var t=e.state;e=e.name;var n=t.rects.reference,o=t.rects.popper,r=t.modifiersData.preventOverflow,i=A(t,{elementContext:\"reference\"}),a=A(t,{altBoundary:!0});n=S(i,n),o=S(a,o,r),r=q(n),a=q(o),t.modifiersData[e]={referenceClippingOffsets:n,popperEscapeOffsets:o,isReferenceHidden:r,hasPopperEscaped:a},t.attributes.popper=Object.assign({},t.attributes.popper,{\"data-popper-reference-hidden\":r,\"data-popper-escaped\":a})}},ie=B({defaultModifiers:[Y,G,K,Q]}),ae=[Y,G,K,Q,Z,te,ne,oe,re],se=B({defaultModifiers:ae});e.applyStyles=Q,e.arrow=oe,e.computeStyles=K,e.createPopper=se,e.createPopperLite=ie,e.defaultModifiers=ae,e.detectOverflow=A,e.eventListeners=Y,e.flip=te,e.hide=re,e.offset=Z,e.popperGenerator=B,e.popperOffsets=G,e.preventOverflow=ne,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n//# sourceMappingURL=popper.min.js.map\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-bs@4.3.7/node_modules/gd-bs/libs/popper.min.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/executor.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/executor.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Executor = void 0;\r\n/**\r\n * Executor\r\n * @param methodParams - An array of parameters to execute in order synchronously.\r\n * @param method - The method to execute for each method parameter provided.\r\n * @param onExecuted - An optional event executed after the method completes. If a promise is returned, the executor will wait until it's resolved.\r\n */\r\nfunction Executor(methodParams, method, onExecuted) {\r\n    var _this = this;\r\n    if (methodParams === void 0) { methodParams = []; }\r\n    var _resolve = null;\r\n    // Method to execute the methods\r\n    var executeMethods = function (idx) {\r\n        if (idx === void 0) { idx = 0; }\r\n        // Execute the method and see if a promise is returned\r\n        var returnVal = idx < methodParams.length ? method(methodParams[idx]) : null;\r\n        if (returnVal && returnVal.then) {\r\n            // Wait for the method to complete\r\n            returnVal.then(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                // See if the on executed event exists\r\n                if (onExecuted) {\r\n                    // Execute the method and see if a promise is returned\r\n                    var returnVal_1 = onExecuted.apply(_this, args);\r\n                    if (returnVal_1 && returnVal_1.then) {\r\n                        // Wait for the method to complete\r\n                        returnVal_1.then(function () {\r\n                            // Execute the next method\r\n                            executeMethods(idx + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // Execute the next method\r\n                        executeMethods(idx + 1);\r\n                    }\r\n                }\r\n                else {\r\n                    // Execute the next method\r\n                    executeMethods(idx + 1);\r\n                }\r\n            });\r\n        }\r\n        // Else, see if additional methods need to be executed\r\n        else if (idx < methodParams.length) {\r\n            // Execute the next method\r\n            executeMethods(idx + 1);\r\n        }\r\n        // Else, resolve the promise\r\n        else {\r\n            // Resolve the promise\r\n            _resolve();\r\n        }\r\n    };\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Set the resolve reference\r\n        _resolve = resolve;\r\n        // See if params exist\r\n        if (methodParams.length > 0) {\r\n            // Execute the methods\r\n            executeMethods();\r\n        }\r\n        else {\r\n            // resolve the promise\r\n            _resolve();\r\n        }\r\n    });\r\n}\r\nexports.Executor = Executor;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/executor.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/fieldSchemaXML.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/fieldSchemaXML.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldSchemaXML = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar __1 = __webpack_require__(/*! .. */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\r\nvar spCfg_1 = __webpack_require__(/*! ./spCfg */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfg.js\");\r\n/**\r\n * Field Schema XML\r\n * Helper class for generating the field schema xml\r\n */\r\nexports.FieldSchemaXML = function (fieldInfo) {\r\n    var _resolve = null;\r\n    // Returns the schema xml for a boolean field.\r\n    var createBoolean = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"Boolean\";\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \">\";\r\n        if (fieldInfo.defaultValue) {\r\n            schemaXml += \"<Default>\" + fieldInfo.defaultValue + \"</Default>\";\r\n        }\r\n        schemaXml += \"</Field>\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a calculated field.\r\n    var createCalculated = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"Calculated\";\r\n        // Set the result type\r\n        switch (fieldInfo.resultType) {\r\n            case __1.SPTypes.FieldResultType.Boolean:\r\n                props[\"ResultType\"] = \"Boolean\";\r\n                break;\r\n            case __1.SPTypes.FieldResultType.Currency:\r\n                props[\"ResultType\"] = \"Currency\";\r\n                if (fieldInfo.lcid > 0) {\r\n                    props[\"LCID\"] = fieldInfo.lcid;\r\n                }\r\n                break;\r\n            case __1.SPTypes.FieldResultType.DateOnly:\r\n                props[\"Format\"] = \"DateOnly\";\r\n                props[\"ResultType\"] = \"DateTime\";\r\n                break;\r\n            case __1.SPTypes.FieldResultType.DateTime:\r\n                props[\"Format\"] = \"DateTime\";\r\n                props[\"ResultType\"] = \"DateTime\";\r\n                break;\r\n            case __1.SPTypes.FieldResultType.Number:\r\n                props[\"ResultType\"] = \"Number\";\r\n                if (fieldInfo.decimals >= 0) {\r\n                    props[\"Decimals\"] = fieldInfo.decimals;\r\n                }\r\n                if (fieldInfo.numberType == __1.SPTypes.FieldNumberType.Percentage) {\r\n                    props[\"Percentage\"] = \"TRUE\";\r\n                }\r\n                break;\r\n            default:\r\n                props[\"ResultType\"] = \"Text\";\r\n                break;\r\n        }\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \">\";\r\n        if (fieldInfo.formula) {\r\n            schemaXml += \"<Formula>\" + fieldInfo.formula + \"</Formula>\";\r\n        }\r\n        if (fieldInfo.fieldRefs) {\r\n            schemaXml += \"<FieldRefs>\";\r\n            for (var i = 0; i < fieldInfo.fieldRefs.length; i++) {\r\n                schemaXml += \"<FieldRef Name=\\\"\" + fieldInfo.fieldRefs[i] + \"\\\" />\";\r\n            }\r\n            schemaXml += \"</FieldRefs>\";\r\n        }\r\n        schemaXml += \"</Field>\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a choice field.\r\n    var createChoice = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = fieldInfo.multi ? \"MultiChoice\" : \"Choice\";\r\n        // Set the fill in choice property\r\n        if (typeof (fieldInfo.fillInChoice) === \"boolean\") {\r\n            props[\"FillInChoice\"] = fieldInfo.fillInChoice ? \"TRUE\" : \"FALSE\";\r\n        }\r\n        // Set the result type\r\n        switch (fieldInfo.format) {\r\n            case __1.SPTypes.ChoiceFormatType.Dropdown:\r\n                props[\"Format\"] = \"Dropdown\";\r\n                break;\r\n            case __1.SPTypes.ChoiceFormatType.RadioButtons:\r\n                props[\"Format\"] = \"RadioButtons\";\r\n                break;\r\n        }\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \">\";\r\n        if (fieldInfo.defaultValue) {\r\n            schemaXml += \"<Default>\" + fieldInfo.defaultValue + \"</Default>\";\r\n        }\r\n        if (fieldInfo.choices) {\r\n            schemaXml += \"<CHOICES>\";\r\n            for (var i = 0; i < fieldInfo.choices.length; i++) {\r\n                schemaXml += \"<CHOICE>\" + fieldInfo.choices[i] + \"</CHOICE>\";\r\n            }\r\n            schemaXml += \"</CHOICES>\";\r\n        }\r\n        schemaXml += \"</Field>\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a currency field.\r\n    var createCurrency = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"Currency\";\r\n        // Set the number properties\r\n        if (fieldInfo.decimals >= 0) {\r\n            props[\"Decimals\"] = fieldInfo.decimals;\r\n        }\r\n        if (fieldInfo.lcid > 0) {\r\n            props[\"LCID\"] = fieldInfo.lcid;\r\n        }\r\n        if (fieldInfo.max != null) {\r\n            props[\"Max\"] = fieldInfo.max;\r\n        }\r\n        if (fieldInfo.min != null) {\r\n            props[\"Min\"] = fieldInfo.min;\r\n        }\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \" />\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a date field.\r\n    var createDate = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"DateTime\";\r\n        // Set the date/time properties\r\n        props[\"Format\"] = fieldInfo.format == __1.SPTypes.DateFormat.DateTime ? \"DateTime\" : \"DateOnly\";\r\n        // Set the date/time display\r\n        switch (fieldInfo.displayFormat) {\r\n            case __1.SPTypes.FriendlyDateFormat.Disabled:\r\n                props[\"FriendlyDisplayFormat\"] = \"Disabled\";\r\n                break;\r\n            case __1.SPTypes.FriendlyDateFormat.Relative:\r\n                props[\"FriendlyDisplayFormat\"] = \"Relative\";\r\n                break;\r\n            case __1.SPTypes.FriendlyDateFormat.Unspecified:\r\n                props[\"FriendlyDisplayFormat\"] = \"Unspecified\";\r\n                break;\r\n        }\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \">\";\r\n        if (fieldInfo.defaultValue) {\r\n            schemaXml += \"<Default>\" + fieldInfo.defaultValue + \"</Default>\";\r\n        }\r\n        schemaXml += \"</Field>\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a geolocation field.\r\n    var createGeolocation = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"Geolocation\";\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \" />\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a lookup field.\r\n    var createLookup = function (fieldInfo, props) {\r\n        // Set the field type\r\n        props[\"Type\"] = fieldInfo.multi ? \"LookupMulti\" : \"Lookup\";\r\n        // Update the relationship behavior\r\n        switch (fieldInfo.relationshipBehavior) {\r\n            case __1.SPTypes.RelationshipDeleteBehaviorType.Cascade:\r\n                props[\"RelationshipDeleteBehavior\"] = \"Cascade\";\r\n                break;\r\n            case __1.SPTypes.RelationshipDeleteBehaviorType.None:\r\n                props[\"RelationshipDeleteBehavior\"] = \"None\";\r\n                break;\r\n            case __1.SPTypes.RelationshipDeleteBehaviorType.Restrict:\r\n                props[\"RelationshipDeleteBehavior\"] = \"Restrict\";\r\n                break;\r\n        }\r\n        // Set the lookup properties\r\n        if (fieldInfo.fieldRef) {\r\n            props[\"FieldRef\"] = fieldInfo.fieldRef;\r\n        }\r\n        if (fieldInfo.multi) {\r\n            props[\"Mult\"] = \"TRUE\";\r\n        }\r\n        props[\"ShowField\"] = fieldInfo.showField || \"Title\";\r\n        // See if the lookup name exists\r\n        if (fieldInfo.listName) {\r\n            // Get the web containing the list\r\n            lib_1.Web(fieldInfo.webUrl, { disableCache: true })\r\n                // Get the list\r\n                .Lists(fieldInfo.listName)\r\n                // Set the query\r\n                .query({\r\n                Expand: [\"ParentWeb\"]\r\n            })\r\n                // Execute the request\r\n                .execute(function (list) {\r\n                // Set the list and web ids\r\n                props[\"List\"] = \"{\" + list.Id + \"}\";\r\n                if (fieldInfo.webUrl) {\r\n                    props[\"WebId\"] = list.ParentWeb.Id;\r\n                }\r\n                // Resolve the request\r\n                _resolve(\"<Field \" + toString(props) + \" />\");\r\n            });\r\n        }\r\n        else {\r\n            // Set the list id\r\n            props[\"List\"] = \"{\" + fieldInfo.listId.replace(/[\\{\\}]/g, \"\") + \"}\";\r\n            // Resolve the request\r\n            _resolve(\"<Field \" + toString(props) + \" />\");\r\n        }\r\n    };\r\n    // Returns the schema xml for a managed metadata field.\r\n    var createMMS = function (fieldInfo, props) {\r\n        // Create the value field\r\n        var valueProps = {\r\n            ID: \"{\" + lib_1.ContextInfo.generateGUID() + \"}\",\r\n            Name: fieldInfo.name + \"_0\",\r\n            StaticName: fieldInfo.name + \"_0\",\r\n            DisplayName: fieldInfo.title + \" Value\",\r\n            Type: \"Note\",\r\n            Hidden: \"TRUE\",\r\n            Required: \"FALSE\",\r\n            ShowInViewForms: \"FALSE\",\r\n            CanToggleHidden: \"TRUE\"\r\n        };\r\n        // Generate the value field schema xml\r\n        var schemaXmlValue = \"<Field \" + toString(valueProps) + \" />\";\r\n        // Set the mms properties\r\n        props[\"Type\"] = \"TaxonomyFieldType\";\r\n        props[\"ShowField\"] = \"Term\" + (fieldInfo.locale ? fieldInfo.locale.toString() : \"1033\");\r\n        // Generate the mms field schema xml\r\n        var schemaXml = [\r\n            \"<Field \" + toString(props) + \">\",\r\n            \"<Customization>\",\r\n            \"<ArrayOfProperty>\",\r\n            \"<Property>\",\r\n            \"<Name>TextField</Name>\",\r\n            \"<Value xmlns:q6=\\\"http://www.w3.org/2001/XMLSchema\\\" p4:type=\\\"q6:string\\\" xmlns:p4=\\\"http://www.w3.org/2001/XMLSchema-instance\\\">\" + valueProps.ID + \"</Value>\",\r\n            \"</Property>\",\r\n            \"</ArrayOfProperty>\",\r\n            \"</Customization>\",\r\n            \"</Field>\"\r\n        ].join(\"\");\r\n        // Resolve the request\r\n        _resolve([schemaXmlValue, schemaXml]);\r\n    };\r\n    // Returns the schema xml for a note field.\r\n    var createNote = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"Note\";\r\n        // Set the note properties\r\n        if (fieldInfo.appendFl) {\r\n            props[\"AppendOnly\"] = \"TRUE\";\r\n        }\r\n        if (fieldInfo.noteType == __1.SPTypes.FieldNoteType.EnhancedRichText || fieldInfo.noteType == __1.SPTypes.FieldNoteType.RichText) {\r\n            props[\"RichText\"] = \"TRUE\";\r\n        }\r\n        if (fieldInfo.noteType == __1.SPTypes.FieldNoteType.EnhancedRichText) {\r\n            props[\"RichTextMode\"] = \"FullHtml\";\r\n        }\r\n        if (fieldInfo.numberOfLines > 0) {\r\n            props[\"NumLines\"] = fieldInfo.numberOfLines;\r\n        }\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \" />\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a number field.\r\n    var createNumber = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"Number\";\r\n        // Set the number properties\r\n        if (fieldInfo.decimals >= 0) {\r\n            props[\"Decimals\"] = fieldInfo.decimals;\r\n        }\r\n        if (fieldInfo.max != null) {\r\n            props[\"Max\"] = fieldInfo.max;\r\n        }\r\n        if (fieldInfo.min != null) {\r\n            props[\"Min\"] = fieldInfo.min;\r\n        }\r\n        if (fieldInfo.numberType == __1.SPTypes.FieldNumberType.Integer) {\r\n            props[\"Decimals\"] = 0;\r\n        }\r\n        if (fieldInfo.numberType == __1.SPTypes.FieldNumberType.Percentage) {\r\n            props[\"Percentage\"] = \"TRUE\";\r\n        }\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \">\";\r\n        if (fieldInfo.defaultValue) {\r\n            schemaXml += \"<Default>\" + fieldInfo.defaultValue + \"</Default>\";\r\n        }\r\n        schemaXml += \"</Field>\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a text field.\r\n    var createText = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"Text\";\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \">\";\r\n        if (fieldInfo.defaultValue) {\r\n            schemaXml += \"<Default>\" + fieldInfo.defaultValue + \"</Default>\";\r\n        }\r\n        schemaXml += \"</Field>\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a url field.\r\n    var createUrl = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"URL\";\r\n        // Set the url properties\r\n        props[\"Format\"] = fieldInfo.format == __1.SPTypes.UrlFormatType.Image ? \"Image\" : \"Hyperlink\";\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \" />\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Returns the schema xml for a user field.\r\n    var createUser = function (fieldInfo, props) {\r\n        var schemaXml = null;\r\n        // Set the field type\r\n        props[\"Type\"] = \"User\";\r\n        // Set the user properties\r\n        if (fieldInfo.multi) {\r\n            props[\"Mult\"] = \"TRUE\";\r\n        }\r\n        if (fieldInfo.selectionMode != null) {\r\n            props[\"UserSelectionMode\"] = fieldInfo.selectionMode;\r\n        }\r\n        if (fieldInfo.selectionScope != null) {\r\n            props[\"UserSelectionScope\"] = fieldInfo.selectionScope;\r\n        }\r\n        // Generate the schema\r\n        schemaXml = \"<Field \" + toString(props) + \" />\";\r\n        // Resolve the request\r\n        _resolve(schemaXml);\r\n    };\r\n    // Method to convert the properties to a string\r\n    var toString = function (props) {\r\n        var properties = \"\";\r\n        // Parse the properties\r\n        for (var key in props) {\r\n            var value = props[key];\r\n            // Add the property\r\n            properties += (properties ? \" \" : \"\") + key + \"=\\\"\" + props[key] + \"\\\"\";\r\n        }\r\n        // Return the string value\r\n        return properties;\r\n    };\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Set the resolve method\r\n        _resolve = resolve;\r\n        // See if the schema xml has been defined\r\n        if (fieldInfo.schemaXml) {\r\n            // Resolve the promise\r\n            resolve(fieldInfo.schemaXml);\r\n        }\r\n        else {\r\n            // Set the base properties\r\n            var props = {};\r\n            props[\"ID\"] = \"{\" + lib_1.ContextInfo.generateGUID() + \"}\";\r\n            props[\"Name\"] = fieldInfo.name;\r\n            props[\"StaticName\"] = fieldInfo.name;\r\n            props[\"DisplayName\"] = fieldInfo.title || fieldInfo.name;\r\n            // Set the optional properties\r\n            if (typeof (fieldInfo.allowDeletion) !== \"undefined\") {\r\n                props[\"AllowDeletion\"] = fieldInfo.allowDeletion ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.description) !== \"undefined\") {\r\n                props[\"Description\"] = fieldInfo.description;\r\n            }\r\n            if (typeof (fieldInfo.group) !== \"undefined\") {\r\n                props[\"Group\"] = fieldInfo.group;\r\n            }\r\n            if (typeof (fieldInfo.jslink) !== \"undefined\") {\r\n                props[\"JSLink\"] = fieldInfo.jslink;\r\n            }\r\n            if (typeof (fieldInfo.hidden) !== \"undefined\") {\r\n                props[\"Hidden\"] = fieldInfo.hidden ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.indexed) !== \"undefined\") {\r\n                props[\"Indexed\"] = fieldInfo.indexed ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.readOnly) !== \"undefined\") {\r\n                props[\"ReadOnly\"] = fieldInfo.readOnly ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.required) !== \"undefined\") {\r\n                props[\"Required\"] = fieldInfo.required ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.showInDisplayForm) !== \"undefined\") {\r\n                props[\"ShowInDisplayForm\"] = fieldInfo.showInDisplayForm ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.showInEditForm) !== \"undefined\") {\r\n                props[\"ShowInEditForm\"] = fieldInfo.showInEditForm ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.showInListSettings) !== \"undefined\") {\r\n                props[\"ShowInListSettings\"] = fieldInfo.showInListSettings ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.showInNewForm) !== \"undefined\") {\r\n                props[\"ShowInNewForm\"] = fieldInfo.showInNewForm ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            if (typeof (fieldInfo.showInViewForms) !== \"undefined\") {\r\n                props[\"ShowInViewForms\"] = fieldInfo.showInViewForms ? \"TRUE\" : \"FALSE\";\r\n            }\r\n            // Set the type\r\n            switch (fieldInfo.type) {\r\n                // Boolean\r\n                case spCfg_1.SPCfgFieldType.Boolean:\r\n                    createBoolean(fieldInfo, props);\r\n                    break;\r\n                // Calculated\r\n                case spCfg_1.SPCfgFieldType.Calculated:\r\n                    createCalculated(fieldInfo, props);\r\n                    break;\r\n                // Choice\r\n                case spCfg_1.SPCfgFieldType.Choice:\r\n                    createChoice(fieldInfo, props);\r\n                    break;\r\n                // Currency\r\n                case spCfg_1.SPCfgFieldType.Currency:\r\n                    createCurrency(fieldInfo, props);\r\n                    break;\r\n                // Date/Time\r\n                case spCfg_1.SPCfgFieldType.Date:\r\n                    createDate(fieldInfo, props);\r\n                    break;\r\n                // Geolocation\r\n                case spCfg_1.SPCfgFieldType.Geolocation:\r\n                    createGeolocation(fieldInfo, props);\r\n                    break;\r\n                // Lookup\r\n                case spCfg_1.SPCfgFieldType.Lookup:\r\n                    createLookup(fieldInfo, props);\r\n                    break;\r\n                // MMS\r\n                case spCfg_1.SPCfgFieldType.MMS:\r\n                    createMMS(fieldInfo, props);\r\n                    break;\r\n                // Note\r\n                case spCfg_1.SPCfgFieldType.Note:\r\n                    createNote(fieldInfo, props);\r\n                    break;\r\n                // Number\r\n                case spCfg_1.SPCfgFieldType.Number:\r\n                    createNumber(fieldInfo, props);\r\n                    break;\r\n                // Text\r\n                case spCfg_1.SPCfgFieldType.Text:\r\n                    createText(fieldInfo, props);\r\n                    break;\r\n                // URL\r\n                case spCfg_1.SPCfgFieldType.Url:\r\n                    createUrl(fieldInfo, props);\r\n                    break;\r\n                // User\r\n                case spCfg_1.SPCfgFieldType.User:\r\n                    createUser(fieldInfo, props);\r\n                    break;\r\n                // Field type not supported\r\n                default:\r\n                    // Create a text field by default\r\n                    createText(fieldInfo, props);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/fieldSchemaXML.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./executor */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/executor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./fieldSchemaXML */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/fieldSchemaXML.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./jslink */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/jslink.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./listForm */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listForm.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./listFormField */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listFormField.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./methods */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ribbonLink */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/ribbonLink.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sbLink */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sbLink.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sp */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./spCfg */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfg.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./taxonomy */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/taxonomy.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./webpart */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/webpart.js\"), exports);\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/jslink.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/jslink.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.JSLink = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar sptypes_1 = __webpack_require__(/*! ../sptypes */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/index.js\");\r\n/**\r\n * JSLink Helper Methods\r\n */\r\nexports.JSLink = {\r\n    // Hide event flag\r\n    _hideEventFl: false,\r\n    /**\r\n     * Field to Method Mapper\r\n     * 1 - Display Form\r\n     * 2 - Edit Form\r\n     * 3 - New Form\r\n     * 4 - View\r\n     */\r\n    _fieldToMethodMapper: {\r\n        'Attachments': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldAttachments_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldAttachments_Default\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldAttachments_Default\"]\r\n        },\r\n        'Boolean': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_DefaultNoEncode\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldBoolean_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldBoolean_Edit\"]\r\n        },\r\n        'Currency': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldNumber_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldNumber_Edit\"]\r\n        },\r\n        'Calculated': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPField_FormDisplay_Empty\"],\r\n            3: lib_1.ContextInfo.window[\"SPField_FormDisplay_Empty\"]\r\n        },\r\n        'Choice': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldChoice_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldChoice_Edit\"]\r\n        },\r\n        'Computed': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            3: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"]\r\n        },\r\n        'DateTime': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldDateTime_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldDateTime_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldDateTime_Edit\"]\r\n        },\r\n        'File': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldFile_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldFile_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldFile_Edit\"]\r\n        },\r\n        'Integer': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldNumber_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldNumber_Edit\"]\r\n        },\r\n        'Lookup': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldLookup_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldLookup_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldLookup_Edit\"]\r\n        },\r\n        'LookupMulti': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldLookup_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldLookup_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldLookup_Edit\"]\r\n        },\r\n        'MultiChoice': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldMultiChoice_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldMultiChoice_Edit\"]\r\n        },\r\n        'Note': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldNote_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldNote_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldNote_Edit\"]\r\n        },\r\n        'Number': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldNumber_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldNumber_Edit\"]\r\n        },\r\n        'Text': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPField_FormDisplay_Default\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldText_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldText_Edit\"]\r\n        },\r\n        'URL': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldUrl_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPFieldUrl_Edit\"],\r\n            3: lib_1.ContextInfo.window[\"SPFieldUrl_Edit\"]\r\n        },\r\n        'User': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldUser_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPClientPeoplePickerCSRTemplate\"],\r\n            3: lib_1.ContextInfo.window[\"SPClientPeoplePickerCSRTemplate\"]\r\n        },\r\n        'UserMulti': {\r\n            4: lib_1.ContextInfo.window[\"RenderFieldValueDefault\"],\r\n            1: lib_1.ContextInfo.window[\"SPFieldUserMulti_Display\"],\r\n            2: lib_1.ContextInfo.window[\"SPClientPeoplePickerCSRTemplate\"],\r\n            3: lib_1.ContextInfo.window[\"SPClientPeoplePickerCSRTemplate\"]\r\n        }\r\n    },\r\n    /**\r\n     * Methods\r\n     */\r\n    /**\r\n     * Disables edit for the specified field.\r\n     * @param ctx - The client context.\r\n     * @param field - The field to disable edit.\r\n     * @param requireValueFl - Flag to only disable the field, if a value exists.\r\n     */\r\n    disableEdit: function (ctx, field, requireValueFl) {\r\n        var fieldValue = ctx.CurrentFieldValue;\r\n        // Ensure a value exists\r\n        if (fieldValue) {\r\n            // Update the context, based on the field type\r\n            switch (ctx.CurrentFieldSchema.Type) {\r\n                case \"MultiChoice\":\r\n                    var regExp = new RegExp(sptypes_1.SPTypes.ClientTemplatesUtility.UserLookupDelimitString, \"g\");\r\n                    // Update the field value\r\n                    fieldValue = ctx.CurrentFieldValue\r\n                        // Replace the delimiter\r\n                        .replace(regExp, \"; \")\r\n                        // Trim the delimiter from the beginning\r\n                        .replace(/^; /g, \"\")\r\n                        // Trim the delimiter from the end\r\n                        .replace(/; $/g, \"\");\r\n                    break;\r\n                case \"Note\":\r\n                    // Replace the return characters\r\n                    fieldValue = \"<div>\" + ctx.CurrentFieldValue.replace(/\\n/g, \"<br />\") + \"</div>\";\r\n                    break;\r\n                case \"User\":\r\n                case \"UserMulti\":\r\n                    for (var i = 0; i < ctx.CurrentFieldValue.length; i++) {\r\n                        var userValue = ctx.CurrentFieldValue[i];\r\n                        // Add the user value\r\n                        fieldValue +=\r\n                            // User Lookup ID\r\n                            userValue.EntityData.SPUserID +\r\n                                // Delimiter\r\n                                sptypes_1.SPTypes.ClientTemplatesUtility.UserLookupDelimitString +\r\n                                // User Lookup Value\r\n                                userValue.DisplayText +\r\n                                // Optional Delimiter\r\n                                ((i == ctx.CurrentFieldValue.length - 1 ? \"\" : sptypes_1.SPTypes.ClientTemplatesUtility.UserLookupDelimitString));\r\n                    }\r\n                    break;\r\n            }\r\n            ;\r\n            // Update the current field value\r\n            ctx.CurrentFieldValue = fieldValue;\r\n        }\r\n        // Determine the control mode\r\n        var controlMode = sptypes_1.SPTypes.ControlMode.Display;\r\n        if (requireValueFl && (fieldValue == null || fieldValue == \"\")) {\r\n            // Inherit the control mode\r\n            controlMode = ctx.ControlMode;\r\n        }\r\n        // Return the display value of the field\r\n        return exports.JSLink.renderField(ctx, field, controlMode);\r\n    },\r\n    /**\r\n     * Disable quick edit for the specified field.\r\n     * @param ctx - The client context.\r\n     * @param field - The field to disable edit.\r\n     */\r\n    disableQuickEdit: function (ctx, field) {\r\n        // Ensure we are in grid edit mode\r\n        if (ctx.inGridMode) {\r\n            // Disable editing for this field\r\n            field.AllowGridEditing = false;\r\n            return \"\";\r\n        }\r\n        // Return the default field value html\r\n        return exports.JSLink.renderField(ctx, field);\r\n    },\r\n    /**\r\n     * Returns the list view.\r\n     * @param ctx - The client context.\r\n     */\r\n    getListView: function (ctx) {\r\n        // Get the webpart\r\n        var wp = exports.JSLink.getWebPart(ctx);\r\n        if (wp) {\r\n            // Find the list form table\r\n            wp = wp.querySelector(\".ms-formtable\");\r\n        }\r\n        // Return the list view\r\n        return wp;\r\n    },\r\n    /**\r\n     * Returns the list view items.\r\n     * @param ctx - The client context.\r\n     */\r\n    getListViewItems: function (ctx) {\r\n        // Return the list view items\r\n        return ctx.ListData ? ctx.ListData.Row : [];\r\n    },\r\n    /**\r\n     * Returns the selected list view items\r\n     */\r\n    getListViewSelectedItems: function () {\r\n        // Return the selected items\r\n        return lib_1.ContextInfo.window[\"SP\"].ListOperation.Selection.getSelectedItems();\r\n    },\r\n    /**\r\n     * Returns the webpart containing the JSLink field/form/view.\r\n     * @param ctx - The client context.\r\n     */\r\n    getWebPart: function (ctx) {\r\n        // Return the webpart\r\n        return lib_1.ContextInfo.document.querySelector(\"#WebPart\" + (ctx.FormUniqueId || ctx.wpq));\r\n    },\r\n    /**\r\n     * Hides the specified field.\r\n     * @param ctx - The client context.\r\n     * @param field - The field to hide.\r\n     */\r\n    hideField: function (ctx, field) {\r\n        // Ensure the hide event has been created\r\n        if (!exports.JSLink._hideEventFl) {\r\n            // Set the flag\r\n            exports.JSLink._hideEventFl = true;\r\n            // Create the event\r\n            lib_1.ContextInfo.window.addEventListener(\"load\", function () {\r\n                // Query for the elements to hide\r\n                var fieldElements = lib_1.ContextInfo.document.querySelectorAll(\".hide-field\");\r\n                for (var _i = 0, fieldElements_1 = fieldElements; _i < fieldElements_1.length; _i++) {\r\n                    var fieldElement = fieldElements_1[_i];\r\n                    // Get the parent row\r\n                    var parentRow = fieldElement.parentNode && fieldElement.parentNode.parentNode ? fieldElement.parentNode.parentNode : null;\r\n                    if (parentRow) {\r\n                        // Ensure the parent row exists\r\n                        if (fieldElement.parentNode.getAttribute(\"data-field-name\") != parentRow.getAttribute(\"data-field-name\")) {\r\n                            // Find the parent row\r\n                            while (parentRow && parentRow.nodeName.toLowerCase() != \"tr\") {\r\n                                // Update the parent node\r\n                                parentRow = parentRow.parentNode;\r\n                            }\r\n                        }\r\n                        // Hide the parent row\r\n                        if (parentRow) {\r\n                            parentRow.style.display = \"none\";\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * Registers the JSLink configuration\r\n     * @param cfg - The JSLink configuration.\r\n     */\r\n    register: function (cfg) {\r\n        // Ensure a configuration exists\r\n        if (cfg) {\r\n            // Get the template manager\r\n            var templateManager = lib_1.ContextInfo.window.SPClientTemplates;\r\n            templateManager = templateManager ? templateManager.TemplateManager : null;\r\n            // Ensure it exists\r\n            if (templateManager) {\r\n                // Apply the customization\r\n                templateManager.RegisterTemplateOverrides(cfg);\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Removes the field and html from the page.\r\n     * @param ctx - The client context.\r\n     * @param field - The field to remove.\r\n     */\r\n    removeField: function (ctx, field) {\r\n        // Hide the field\r\n        exports.JSLink.hideField(ctx, field);\r\n        // Return an empty element\r\n        return \"<div class='hide-field'></div>\";\r\n    },\r\n    /**\r\n     * Method to render the default html for a field.\r\n     * @param ctx - The client context.\r\n     * @param field - The form field.\r\n     * @param formType - The form type. (Display, Edit, New or View)\r\n     */\r\n    renderField: function (ctx, field, formType) {\r\n        // Determine the field type\r\n        var fieldType = field ? field.Type : (ctx.CurrentFieldSchema ? ctx.CurrentFieldSchema.Type : null);\r\n        // Ensure the form type is set\r\n        formType = formType ? formType : ctx.ControlMode;\r\n        // Ensure a field to method mapper exists\r\n        if (exports.JSLink._fieldToMethodMapper[fieldType] && exports.JSLink._fieldToMethodMapper[fieldType][formType]) {\r\n            // Return the default html for this field\r\n            var defaultHtml = exports.JSLink._fieldToMethodMapper[fieldType][formType](ctx);\r\n            if (defaultHtml) {\r\n                return defaultHtml;\r\n            }\r\n        }\r\n        // Set the field renderer based on the field type\r\n        var field = ctx.CurrentFieldSchema;\r\n        var fieldRenderer = null;\r\n        switch (field.Type) {\r\n            case \"AllDayEvent\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"AllDayEventFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Attachments\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"AttachmentFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"BusinessData\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"BusinessDataFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Computed\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"ComputedFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"CrossProjectLink\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"ProjectLinkFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Currency\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"NumberFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"DateTime\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"DateTimeFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Lookup\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"LookupFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"LookupMulti\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"LookupFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Note\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"NoteFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Number\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"NumberFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Recurrence\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"RecurrenceFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"Text\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"TextFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"URL\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"UrlFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"User\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"UserFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"UserMulti\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"UserFieldRenderer\"](field.Name);\r\n                break;\r\n            case \"WorkflowStatus\":\r\n                fieldRenderer = new lib_1.ContextInfo.window[\"RawFieldRenderer\"](field.Name);\r\n                break;\r\n        }\r\n        ;\r\n        // Get the current item\r\n        var currentItem = ctx.CurrentItem || ctx.ListData.Items[0];\r\n        // Return the item's field value html\r\n        return fieldRenderer ? fieldRenderer.RenderField(ctx, field, currentItem, ctx.ListSchema) : currentItem[field.Name];\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/jslink.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listForm.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listForm.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ListForm = void 0;\r\nvar __1 = __webpack_require__(/*! .. */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\r\n/**\r\n * List Form\r\n */\r\nexports.ListForm = {\r\n    // Method to create an instance of the list form\r\n    create: function (props) {\r\n        var _info = null;\r\n        var _props = null;\r\n        var _reject = null;\r\n        var _resolve = null;\r\n        // Save the properties\r\n        _props = props || {};\r\n        _props.fields = _props.fields;\r\n        // Method to load the list data\r\n        var load = function () {\r\n            // Clear the information\r\n            _info = {\r\n                item: _props.item,\r\n                query: _props.query || {}\r\n            };\r\n            // Load the list data\r\n            loadListData().then(\r\n            // Success\r\n            function () {\r\n                // See if the fields have been defined\r\n                if (_props.fields) {\r\n                    // Process the fields\r\n                    processFields();\r\n                    // Load the item data\r\n                    loadItem();\r\n                }\r\n                else {\r\n                    // Load the content type\r\n                    loadContentType();\r\n                }\r\n            }, \r\n            // Reject\r\n            _reject);\r\n        };\r\n        // Method to load a content type for the associated fields\r\n        var loadContentType = function () {\r\n            // Load the content types\r\n            _info.list.ContentTypes()\r\n                // Query for the default content type and expand the field links\r\n                .query({\r\n                Filter: _props.contentType ? \"Name eq '\" + _props.contentType + \"'\" : null,\r\n                Expand: [\"FieldLinks\"],\r\n                Select: [\"*\", \"FieldLinks/DisplayName\", \"FieldLinks/Hidden\", \"FieldLinks/Name\", \"FieldLinks/ReadOnly\", \"FieldLinks/Required\"],\r\n                Top: 1\r\n            })\r\n                // Execute the request, but wait for the previous one to be completed\r\n                .execute(function (ct) {\r\n                // Resolve the promise\r\n                loadDefaultFields(ct.results[0]);\r\n            }, _reject);\r\n        };\r\n        // Method to load the default fields\r\n        var loadDefaultFields = function (ct) {\r\n            var fields = ct ? ct.FieldLinks.results : [];\r\n            var formFields = {};\r\n            var formLinks = {};\r\n            // Parse the field links\r\n            for (var i = 0; i < fields.length; i++) {\r\n                var fieldLink = fields[i];\r\n                // Get the field\r\n                var field = _info.fields[fieldLink.Name];\r\n                if (field) {\r\n                    // Skip the content type field\r\n                    if (field.InternalName == \"ContentType\") {\r\n                        continue;\r\n                    }\r\n                    // Skip hidden fields\r\n                    if (field.Hidden || fieldLink.Hidden) {\r\n                        continue;\r\n                    }\r\n                    // Save the form field and link\r\n                    formFields[field.InternalName] = field;\r\n                    formLinks[field.InternalName] = fieldLink;\r\n                }\r\n            }\r\n            // Update the fields\r\n            _info.contentType = ct;\r\n            _info.fields = formFields;\r\n            _info.fieldLinks = formLinks;\r\n            // Load the item data\r\n            loadItem();\r\n        };\r\n        // Method to load the field data\r\n        var loadFieldData = function (fields) {\r\n            // Clear the fields\r\n            _info.fields = {};\r\n            // Parse the fields\r\n            for (var i = 0; i < fields.results.length; i++) {\r\n                var field = fields.results[i];\r\n                // See if the exclude fields is defined\r\n                if (_props.excludeFields) {\r\n                    var excludeField = false;\r\n                    // Parse the fields to exclude\r\n                    for (var j = 0; j < _props.excludeFields.length; j++) {\r\n                        // See if we are excluding this field\r\n                        if (_props.excludeFields[j] == field.InternalName) {\r\n                            // Set the flag\r\n                            excludeField = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    // See if we are excluding the field\r\n                    if (excludeField) {\r\n                        continue;\r\n                    }\r\n                }\r\n                // Save the field\r\n                _info.fields[field.InternalName] = field;\r\n            }\r\n        };\r\n        // Method to load the item\r\n        var loadItem = function () {\r\n            var reloadItem = false;\r\n            // See if the item already exist\r\n            if (_info.item) {\r\n                // Parse the fields\r\n                for (var fieldName in _info.fields) {\r\n                    var field = _info.fields[fieldName];\r\n                    // See what type of field this is\r\n                    switch (field.FieldTypeKind) {\r\n                        // Lookup or User Field\r\n                        case __1.SPTypes.FieldType.Lookup:\r\n                        case __1.SPTypes.FieldType.User:\r\n                            var fieldValue = _info.item[fieldName + \"Id\"];\r\n                            // Ensure the value exists\r\n                            if (fieldValue) {\r\n                                // See if a value exists\r\n                                if (fieldValue.results ? fieldValue.results.length > 0 : fieldValue > 0) {\r\n                                    // Ensure the field data has been loaded\r\n                                    if (_info.item[fieldName] == null) {\r\n                                        // Set the flag\r\n                                        reloadItem = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                        // Default\r\n                        default:\r\n                            // See if this is an taxonomy field\r\n                            if (field.TypeAsString.indexOf(\"TaxonomyFieldType\") == 0) {\r\n                                var fieldValue_1 = _info.item[fieldName + \"Id\"];\r\n                                // Ensure the value exists\r\n                                if (fieldValue_1) {\r\n                                    // See if a field value exists\r\n                                    if (fieldValue_1.results ? fieldValue_1.results.length > 0 : fieldValue_1 != null) {\r\n                                        // Parse the fields\r\n                                        for (var fieldName_1 in _info.fields) {\r\n                                            var valueField = _info.fields[fieldName_1];\r\n                                            // See if this is the value field\r\n                                            if (valueField.InternalName == field.InternalName + \"_0\" || valueField.Title == field.InternalName + \"_0\") {\r\n                                                // Ensure the value field is loaded\r\n                                                if (_info.item[valueField.InternalName] == null) {\r\n                                                    // Set the flag\r\n                                                    reloadItem = true;\r\n                                                }\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n                    // See if we are reloading the item\r\n                    if (reloadItem) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // See if the item exists\r\n            if (_info.item && !reloadItem) {\r\n                // See if we are loading attachments\r\n                if (_props.loadAttachments && _info.attachments == null) {\r\n                    // Load the attachments\r\n                    exports.ListForm.loadAttachments(_props).then(function (attachments) {\r\n                        // Set the attachments\r\n                        _info.attachments = attachments;\r\n                        // Resolve the promise\r\n                        _resolve(_info);\r\n                    }, _reject);\r\n                }\r\n                else {\r\n                    // Resolve the promise\r\n                    _resolve(_info);\r\n                }\r\n            }\r\n            // Else, see if we are loading the list item\r\n            else if (reloadItem || _props.itemId > 0) {\r\n                // Update the item query\r\n                _info.query = exports.ListForm.generateODataQuery(_info, _props.loadAttachments);\r\n                // Get the list item\r\n                _info.list.Items(reloadItem ? _props.item.Id : _props.itemId)\r\n                    // Set the query\r\n                    .query(_info.query)\r\n                    // Execute the request\r\n                    .execute(function (item) {\r\n                    // Save the attachments\r\n                    _info.attachments = item.AttachmentFiles.results;\r\n                    // Save the item\r\n                    _info.item = item;\r\n                    // Refresh the item\r\n                    exports.ListForm.refreshItem(_info).then(function (info) {\r\n                        // Update the info\r\n                        _info = info;\r\n                        // Resolve the promise\r\n                        _resolve(_info);\r\n                    }, _reject);\r\n                }, _reject);\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                _resolve(_info);\r\n            }\r\n        };\r\n        // Method to load the list data\r\n        var loadListData = function () {\r\n            // Return a promise\r\n            return new Promise(function (resolve, reject) {\r\n                // See if the list & fields already exist\r\n                if (_info.list && _info.fields) {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                    return;\r\n                }\r\n                // Get the web\r\n                __1.Web(_props.webUrl)\r\n                    // Get the list\r\n                    .Lists(_props.listName)\r\n                    // Execute the request\r\n                    .execute(function (list) {\r\n                    // Save the list and web url\r\n                    _info.list = list;\r\n                    _info.webUrl = _props.webUrl;\r\n                }, reject)\r\n                    // Load the fields\r\n                    .Fields()\r\n                    // Execute the request\r\n                    .execute(function (fields) {\r\n                    // Load the field data\r\n                    loadFieldData(fields);\r\n                    // Resolve the promise\r\n                    resolve();\r\n                }, reject, true);\r\n            });\r\n        };\r\n        // Method to process the fields\r\n        var processFields = function () {\r\n            var formFields = {};\r\n            // Parse the fields provided\r\n            for (var i = 0; i < _props.fields.length; i++) {\r\n                var field = _info.fields[_props.fields[i]];\r\n                // Ensure the field exists\r\n                if (field) {\r\n                    // Save the field\r\n                    formFields[field.InternalName] = field;\r\n                    // See if this is a taxonomy field\r\n                    if (field.TypeAsString.indexOf(\"TaxonomyFieldType\") == 0) {\r\n                        // Parse the list fields\r\n                        for (var fieldName in _info.fields) {\r\n                            var valueField = _info.fields[fieldName];\r\n                            // See if this is a value field\r\n                            if (valueField.InternalName == field.InternalName + \"_0\" || valueField.Title == field.InternalName + \"_0\") {\r\n                                // Include this field\r\n                                formFields[valueField.InternalName] = valueField;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Update the fields\r\n            _info.fields = formFields;\r\n        };\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Save the methods\r\n            _reject = reject;\r\n            _resolve = resolve;\r\n            // Load the list data\r\n            load();\r\n        });\r\n    },\r\n    // Method to generate the odata query\r\n    generateODataQuery: function (info, loadAttachments) {\r\n        if (loadAttachments === void 0) { loadAttachments = false; }\r\n        var query = info.query || {};\r\n        // Default the select query to get all the fields by default\r\n        query.Select = query.Select || [\"*\"];\r\n        query.Expand = query.Expand || [];\r\n        // See if we are loading the attachments\r\n        if (loadAttachments) {\r\n            // Expand the attachment files collection\r\n            query.Expand.push(\"AttachmentFiles\");\r\n            // Select the attachment files\r\n            query.Select.push(\"Attachments\");\r\n            query.Select.push(\"AttachmentFiles\");\r\n        }\r\n        // Parse the fields\r\n        for (var fieldName in info.fields) {\r\n            var field = info.fields[fieldName];\r\n            // Update the query, based on the type\r\n            switch (field.FieldTypeKind) {\r\n                // Lookup Field\r\n                case __1.SPTypes.FieldType.Lookup:\r\n                    var lookupField = field;\r\n                    // See if this is an associated lookup field\r\n                    if (lookupField.PrimaryFieldId) {\r\n                        // Parse the form fields to find the parent field\r\n                        for (var parentFieldName in info.fields) {\r\n                            var parentField = info.fields[parentFieldName];\r\n                            // See if the parent field is being loaded\r\n                            if (parentField.Id == lookupField.PrimaryFieldId) {\r\n                                // Select the field\r\n                                query.Select.push(parentField.InternalName + \"/\" + lookupField.LookupField);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Expand the field\r\n                        query.Expand.push(field.InternalName);\r\n                        // Select the fields\r\n                        query.Select.push(field.InternalName + \"/Id\");\r\n                        query.Select.push(field.InternalName + \"/\" + field.LookupField);\r\n                    }\r\n                    break;\r\n                // User Field\r\n                case __1.SPTypes.FieldType.User:\r\n                    // Expand the field\r\n                    query.Expand.push(field.InternalName);\r\n                    // Select the fields\r\n                    query.Select.push(field.InternalName + \"/Id\");\r\n                    query.Select.push(field.InternalName + \"/Title\");\r\n                    break;\r\n                // Default\r\n                default:\r\n                    // See if this is an taxonomy field\r\n                    if (field.TypeAsString.indexOf(\"TaxonomyFieldType\") == 0) {\r\n                        // Parse the fields\r\n                        for (var fieldName_2 in info.fields) {\r\n                            var valueField = info.fields[fieldName_2];\r\n                            // See if this is the value field\r\n                            if (valueField.InternalName == field.InternalName + \"_0\" || valueField.Title == field.InternalName + \"_0\") {\r\n                                // Include the value field\r\n                                query.Select.push(valueField.InternalName);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        // Return the query\r\n        return query;\r\n    },\r\n    // Method to load the item attachments\r\n    loadAttachments: function (info) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure the item id exists\r\n            var itemId = info.item ? info.item.Id : info.itemId;\r\n            if (itemId > 0) {\r\n                // Get the web\r\n                __1.Web(info.webUrl)\r\n                    // Get the list\r\n                    .Lists(info.listName)\r\n                    // Get the item\r\n                    .Items(itemId)\r\n                    // Get the attachment files\r\n                    .AttachmentFiles()\r\n                    // Execute the request\r\n                    .execute(function (attachments) {\r\n                    // Ensure the attachments exist\r\n                    if (!attachments.existsFl) {\r\n                        // Reject the promise\r\n                        reject(attachments.response);\r\n                        return;\r\n                    }\r\n                    // Resolve the promise\r\n                    resolve(attachments.results || []);\r\n                }, reject);\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                resolve([]);\r\n            }\r\n        });\r\n    },\r\n    // Method to refresh an item\r\n    refreshItem: function (info) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Update the query\r\n            info.query = exports.ListForm.generateODataQuery(info, info.attachments ? true : false);\r\n            // Get the item\r\n            info.list.Items(info.item.Id).query(info.query).execute(function (item) {\r\n                // Update the item\r\n                info.item = item;\r\n                // Get the item values\r\n                info.list.Items(item.Id).query({\r\n                    Expand: [\"FieldValuesAsText\", \"Folder\"]\r\n                }).execute(function (item) {\r\n                    // Set the values\r\n                    info.itemFolder = item.Folder;\r\n                    info.fieldValuesAsText = item.FieldValuesAsText;\r\n                });\r\n                // Get the html values for this item\r\n                // This is needed for complex field values\r\n                info.list.Items(item.Id).FieldValuesAsHtml().execute(function (values) {\r\n                    // Set the values\r\n                    info.fieldValuesAsHtml = values;\r\n                    // Resolve the promise\r\n                    resolve(info);\r\n                }, true);\r\n            }, reject);\r\n        });\r\n    },\r\n    // Method to remove attachments from an item\r\n    removeAttachment: function (info, fileName) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure attachments exist\r\n            if (info.attachments) {\r\n                // Parse the attachments\r\n                for (var i = 0; i < info.attachments.length; i++) {\r\n                    // See if this is the target attachment\r\n                    var attachment = info.attachments[i];\r\n                    if (attachment.FileName == fileName) {\r\n                        // Get the web\r\n                        __1.Web(info.webUrl)\r\n                            // Get the file\r\n                            .getFileByServerRelativeUrl(attachment.ServerRelativeUrl)\r\n                            // Delete the file\r\n                            .delete()\r\n                            // Execute the request\r\n                            .execute(function () {\r\n                            // Resolve the promise\r\n                            resolve(info);\r\n                        }, reject);\r\n                        // Attachment found\r\n                        return;\r\n                    }\r\n                    // Attachment not found\r\n                    reject(\"Attachment '\" + fileName + \"' was not found.\");\r\n                }\r\n            }\r\n            else {\r\n                // Attachments not loaded\r\n                reject(\"Attachment '\" + fileName + \"' was not found.\");\r\n            }\r\n        });\r\n    },\r\n    // Method to save attachments to an existing item\r\n    saveAttachments: function (info, attachmentInfo) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            var itemId = info.item ? info.item.Id : info.itemId;\r\n            if (itemId > 0) {\r\n                // Get the web\r\n                var attachments = __1.Web(info.webUrl)\r\n                    // Get the lists\r\n                    .Lists(info.listName)\r\n                    // Get the item\r\n                    .Items(itemId)\r\n                    // Get the attachment files\r\n                    .AttachmentFiles();\r\n                // Parse the attachment information\r\n                for (var i = 0; i < attachmentInfo.length; i++) {\r\n                    var attachment = attachmentInfo[i];\r\n                    // Add the attachment\r\n                    attachments.add(attachment.name, attachment.data).execute(true);\r\n                }\r\n                // Wait for the requests to complete\r\n                attachments.done(function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Resolve the promise\r\n                    resolve.apply(args);\r\n                });\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                resolve(null);\r\n            }\r\n        });\r\n    },\r\n    // Method to save a new or existing item\r\n    saveItem: function (info, formValues) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if this is an existing item\r\n            if (info.item && info.item.update) {\r\n                // Update the item\r\n                info.item.update(formValues).execute(function (response) {\r\n                    // Refresh the item\r\n                    exports.ListForm.refreshItem(info).then(function (info) {\r\n                        // Resolve the promise\r\n                        resolve(info);\r\n                    }, reject);\r\n                });\r\n            }\r\n            else {\r\n                // Set the metadata type\r\n                formValues[\"__metadata\"] = { type: info.list.ListItemEntityTypeFullName };\r\n                // Add the item\r\n                info.list.Items().add(formValues)\r\n                    // Execute the request\r\n                    .execute(function (item) {\r\n                    // Update the info\r\n                    info.item = item;\r\n                    // Refresh the item\r\n                    exports.ListForm.refreshItem(info).then(function (info) {\r\n                        // Resolve the promise\r\n                        resolve(info);\r\n                    });\r\n                }, reject);\r\n            }\r\n        });\r\n    },\r\n    // Method to show a file dialog\r\n    showFileDialog: function (info, onSave) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Method to add an attachment\r\n            var addAttachment = function (name, data) {\r\n                // Call the save event\r\n                onSave ? onSave({ name: name, data: data }) : null;\r\n                // Get the list\r\n                info.list\r\n                    // Get the item\r\n                    .Items(info.item.Id)\r\n                    // Get the attachments\r\n                    .AttachmentFiles()\r\n                    // Add the file\r\n                    .add(name, data)\r\n                    // Execute the request\r\n                    .execute(function () {\r\n                    // Refresh the item\r\n                    exports.ListForm.refreshItem(info).then(function (info) {\r\n                        // Remove the element\r\n                        document.body.removeChild(el);\r\n                        // Resolve the promise\r\n                        resolve(info);\r\n                    });\r\n                }, reject);\r\n            };\r\n            // Method to read the file\r\n            var readFile = function (ev) {\r\n                // Get the source file\r\n                var srcFile = ev.target[\"files\"][0];\r\n                if (srcFile) {\r\n                    var reader = new FileReader();\r\n                    // Set the file loaded event\r\n                    reader.onloadend = function (ev) {\r\n                        var attachment = null;\r\n                        var ext = srcFile.name.split(\".\");\r\n                        ext = ext[ext.length - 1].toLowerCase();\r\n                        // See if the info exists\r\n                        if (info) {\r\n                            // Add the attachment\r\n                            addAttachment(srcFile.name, ev.target.result);\r\n                        }\r\n                        else {\r\n                            // Remove the element\r\n                            document.body.removeChild(el);\r\n                            // Resolve the promise with the file information\r\n                            resolve({\r\n                                data: ev.target.result,\r\n                                name: srcFile.name\r\n                            });\r\n                        }\r\n                    };\r\n                    // Set the error\r\n                    reader.onerror = function (ev) {\r\n                        // Remove the element\r\n                        document.body.removeChild(el);\r\n                        // Reject the promise\r\n                        reject(ev.target.error);\r\n                    };\r\n                    // Read the file\r\n                    reader.readAsArrayBuffer(srcFile);\r\n                }\r\n            };\r\n            // Create the file element\r\n            var el = document.body.querySelector(\"#listform-attachment\");\r\n            if (el == null) {\r\n                el = document.createElement(\"input\");\r\n                // Set the properties\r\n                el.id = \"listform-attachment\";\r\n                el.type = \"file\";\r\n                el.hidden = true;\r\n                el.onchange = readFile;\r\n                // Add the element to the body\r\n                document.body.appendChild(el);\r\n            }\r\n            // Show the dialog\r\n            el.click();\r\n        });\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listForm.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listFormField.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listFormField.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ListFormField = void 0;\r\nvar __1 = __webpack_require__(/*! .. */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\r\n/**\r\n * List Form Field\r\n */\r\nexports.ListFormField = {\r\n    // Method to create an instance of the list form field\r\n    create: function (props) {\r\n        var _fieldInfo = props || {};\r\n        var _reject = null;\r\n        var _resolve = null;\r\n        // Load the field\r\n        var load = function () {\r\n            // See if the field exists\r\n            if (_fieldInfo.field) {\r\n                // Process the field\r\n                processField();\r\n            }\r\n            // Else, load the field from the information provided\r\n            else {\r\n                // Get the web\r\n                __1.Web(_fieldInfo.webUrl)\r\n                    // Get the list\r\n                    .Lists(_fieldInfo.listName)\r\n                    // Get the fields\r\n                    .Fields()\r\n                    // Get the field by its internal name\r\n                    .getByInternalNameOrTitle(_fieldInfo.name)\r\n                    // Execute the request\r\n                    .execute(function (field) {\r\n                    // Save the field\r\n                    _fieldInfo.field = field;\r\n                    // Process the field\r\n                    processField();\r\n                }, _reject);\r\n            }\r\n        };\r\n        // Method to proces the field and save its information\r\n        var processField = function () {\r\n            // Update the field information\r\n            _fieldInfo.defaultValue = _fieldInfo.field.DefaultValue;\r\n            _fieldInfo.readOnly = _fieldInfo.field.ReadOnlyField;\r\n            _fieldInfo.required = _fieldInfo.field.Required ? true : false;\r\n            _fieldInfo.title = _fieldInfo.field.Title;\r\n            _fieldInfo.type = _fieldInfo.field.FieldTypeKind;\r\n            _fieldInfo.typeAsString = _fieldInfo.field.TypeAsString;\r\n            // Update the field info, based on the type\r\n            switch (_fieldInfo.type) {\r\n                // Choice\r\n                case __1.SPTypes.FieldType.Choice:\r\n                case __1.SPTypes.FieldType.MultiChoice:\r\n                    var choices = _fieldInfo.field.Choices;\r\n                    _fieldInfo.choices = (choices ? choices[\"results\"] : null) || [];\r\n                    _fieldInfo.multi = _fieldInfo.type == __1.SPTypes.FieldType.MultiChoice;\r\n                    break;\r\n                // Date/Time\r\n                case __1.SPTypes.FieldType.DateTime:\r\n                    var fldDate = _fieldInfo.field;\r\n                    _fieldInfo.showTime = fldDate.DisplayFormat == __1.SPTypes.DateFormat.DateTime;\r\n                    break;\r\n                // Lookup\r\n                case __1.SPTypes.FieldType.Lookup:\r\n                    var fldLookup = _fieldInfo.field;\r\n                    _fieldInfo.lookupField = fldLookup.LookupField;\r\n                    _fieldInfo.lookupListId = fldLookup.LookupList;\r\n                    _fieldInfo.lookupWebId = fldLookup.LookupWebId;\r\n                    _fieldInfo.multi = fldLookup.AllowMultipleValues;\r\n                    break;\r\n                // Number\r\n                case __1.SPTypes.FieldType.Number:\r\n                    var fldNumber = _fieldInfo.field;\r\n                    var startIdx = fldNumber.SchemaXml.indexOf('Decimals=\"') + 10;\r\n                    _fieldInfo.decimals = startIdx > 10 ? parseInt(fldNumber.SchemaXml.substr(startIdx, fldNumber.SchemaXml.substr(startIdx).indexOf('\"'))) : 0;\r\n                    _fieldInfo.maxValue = fldNumber.MaximumValue;\r\n                    _fieldInfo.minValue = fldNumber.MinimumValue;\r\n                    _fieldInfo.showAsPercentage = fldNumber.SchemaXml.indexOf('Percentage=\"TRUE\"') > 0;\r\n                    break;\r\n                // Note\r\n                case __1.SPTypes.FieldType.Note:\r\n                    var fldNote = _fieldInfo.field;\r\n                    _fieldInfo.multiline = true;\r\n                    _fieldInfo.richText = fldNote.RichText;\r\n                    _fieldInfo.rows = fldNote.NumberOfLines;\r\n                    break;\r\n                // Text\r\n                case __1.SPTypes.FieldType.Text:\r\n                    _fieldInfo.multiline = false;\r\n                    _fieldInfo.richText = false;\r\n                    _fieldInfo.rows = 1;\r\n                    break;\r\n                // User\r\n                case __1.SPTypes.FieldType.User:\r\n                    var fldUser = _fieldInfo.field;\r\n                    _fieldInfo.allowGroups = fldUser.SelectionMode == __1.SPTypes.FieldUserSelectionType.PeopleAndGroups;\r\n                    _fieldInfo.multi = fldUser.AllowMultipleValues;\r\n                    break;\r\n                // Default\r\n                default:\r\n                    // See if this is an MMS field\r\n                    if (_fieldInfo.typeAsString.indexOf(\"TaxonomyFieldType\") == 0) {\r\n                        var fldMMS = _fieldInfo.field;\r\n                        _fieldInfo.multi = fldMMS.AllowMultipleValues;\r\n                        _fieldInfo.termId = fldMMS.IsAnchorValid ? fldMMS.AnchorId : fldMMS.TermSetId;\r\n                        _fieldInfo.termSetId = fldMMS.TermSetId;\r\n                        _fieldInfo.termStoreId = fldMMS.SspId;\r\n                    }\r\n                    break;\r\n            }\r\n            // Resolve the promise\r\n            _resolve(_fieldInfo);\r\n        };\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Save the methods\r\n            _resolve = resolve;\r\n            _reject = reject;\r\n            // See if the field exists\r\n            if (_fieldInfo.field) {\r\n                // Process the field\r\n                processField();\r\n            }\r\n            else {\r\n                // Load the field\r\n                load();\r\n            }\r\n        });\r\n    },\r\n    // Method to load the lookup data\r\n    loadLookupData: function (info, queryTop) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the current site collection\r\n            __1.Site()\r\n                // Get the web containing the lookup list\r\n                .openWebById(info.lookupWebId)\r\n                // Execute the request\r\n                .execute(function (web) {\r\n                // See if there is a filter\r\n                var query = info.lookupFilter || {};\r\n                if (typeof (query) == \"string\") {\r\n                    // Set the filter\r\n                    query = {\r\n                        Filter: query\r\n                    };\r\n                }\r\n                // Default the value if it hasn't been set\r\n                if (query.GetAllItems == null) {\r\n                    // Set the default value\r\n                    query.GetAllItems = true;\r\n                }\r\n                // Default the value if it hasn't been set\r\n                if (query.OrderBy == null) {\r\n                    // Set the default sort\r\n                    query.OrderBy = [\"Title\"];\r\n                }\r\n                // Default the value if it hasn't been set\r\n                if (query.Select == null) {\r\n                    // Set the default value\r\n                    query.Select = [\"ID\", info.lookupField];\r\n                }\r\n                // Default the value if it hasn't been set\r\n                if (query.Top == null) {\r\n                    // Set the default value\r\n                    query.Top = queryTop > 0 && queryTop <= 5000 ? queryTop : 500;\r\n                }\r\n                // Get the list\r\n                web.Lists()\r\n                    // Get the list by id\r\n                    .getById(info.lookupListId)\r\n                    // Get the items\r\n                    .Items()\r\n                    // Set the query\r\n                    .query(query)\r\n                    // Execute the request\r\n                    .execute(function (items) {\r\n                    // Resolve the promise\r\n                    resolve(items.results.sort(function (a, b) {\r\n                        if (a[info.lookupField] < b[info.lookupField]) {\r\n                            return -1;\r\n                        }\r\n                        if (a[info.lookupField] > b[info.lookupField]) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    }));\r\n                }, reject);\r\n            }, reject);\r\n        });\r\n    },\r\n    // Method to load the mms data\r\n    loadMMSData: function (info) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the term set\r\n            __1.Helper.Taxonomy.getTermSetById(info.termStoreId, info.termSetId).then(function (termSet) {\r\n                // Get the target root term\r\n                var root = __1.Helper.Taxonomy.findById(termSet, info.termId);\r\n                // See if the root node doesn't exist\r\n                if (root == null) {\r\n                    // Set the root to the term set\r\n                    root = __1.Helper.Taxonomy.findById(termSet, info.termSetId);\r\n                }\r\n                // Resolve the request\r\n                resolve(__1.Helper.Taxonomy.toArray(root));\r\n            }, reject);\r\n        });\r\n    },\r\n    // Method to load the mms value field\r\n    loadMMSValueField: function (info) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the web\r\n            __1.Web(info.webUrl)\r\n                // Get the list\r\n                .Lists(info.listName)\r\n                // Get the fields\r\n                .Fields()\r\n                // Get the hidden field\r\n                .getByInternalNameOrTitle(info.name + \"_0\")\r\n                // Execute the request\r\n                .execute(\r\n            // Success\r\n            function (field) {\r\n                // Resolve the promise\r\n                resolve(field);\r\n            }, \r\n            // Error\r\n            function () {\r\n                // Reject w/ a message\r\n                reject(\"Unable to find the hidden value field for '\" + info.name + \"'.\");\r\n            });\r\n        });\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/listFormField.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addContentEditorWebPart.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addContentEditorWebPart.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.addContentEditorWebPart = void 0;\r\nvar webpart_1 = __webpack_require__(/*! ../webpart */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/webpart.js\");\r\n// Method to add a script editor webpart to the page\r\nexports.addContentEditorWebPart = function (url, wpProps) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Get the current context\r\n        var context = SP.ClientContext.get_current();\r\n        // Get the webpart manager for the page\r\n        var page = context.get_web().getFileByServerRelativeUrl(url);\r\n        var wpMgr = page.getLimitedWebPartManager(SP.WebParts.PersonalizationScope.shared);\r\n        // Create the webpart\r\n        var wp = wpMgr.importWebPart(webpart_1.WebPart.generateContentEditorXML(wpProps)).get_webPart();\r\n        // Add the webpart to the page\r\n        wpMgr.addWebPart(wp, wpProps.zone || \"\", wpProps.index || 0);\r\n        // Save the page\r\n        context.load(wp);\r\n        context.executeQueryAsync(\r\n        // Success\r\n        function () {\r\n            // Resolve the promise\r\n            resolve();\r\n        }, \r\n        // Error\r\n        function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // Reject the promise\r\n            reject(args[1] ? args[1].get_message() : \"\");\r\n        });\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addContentEditorWebPart.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addPermissionLevel.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addPermissionLevel.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.addPermissionLevel = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\n/**\r\n * Adds a permission level to the current or specified web.\r\n */\r\nexports.addPermissionLevel = function (props) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Ensure the base permissions exist\r\n        if (SP && SP.BasePermissions) {\r\n            // Set the context and get the role definitions\r\n            var ctx = props.WebUrl ? new SP.ClientContext(props.WebUrl) : SP.ClientContext.get_current();\r\n            // Set the base permissions\r\n            var basePermissions = new SP.BasePermissions();\r\n            var permissions = props.Permissions || [];\r\n            for (var i = 0; i < permissions.length; i++) {\r\n                // Set the flag\r\n                basePermissions.set(permissions[i]);\r\n            }\r\n            // Create the role definition\r\n            var roleDefInfo = new SP.RoleDefinitionCreationInformation();\r\n            roleDefInfo.set_basePermissions(basePermissions);\r\n            roleDefInfo.set_description(props.Description);\r\n            roleDefInfo.set_order(props.Order);\r\n            roleDefInfo.set_name(props.Name);\r\n            // Add the role definition\r\n            var roleDef_1 = ctx.get_site().get_rootWeb().get_roleDefinitions().add(roleDefInfo);\r\n            ctx.load(roleDef_1);\r\n            // Execute the request\r\n            ctx.executeQueryAsync(function () {\r\n                // Get the role definition\r\n                lib_1.Site(props.WebUrl).RootWeb().RoleDefinitions().getById(roleDef_1.get_id()).execute(function (roleDef) {\r\n                    // Resolve the request\r\n                    resolve(roleDef);\r\n                }, reject);\r\n            }, reject);\r\n        }\r\n        else {\r\n            // Reject the request\r\n            reject(\"The 'SP' core library is not available.\");\r\n        }\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addPermissionLevel.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addScriptEditorWebPart.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addScriptEditorWebPart.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.addScriptEditorWebPart = void 0;\r\nvar webpart_1 = __webpack_require__(/*! ../webpart */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/webpart.js\");\r\n// Method to add a script editor webpart to the page\r\nexports.addScriptEditorWebPart = function (url, wpProps) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Get the current context\r\n        var context = SP.ClientContext.get_current();\r\n        // Get the webpart manager for the page\r\n        var page = context.get_web().getFileByServerRelativeUrl(url);\r\n        var wpMgr = page.getLimitedWebPartManager(SP.WebParts.PersonalizationScope.shared);\r\n        // Create the webpart\r\n        var wp = wpMgr.importWebPart(webpart_1.WebPart.generateScriptEditorXML(wpProps)).get_webPart();\r\n        // Add the webpart to the page\r\n        wpMgr.addWebPart(wp, wpProps.zone || \"\", wpProps.index || 0);\r\n        // Save the page\r\n        context.load(wp);\r\n        context.executeQueryAsync(\r\n        // Success\r\n        function () {\r\n            // Resolve the promise\r\n            resolve();\r\n        }, \r\n        // Error\r\n        function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // Reject the promise\r\n            reject(args[1] ? args[1].get_message() : \"\");\r\n        });\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addScriptEditorWebPart.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createContentType.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createContentType.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.createContentType = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\n/**\r\n * Creates a content type in a web or specified list.\r\n * @param ctInfo - The content type information.\r\n * @param parentInfo - The parent content type id and url containing it.\r\n * @param webUrl - The relative url to create the content type in.\r\n * @param listName - The list name to add the content type to.\r\n */\r\nexports.createContentType = function (ctInfo, parentInfo, webUrl, listName) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Set the context\r\n        var ctx = webUrl ? new SP.ClientContext(webUrl) : SP.ClientContext.get_current();\r\n        // Get the parent content type\r\n        var parentContentType = (parentInfo.Url ? ctx.get_site().openWeb(parentInfo.Url) : ctx.get_web()).get_contentTypes().getById(parentInfo.Id);\r\n        // Create the content type\r\n        var ct = new SP.ContentTypeCreationInformation();\r\n        ctInfo.Description != null ? ct.set_description(ctInfo.Description) : null;\r\n        ctInfo.Group != null ? ct.set_group(ctInfo.Group) : null;\r\n        ct.set_name(ctInfo.Name);\r\n        ct.set_parentContentType(parentContentType);\r\n        // Add the content type\r\n        var src = listName ? ctx.get_web().get_lists().getByTitle(listName) : ctx.get_web();\r\n        var contentTypes = src.get_contentTypes();\r\n        contentTypes.add(ct);\r\n        ctx.load(contentTypes);\r\n        // Execute the request\r\n        ctx.executeQueryAsync(\r\n        // Success\r\n        function () {\r\n            // Set the content type collection\r\n            var cts = (listName ? lib_1.Web().Lists(listName) : lib_1.Web()).ContentTypes();\r\n            // Find the content type\r\n            cts.query({ Filter: \"Name eq '\" + ctInfo.Name + \"'\" }).execute(function (cts) {\r\n                // Resolve the request\r\n                resolve(cts.results[0]);\r\n            });\r\n        }, \r\n        // Error\r\n        function (sender, args) {\r\n            // Log\r\n            console.log(\"[gd-sprest][Create Content Type] Error adding the content type.\", ctInfo.Name);\r\n            // Reject the request\r\n            reject(args.get_message());\r\n        });\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createContentType.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createDocSet.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createDocSet.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.createDocSet = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar request_1 = __webpack_require__(/*! ./request */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/request.js\");\r\n/**\r\n * Creates a document set item.\r\n * @param name - The name of the document set folder to create.\r\n * @param listName - The name of the document set library.\r\n * @param webUrl - The url of the web containing the document set library.\r\n */\r\nexports.createDocSet = function (name, listName, webUrl) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Get the document set's root folder\r\n        lib_1.Web(webUrl).Lists(listName).query({ Expand: [\"ContentTypes\", \"ParentWeb\", \"RootFolder\"] }).execute(function (list) {\r\n            // Parse the content types\r\n            var ctId = \"0x0120D520\";\r\n            for (var i = 0; i < list.ContentTypes.results.length; i++) {\r\n                // See if this is the document set content type\r\n                if (list.ContentTypes.results[i].StringId.indexOf(ctId) == 0) {\r\n                    // Set the content type id\r\n                    ctId = list.ContentTypes.results[i].StringId;\r\n                    break;\r\n                }\r\n            }\r\n            // Create the document set item\r\n            request_1.request({\r\n                method: \"POST\",\r\n                url: list.ParentWebUrl + \"/_vti_bin/listdata.svc/\" + list.Title.replace(/ /g, \"\"),\r\n                headers: {\r\n                    Accept: \"application/json;odata=verbose\",\r\n                    \"Content-Type\": \"application/json;odata=verbose\",\r\n                    Slug: list.RootFolder.ServerRelativeUrl + \"/\" + name + \"|\" + ctId,\r\n                    \"X-Requested-With\": \"XMLHttpRequest\"\r\n                },\r\n                data: {\r\n                    Title: name,\r\n                    Path: list.RootFolder.ServerRelativeUrl\r\n                }\r\n            }).then(function (response) {\r\n                // See if the request was successful\r\n                if (response.d && response.d.Id > 0) {\r\n                    // Get the document set item and resolve the promise\r\n                    lib_1.Web(webUrl).Lists(listName).Items(response.d.Id).execute(resolve);\r\n                }\r\n                else {\r\n                    // Reject the promise\r\n                    reject(response[\"response\"]);\r\n                }\r\n            });\r\n        }, reject);\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createDocSet.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/hasPermissions.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/hasPermissions.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.hasPermissions = void 0;\r\n/**\r\n * Determines if the user has permissions, based on the permission kind value\r\n */\r\nexports.hasPermissions = function (permissionMask, permissions) {\r\n    if (permissions === void 0) { permissions = []; }\r\n    // Method to ensure the core library is loaded\r\n    var load = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the core lib is loaded\r\n            if (window[\"SP\"] && window[\"SP\"].BasePermissions) {\r\n                resolve();\r\n            }\r\n            // Else, wait for the core script to be loaded\r\n            else {\r\n                window[\"SP\"].SOD.executeFunc(\"sp.js\", \"SP.BasePermissions\", function () { resolve(); });\r\n            }\r\n        });\r\n    };\r\n    // Return a promise\r\n    return new Promise(function (resolve) {\r\n        // Ensure the core lib is loaded\r\n        load().then(function () {\r\n            var hasPermissions = false;\r\n            // Set the permissions\r\n            var requestedPermissions = typeof (permissions) === \"number\" ? [permissions] : permissions;\r\n            // Initialize the base permissions from the value\r\n            var basePermissions = new SP.BasePermissions();\r\n            basePermissions.initPropertiesFromJson(permissionMask);\r\n            // Default the permission flag\r\n            hasPermissions = true;\r\n            // Parse the requested permissions\r\n            for (var i = 0; i < requestedPermissions.length; i++) {\r\n                // See if the user has permissions\r\n                if (!basePermissions.has(requestedPermissions[i])) {\r\n                    // Set the flag and break from the loop\r\n                    hasPermissions = false;\r\n                    break;\r\n                }\r\n            }\r\n            // Resolve the promise\r\n            resolve(hasPermissions);\r\n        });\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/hasPermissions.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./addContentEditorWebPart */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addContentEditorWebPart.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./addPermissionLevel */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addPermissionLevel.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./addScriptEditorWebPart */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/addScriptEditorWebPart.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./createContentType */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createContentType.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./createDocSet */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/createDocSet.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./hasPermissions */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/hasPermissions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parse */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/parse.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./request */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/request.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./setContentTypeFields */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setContentTypeFields.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./setGroupOwner */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setGroupOwner.js\"), exports);\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/parse.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/parse.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.parse = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Convert a JSON string to a base object\r\n */\r\nexports.parse = function (jsonString) {\r\n    // Try to parse the string\r\n    try {\r\n        var obj = JSON.parse(jsonString);\r\n        // Create a base object\r\n        var base = new utils_1.Base(obj.props);\r\n        // Set the properties\r\n        base.response = obj.response;\r\n        base.status = obj.status;\r\n        base.targetInfo = obj.targetInfo;\r\n        // Update the object\r\n        utils_1.Request.updateDataObject(base, false);\r\n        // Return the base object\r\n        return base;\r\n    }\r\n    catch (_a) { }\r\n    return null;\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/parse.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/request.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/request.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.request = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * XML HTTP Request\r\n */\r\nexports.request = function (props) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Execute the request and resolve the promise\r\n        (new utils_1.Base({\r\n            method: props.method || \"GET\",\r\n            url: props.url,\r\n            requestHeader: props.headers,\r\n            data: props.data\r\n        })).execute(resolve, reject);\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/request.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setContentTypeFields.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setContentTypeFields.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.setContentTypeFields = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\n/**\r\n * Sets the field links associated with a content type.\r\n * @param ctInfo - The content type information\r\n */\r\nexports.setContentTypeFields = function (ctInfo) {\r\n    // Clears the content type field links\r\n    var clearLinks = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the links\r\n            getLinks().then(function (fieldLinks) {\r\n                var skipFields = [];\r\n                // See if we need to remove any fields\r\n                if (fieldLinks.length > 0) {\r\n                    var updateFl = false;\r\n                    // Set the context\r\n                    var ctx = ctInfo.webUrl ? new SP.ClientContext(ctInfo.webUrl) : new SP.ClientContext(lib_1.ContextInfo.webServerRelativeUrl);\r\n                    // Get the source\r\n                    var src = ctInfo.listName ? ctx.get_web().get_lists().getByTitle(ctInfo.listName) : ctx.get_web();\r\n                    // Get the content type\r\n                    var contentType = src.get_contentTypes().getById(ctInfo.id);\r\n                    // Parse the content type field links\r\n                    for (var i = 0; i < fieldLinks.length; i++) {\r\n                        var fieldLink = fieldLinks[i];\r\n                        var removeFl = true;\r\n                        var _loop_1 = function (j) {\r\n                            var field = ctInfo.fields[j];\r\n                            var fieldName = typeof (field) === \"string\" ? field : field.Name || field.FieldInternalName;\r\n                            // See if we are keeping this field\r\n                            if (fieldName == fieldLink.Name) {\r\n                                var propUpdateFl_1 = false;\r\n                                // Checks if an update is needed\r\n                                var updateField = function (oldValue, newValue) {\r\n                                    // Ensure a value exists\r\n                                    if (newValue == null) {\r\n                                        return;\r\n                                    }\r\n                                    // See if an update is needed\r\n                                    if (oldValue == newValue) {\r\n                                        return;\r\n                                    }\r\n                                    // Set the flag\r\n                                    propUpdateFl_1 = true;\r\n                                };\r\n                                // Update the properties\r\n                                updateField(fieldLink.DisplayName, field.DisplayName);\r\n                                updateField(fieldLink.Hidden, field.Hidden);\r\n                                updateField(fieldLink.ReadOnly, field.ReadOnly);\r\n                                updateField(fieldLink.Required, field.Required);\r\n                                updateField(fieldLink.ShowInDisplayForm, field.ShowInDisplayForm);\r\n                                // See if an update to the property is needed\r\n                                if (!propUpdateFl_1) {\r\n                                    // Set the flag to not remove this field reference\r\n                                    removeFl = false;\r\n                                    // Add the field to skip\r\n                                    skipFields.push(fieldLink);\r\n                                }\r\n                                return \"break\";\r\n                            }\r\n                        };\r\n                        // Parse the fields to add\r\n                        for (var j = 0; j < ctInfo.fields.length; j++) {\r\n                            var state_1 = _loop_1(j);\r\n                            if (state_1 === \"break\")\r\n                                break;\r\n                        }\r\n                        // See if we are removing the field\r\n                        if (removeFl) {\r\n                            // Remove the field link\r\n                            contentType.get_fieldLinks().getById(fieldLink.Id).deleteObject();\r\n                            // Set the flag\r\n                            updateFl = true;\r\n                            // Log\r\n                            console.log(\"[gd-sprest][Set Content Type Fields] Removing the field link: \" + fieldLink.Name);\r\n                        }\r\n                    }\r\n                    // See if an update is required\r\n                    if (updateFl) {\r\n                        // Update the content type\r\n                        contentType.update(false);\r\n                        // Execute the request\r\n                        ctx.executeQueryAsync(\r\n                        // Success\r\n                        function () {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][Set Content Type Fields] Removed the field links successfully.\");\r\n                            // Resolve the request\r\n                            resolve(skipFields);\r\n                        }, \r\n                        // Error\r\n                        function (sender, args) {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][Set Content Type Fields] Error removing the field links.\");\r\n                            // Reject the request\r\n                            reject();\r\n                        });\r\n                    }\r\n                    else {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Set Content Type Fields] No fields need to be removed.\");\r\n                        // Resolve the request\r\n                        resolve(skipFields);\r\n                    }\r\n                }\r\n                else {\r\n                    // Resolve the request\r\n                    resolve(skipFields);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    // Creates the field links\r\n    var createLinks = function (skipFields) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Set the context\r\n            var ctx = ctInfo.webUrl ? new SP.ClientContext(ctInfo.webUrl) : new SP.ClientContext(lib_1.ContextInfo.webServerRelativeUrl);\r\n            // Get the source\r\n            var src = ctInfo.listName ? ctx.get_web().get_lists().getByTitle(ctInfo.listName) : ctx.get_web();\r\n            var skipField = function (fieldName, fields) {\r\n                for (var i = 0; i < fields.length; i++) {\r\n                    // See if we are skipping this field\r\n                    if (fields[i].Name == fieldName) {\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            // Parse the fields to add\r\n            var fields = [];\r\n            for (var i = 0; i < ctInfo.fields.length; i++) {\r\n                var fieldInfo = ctInfo.fields[i];\r\n                var fieldName = typeof (fieldInfo) === \"string\" ? fieldInfo : fieldInfo.Name || fieldInfo.FieldInternalName;\r\n                // See if we are skipping this field\r\n                if (skipField(fieldName, skipFields)) {\r\n                    continue;\r\n                }\r\n                // Load the field\r\n                var field = src.get_fields().getByInternalNameOrTitle(fieldName);\r\n                ctx.load(field);\r\n                // Log\r\n                console.log(\"[gd-sprest][Set Content Type Fields] Adding the field link: \" + fieldName);\r\n                // Save a reference to this field\r\n                fields.push({ ref: field, info: fieldInfo });\r\n            }\r\n            // See if an update is needed\r\n            if (fields.length > 0) {\r\n                // Execute the request\r\n                ctx.executeQueryAsync(function () {\r\n                    // Get the content type\r\n                    var contentType = src.get_contentTypes().getById(ctInfo.id);\r\n                    ctx.load(contentType);\r\n                    // Parse the fields\r\n                    for (var i = 0; i < fields.length; i++) {\r\n                        var field = fields[i];\r\n                        /**\r\n                         * The field link set_[property] methods don't seem to work. Setting the field information seems to be the only way.\r\n                         * The read only property is the only one that doesn't seem to work.\r\n                         */\r\n                        // See if the field ref has properties to update\r\n                        if (typeof (field.info) !== \"string\") {\r\n                            // Update the field properties\r\n                            field.info.DisplayName != null ? field.ref.set_title(field.info.DisplayName) : null;\r\n                            field.info.Hidden != null ? field.ref.set_hidden(field.info.Hidden) : null;\r\n                            field.info.ReadOnly != null ? field.ref.set_readOnlyField(field.info.ReadOnly) : null;\r\n                            field.info.Required != null ? field.ref.set_required(field.info.Required) : null;\r\n                            field.info.ShowInDisplayForm != null ? field.ref.setShowInDisplayForm(field.info.ShowInDisplayForm) : null;\r\n                        }\r\n                        // Create the field link\r\n                        var fieldLink = new SP.FieldLinkCreationInformation();\r\n                        fieldLink.set_field(field.ref);\r\n                        // Add the field link to the content type\r\n                        contentType.get_fieldLinks().add(fieldLink);\r\n                    }\r\n                    // Update the content type\r\n                    contentType.update(false);\r\n                    // Execute the request\r\n                    ctx.executeQueryAsync(\r\n                    // Success\r\n                    function () {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Set Content Type Fields] Added the field links successfully.\");\r\n                        // Resolve the request\r\n                        resolve();\r\n                    }, \r\n                    // Error\r\n                    function (sender, args) {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Set Content Type Fields] Error adding field references.\", args.get_message());\r\n                        // Reject the request\r\n                        reject();\r\n                    });\r\n                }, function (sender, args) {\r\n                    // Log\r\n                    console.log(\"[gd-sprest][Set Content Type Fields] Error getting field references.\", args.get_message());\r\n                    // Resolve the request\r\n                    resolve();\r\n                });\r\n            }\r\n            else {\r\n                // Log\r\n                console.log(\"[gd-sprest][Set Content Type Fields] No fields need to be added.\");\r\n                // Resolve the request\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n    // Gets the content type field links\r\n    var getLinks = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            var ct = null;\r\n            // See if list name exists\r\n            if (ctInfo.listName) {\r\n                // Get the list content type\r\n                ct = lib_1.Web(ctInfo.webUrl).Lists(ctInfo.listName).ContentTypes(ctInfo.id);\r\n            }\r\n            else {\r\n                // Get the content type\r\n                ct = lib_1.Web(ctInfo.webUrl).ContentTypes(ctInfo.id);\r\n            }\r\n            // Query the field links\r\n            ct.FieldLinks().query({\r\n                Select: [\"DisplayName\", \"Id\", \"Name\", \"Required\", \"ReadOnly\", \"ShowInDisplayForm\"]\r\n            }).execute(function (fieldLinks) {\r\n                // Resolve the request\r\n                resolve(fieldLinks.results);\r\n            }, reject);\r\n        });\r\n    };\r\n    // Set the order of the field references\r\n    var setOrder = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Set the context\r\n            var ctx = ctInfo.webUrl ? new SP.ClientContext(ctInfo.webUrl) : new SP.ClientContext(lib_1.ContextInfo.webServerRelativeUrl);\r\n            // Get the source\r\n            var src = ctInfo.listName ? ctx.get_web().get_lists().getByTitle(ctInfo.listName) : ctx.get_web();\r\n            // Get the content type\r\n            var contentType = src.get_contentTypes().getById(ctInfo.id);\r\n            // Parse the fields to add\r\n            var fieldNames = [];\r\n            for (var i = 0; i < ctInfo.fields.length; i++) {\r\n                var fieldInfo = ctInfo.fields[i];\r\n                var fieldName = typeof (fieldInfo) === \"string\" ? fieldInfo : fieldInfo.Name || fieldInfo.FieldInternalName;\r\n                // Add the field name\r\n                fieldNames.push(fieldName);\r\n            }\r\n            // Reorder the content type\r\n            contentType.get_fieldLinks().reorder(fieldNames);\r\n            // Update the content type\r\n            contentType.update(ctInfo.listName ? false : true);\r\n            // Execute the request\r\n            ctx.executeQueryAsync(\r\n            // Success\r\n            function () {\r\n                // Log\r\n                console.log(\"[gd-sprest][Set Content Type Fields] Updated the field order successfully.\");\r\n                // Resolve the request\r\n                resolve();\r\n            }, \r\n            // Error\r\n            function (sender, args) {\r\n                // Log\r\n                console.log(\"[gd-sprest][Set Content Type Fields] Error updating the field order.\", args.get_message());\r\n                // Reject the request\r\n                reject();\r\n            });\r\n        });\r\n    };\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Ensure the SP object exists\r\n        if (window[\"SP\"]) {\r\n            // Ensure fields exist\r\n            if (ctInfo.fields) {\r\n                // Clear the links\r\n                clearLinks().then(function (skipFields) {\r\n                    // Create the links\r\n                    createLinks(skipFields).then(function () {\r\n                        // Set the field order\r\n                        setOrder().then(resolve, reject);\r\n                    }, reject);\r\n                }, reject);\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                resolve();\r\n            }\r\n        }\r\n        else {\r\n            // Resolve the request\r\n            // This will cause issues in the SPConfig class\r\n            resolve();\r\n        }\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setContentTypeFields.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setGroupOwner.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setGroupOwner.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.setGroupOwner = void 0;\r\n/**\r\n * Sets the group owner\r\n * This uses JSOM to set a site group owner's property to another group. You can only set the owner to a user, using the REST API.\r\n */\r\nexports.setGroupOwner = function (groupName, ownerName) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Get the site groups\r\n        var context = new SP.ClientContext();\r\n        var siteGroups = context.get_web().get_siteGroups();\r\n        // Get the groups\r\n        var group = siteGroups.getByName(groupName);\r\n        var owner = siteGroups.getByName(ownerName);\r\n        // Set the owner\r\n        group.set_owner(owner);\r\n        // Save the changes\r\n        group.update();\r\n        // Execute the request\r\n        context.executeQueryAsync(resolve, reject);\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/methods/setGroupOwner.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/ribbonLink.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/ribbonLink.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RibbonLink = void 0;\r\n/**\r\n * Ribbon Link\r\n */\r\nexports.RibbonLink = function (props) {\r\n    // Creates the ribbon link\r\n    var create = function () {\r\n        var link = null;\r\n        // Default the append flag\r\n        var appendFl = typeof (props.appendFl) === \"boolean\" ? props.appendFl : false;\r\n        // Get the link\r\n        link = _elTopBar.querySelector(\"#\" + props.id);\r\n        if (link == null) {\r\n            // Create the link\r\n            link = document.createElement(\"a\");\r\n            link.className = \"ms-promotedActionButton \" + (props.className || \"\");\r\n            link.href = props.href ? props.href : \"javascript:void()\";\r\n            link.innerHTML = \"<span class='ms-promotedActionButton-text'>\" + props.title + \"</span>\";\r\n            link.id = props.id;\r\n            link.onclick = props.onClick;\r\n            // Add the link\r\n            appendFl ? _elTopBar.appendChild(link) : _elTopBar.insertBefore(link, _elTopBar.firstChild);\r\n        }\r\n        // Return the link\r\n        return link;\r\n    };\r\n    // Gets the top bar element\r\n    var _elTopBar = null;\r\n    var getTopBar = function () {\r\n        // See if the bar exists\r\n        if (_elTopBar == null) {\r\n            // Set the element\r\n            _elTopBar = document.querySelector(\"#RibbonContainer-TabRowRight\");\r\n        }\r\n        // Return the element\r\n        return _elTopBar;\r\n    };\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // See if the top bar exists\r\n        if (getTopBar()) {\r\n            // Create the link\r\n            var el = create();\r\n            if (el) {\r\n                // Resolve the promise\r\n                resolve(el);\r\n            }\r\n        }\r\n        else if (window) {\r\n            // Wait for the window to be loaded\r\n            window.addEventListener(\"load\", function () {\r\n                // See if the top bar exists\r\n                if (getTopBar()) {\r\n                    // Create the link\r\n                    var el = create();\r\n                    if (el) {\r\n                        // Resolve the promise\r\n                        resolve(el);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/ribbonLink.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sbLink.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sbLink.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SuiteBarLink = void 0;\r\n/**\r\n * Suite Bar Link\r\n */\r\nexports.SuiteBarLink = function (props) {\r\n    // Creates the ribbon link\r\n    var create = function () {\r\n        // Default the append flag\r\n        var appendFl = typeof (props.appendFl) === \"boolean\" ? props.appendFl : true;\r\n        // Query for the link, and ensure it exists\r\n        var link = _elTopLinks.querySelector(\"#\" + props.id);\r\n        if (link == null) {\r\n            // Create a list link\r\n            link = document.createElement(\"a\");\r\n            link.className = \"ms-core-suiteLink-a \" + (props.className || \"\");\r\n            link.href = props.href ? props.href : \"javascript:void()\";\r\n            link.id = props.id;\r\n            link.innerHTML = props.title;\r\n            link.onclick = props.onClick;\r\n            // Create the suite bar link\r\n            var sbLink = document.createElement(\"li\");\r\n            sbLink.className = \"ms-core-suiteLink\";\r\n            sbLink.appendChild(link);\r\n            // Append the item to the list\r\n            appendFl ? _elTopLinks.appendChild(sbLink) : _elTopLinks.insertBefore(sbLink, _elTopLinks.firstChild);\r\n        }\r\n        // Return the link\r\n        return link;\r\n    };\r\n    // Gets the top links element\r\n    var _elTopLinks = null;\r\n    var getTopLinks = function () {\r\n        // See if the bar exists\r\n        if (_elTopLinks == null) {\r\n            // Set the element\r\n            _elTopLinks = document.querySelector(\"#suiteLinksBox > ul\");\r\n        }\r\n        // Return the element\r\n        return _elTopLinks;\r\n    };\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // See if the top links exists\r\n        if (getTopLinks()) {\r\n            // Create the link\r\n            var el = create();\r\n            if (el) {\r\n                // Resolve the promise\r\n                resolve(el);\r\n            }\r\n        }\r\n        else if (window) {\r\n            // Wait for the window to be loaded\r\n            window.addEventListener(\"load\", function () {\r\n                // See if the top links exists\r\n                if (getTopLinks()) {\r\n                    // Create the link\r\n                    var el = create();\r\n                    if (el) {\r\n                        // Resolve the promise\r\n                        resolve(el);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sbLink.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfg.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfg.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SPConfig = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar __1 = __webpack_require__(/*! .. */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js\");\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/index.js\");\r\n__exportStar(__webpack_require__(/*! ./spCfgTypes */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfgTypes.js\"), exports);\r\n/**\r\n * SharePoint Configuration\r\n */\r\nexports.SPConfig = function (cfg, webUrl) {\r\n    // The selected configuration type to install\r\n    var _cfgType;\r\n    // The request digest\r\n    var _requestDigest = null;\r\n    // The target name to install/uninstall\r\n    var _targetName;\r\n    /**\r\n     * Methods\r\n     */\r\n    // Method to create the content types\r\n    var createContentTypes = function (contentTypes, cfgContentTypes, list) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure fields exist\r\n            if (cfgContentTypes == null || cfgContentTypes.length == 0) {\r\n                // Resolve the promise\r\n                resolve();\r\n                return;\r\n            }\r\n            // Method to get the parent content type\r\n            var getParentCT = function (ctName, url) {\r\n                // Return a promise\r\n                return new Promise(function (resolve, reject) {\r\n                    // Get the web containing the parent content type\r\n                    lib_1.Web(url, { disableCache: true })\r\n                        // Get the content types\r\n                        .ContentTypes()\r\n                        // Filter for the parent name\r\n                        .query({\r\n                        Filter: \"Name eq '\" + ctName + \"'\"\r\n                    })\r\n                        // Execute the request\r\n                        .execute(function (cts) {\r\n                        // See if the parent exists\r\n                        if (cts.results[0]) {\r\n                            // Resolve the promise\r\n                            resolve({ Id: cts.results[0].Id.StringValue, Url: url });\r\n                        }\r\n                        // Else, ensure this isn't the root web\r\n                        else if (url != lib_1.ContextInfo.siteServerRelativeUrl) {\r\n                            // Check the root web for the parent content type\r\n                            getParentCT(ctName, lib_1.ContextInfo.siteServerRelativeUrl).then(resolve, reject);\r\n                        }\r\n                        else {\r\n                            // Reject the promise\r\n                            reject();\r\n                        }\r\n                    }, reject);\r\n                });\r\n            };\r\n            // Parse the configuration\r\n            _1.Executor(cfgContentTypes, function (cfg) {\r\n                // Return a promise\r\n                return new Promise(function (resolve, reject) {\r\n                    // See if this content type already exists\r\n                    var ct = isInCollection(\"Name\", cfg.Name, contentTypes.results);\r\n                    if (ct) {\r\n                        // Log\r\n                        console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] The content type '\" + cfg.Name + \"' already exists.\");\r\n                        // Update the configuration\r\n                        cfg.ContentType = ct;\r\n                        // Resolve the promise and return\r\n                        resolve(cfg);\r\n                        return;\r\n                    }\r\n                    // Log\r\n                    console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] Creating the '\" + cfg.Name + \"' content type.\");\r\n                    // See if the parent name exists\r\n                    if (cfg.ParentName) {\r\n                        getParentCT(cfg.ParentName, cfg.ParentWebUrl || webUrl).then(\r\n                        // Success\r\n                        function (parentInfo) {\r\n                            // Add the content type\r\n                            _1.createContentType({\r\n                                Description: cfg.Description,\r\n                                Group: cfg.Group,\r\n                                Name: cfg.Name\r\n                            }, parentInfo, webUrl, list ? list.Title : null).then(\r\n                            // Success\r\n                            function (ct) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] The content type '\" + cfg.Name + \"' was created successfully.\");\r\n                                // Update the configuration\r\n                                cfg.ContentType = ct;\r\n                                // Trigger the event\r\n                                cfg.onCreated ? cfg.onCreated(ct, list) : null;\r\n                                // Resolve the promise\r\n                                resolve(cfg);\r\n                            }, \r\n                            // Error\r\n                            function (error) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] The content type '\" + cfg.Name + \"' failed to be created.\", error);\r\n                                // Reject the promise\r\n                                reject(error);\r\n                            });\r\n                        }, \r\n                        // Error\r\n                        function () {\r\n                            // Log\r\n                            console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] The parent content type '\" + cfg.ParentName + \"' was not found.\");\r\n                            // Reject the promise\r\n                            reject(ct.response);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // Create the content type\r\n                        contentTypes.add({\r\n                            Description: cfg.Description,\r\n                            Group: cfg.Group,\r\n                            Name: cfg.Name,\r\n                            Id: {\r\n                                __metadata: {\r\n                                    type: \"SP.ContentTypeId\"\r\n                                },\r\n                                StringValue: cfg.Id || \"0x0100\" + lib_1.ContextInfo.generateGUID().replace(/-/g, \"\")\r\n                            }\r\n                        }).execute(\r\n                        // Success\r\n                        function (ct) {\r\n                            // Log\r\n                            console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] The content type '\" + cfg.Name + \"' was created successfully.\");\r\n                            // Update the configuration\r\n                            cfg.ContentType = ct;\r\n                            // Trigger the event\r\n                            cfg.onCreated ? cfg.onCreated(ct, list) : null;\r\n                            // Resolve the promise\r\n                            resolve(cfg);\r\n                        }, \r\n                        // Error\r\n                        function (error) {\r\n                            // Log\r\n                            console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] The content type '\" + cfg.Name + \"' failed to be created.\");\r\n                            console.error(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] Error: \" + error.response);\r\n                            // Reject the promise\r\n                            reject(error.response);\r\n                        });\r\n                    }\r\n                });\r\n            }).then(function () {\r\n                // Parse the configuration\r\n                _1.Executor(cfgContentTypes, function (cfgContentType) {\r\n                    // Return a promise\r\n                    return new Promise(function (resolve, reject) {\r\n                        var cfgUpdate = {};\r\n                        var updateFl = false;\r\n                        // Ensure the content type exists\r\n                        if (cfgContentType.ContentType == null) {\r\n                            // Skip this content type\r\n                            resolve(null);\r\n                            return;\r\n                        }\r\n                        // Log\r\n                        console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type] Updating the field references for: \" + cfgContentType.Name);\r\n                        // Create the field refs\r\n                        _1.setContentTypeFields({\r\n                            fields: cfgContentType.FieldRefs,\r\n                            id: cfgContentType.ContentType.Id.StringValue,\r\n                            listName: list ? list.Title : null,\r\n                            webUrl: webUrl\r\n                        }).then(function () {\r\n                            /**\r\n                             * See if we need to update the properties\r\n                             */\r\n                            // Description\r\n                            if (cfgContentType.Description != null && cfgContentType.ContentType.Description != cfgContentType.Description) {\r\n                                // Update the configuration\r\n                                cfgUpdate.Description = cfgContentType.Description;\r\n                                // Set the flag\r\n                                updateFl = true;\r\n                            }\r\n                            // Group\r\n                            if (cfgContentType.Group != null && cfgContentType.ContentType.Group != cfgContentType.Group) {\r\n                                // Update the configuration\r\n                                cfgUpdate.Group = cfgContentType.Group;\r\n                                // Set the flag\r\n                                updateFl = true;\r\n                            }\r\n                            // JSLink\r\n                            if (cfgContentType.JSLink != null && cfgContentType.ContentType.JSLink != cfgContentType.JSLink) {\r\n                                // Update the configuration\r\n                                cfgUpdate.JSLink = cfgContentType.JSLink;\r\n                                // Set the flag\r\n                                updateFl = true;\r\n                            }\r\n                            // Name\r\n                            if (cfgContentType.Name != null && cfgContentType.ContentType.Name != cfgContentType.Name) {\r\n                                // Update the configuration\r\n                                cfgUpdate.Name = cfgContentType.Name;\r\n                                // Set the flag\r\n                                updateFl = true;\r\n                            }\r\n                            // See if an update is needed\r\n                            if (updateFl) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type][\" + cfgContentType.ContentType.Name + \"] Updating the content type.\");\r\n                                // Update the content type\r\n                                cfgContentType.ContentType.update(cfgUpdate).execute(function () {\r\n                                    // Log\r\n                                    console.log(\"[gd-sprest]\" + (list ? \"[\" + list.Title + \" List]\" : \"\") + \"[Content Type][\" + cfgContentType.ContentType.Name + \"] Update request completed.\");\r\n                                    // Trigger the event\r\n                                    cfgContentType.onUpdated ? cfgContentType.onUpdated(cfgContentType.ContentType) : null;\r\n                                    // Resolve this request\r\n                                    resolve(null);\r\n                                }, reject);\r\n                            }\r\n                            else {\r\n                                // Trigger the event\r\n                                cfgContentType.onUpdated ? cfgContentType.onUpdated(cfgContentType.ContentType) : null;\r\n                                // Resolve this request\r\n                                resolve(null);\r\n                            }\r\n                        }, reject);\r\n                    });\r\n                }).then(resolve);\r\n            }, reject);\r\n        });\r\n    };\r\n    // Method to create the fields`\r\n    var createFields = function (fields, cfgFields, list) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            var newFields = [];\r\n            // Ensure fields exist\r\n            if (cfgFields == null || cfgFields.length == 0) {\r\n                // Resolve the promise\r\n                resolve();\r\n                return;\r\n            }\r\n            // Parse the configuration\r\n            _1.Executor(cfgFields, function (cfg) {\r\n                return new Promise(function (resolve, reject) {\r\n                    // See if this field already exists\r\n                    var field = isInCollection(\"InternalName\", cfg.name, fields.results);\r\n                    if (field) {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Field] The field '\" + cfg.name + \"' already exists.\");\r\n                        // Trigger the event\r\n                        cfg.onUpdated ? cfg.onUpdated(field, list) : null;\r\n                        // Resolve the promise\r\n                        resolve(null);\r\n                    }\r\n                    else {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Field] Creating the '\" + cfg.name + \"' field.\");\r\n                        // See if this is an associated lookup field\r\n                        var cfgLookup = cfg;\r\n                        if (cfgLookup.type == _1.SPCfgFieldType.Lookup && cfgLookup.fieldRef) {\r\n                            // Get the field reference\r\n                            var fieldRef = isInCollection(\"InternalName\", cfgLookup.fieldRef, fields.results) ||\r\n                                isInCollection(\"InternalName\", cfgLookup.fieldRef, newFields);\r\n                            if (fieldRef) {\r\n                                // Update the value to be the guid\r\n                                cfgLookup.fieldRef = fieldRef.Id;\r\n                            }\r\n                        }\r\n                        // Compute the schema xml\r\n                        _1.FieldSchemaXML(cfg).then(function (response) {\r\n                            var schemas = typeof (response) === \"string\" ? [response] : response;\r\n                            // Parse the fields to add\r\n                            for (var i = 0; i < schemas.length; i++) {\r\n                                // Add the field\r\n                                fields.createFieldAsXml(schemas[i]).execute(function (field) {\r\n                                    // See if it was successful\r\n                                    if (field.InternalName) {\r\n                                        // Log\r\n                                        console.log(\"[gd-sprest][Field] The field '\" + field.InternalName + \"' was created successfully.\");\r\n                                        // Save a reference to the field\r\n                                        newFields.push(field);\r\n                                        // Trigger the event\r\n                                        cfg.onCreated ? cfg.onCreated(field, list) : null;\r\n                                        // Resolve the promise\r\n                                        resolve(null);\r\n                                    }\r\n                                    else {\r\n                                        // Log\r\n                                        console.log(\"[gd-sprest][Field] The field '\" + cfg.name + \"' failed to be created.\");\r\n                                        console.error(\"[gd-sprest][Field] Error: \" + field.response);\r\n                                        // Reject the promise\r\n                                        reject();\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }).then(resolve);\r\n        });\r\n    };\r\n    // Method to create the lists\r\n    var createLists = function (lists, cfgLists) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Execute code against each list configuration\r\n            _1.Executor(cfgLists, function (cfgList) {\r\n                // Return a promise\r\n                return new Promise(function (resolve) {\r\n                    // See if the target name exists and matches this list\r\n                    if (_cfgType && _targetName) {\r\n                        // Ensure it's for this list\r\n                        if (cfgList.ListInformation.Title.toLowerCase() != _targetName) {\r\n                            // Do nothing\r\n                            resolve(null);\r\n                            return;\r\n                        }\r\n                    }\r\n                    // See if this list already exists\r\n                    var list = isInCollection(\"Title\", cfgList.ListInformation.Title, lists.results);\r\n                    if (list) {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][List] The list '\" + cfgList.ListInformation.Title + \"' already exists.\");\r\n                        // Resolve the promise and do nothing\r\n                        resolve(null);\r\n                        return;\r\n                    }\r\n                    // Log\r\n                    console.log(\"[gd-sprest][List] Creating the '\" + cfgList.ListInformation.Title + \"' list.\");\r\n                    // Update the list name and remove spaces\r\n                    var listInfo = cfgList.ListInformation;\r\n                    var listName = listInfo.Title;\r\n                    listInfo.Title = listName.replace(/ /g, \"\");\r\n                    // Add the list\r\n                    lists.add(listInfo)\r\n                        // Execute the request\r\n                        .execute(function (list) {\r\n                        // Restore the list name in the configuration\r\n                        listInfo.Title = listName;\r\n                        // See if the request was successful\r\n                        if (list.Id) {\r\n                            // See if we need to update the list\r\n                            if (list.Title != listName) {\r\n                                // Update the list\r\n                                list.update({ Title: listName }).execute(function () {\r\n                                    // Log\r\n                                    console.log(\"[gd-sprest][List] The list '\" + list.Title + \"' was created successfully.\");\r\n                                    // Resolve the promise\r\n                                    resolve(null);\r\n                                });\r\n                            }\r\n                            else {\r\n                                // Log\r\n                                console.log(\"[gd-sprest][List] The list '\" + list.Title + \"' was created successfully.\");\r\n                                // Resolve the promise\r\n                                resolve(null);\r\n                            }\r\n                            // Trigger the event\r\n                            cfgList.onCreated ? cfgList.onCreated(list) : null;\r\n                        }\r\n                        else {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][List] The list '\" + listInfo.Title + \"' failed to be created.\");\r\n                            console.log(\"[gd-sprest][List] Error: '\" + list.response);\r\n                            // Resolve the promise\r\n                            resolve(null);\r\n                        }\r\n                    }, reject);\r\n                });\r\n            }).then(function () {\r\n                // Update the lists\r\n                updateLists(cfgLists).then(function () {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    // Method to create the user custom actions\r\n    var createUserCustomActions = function (customActions, cfgCustomActions) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the configuration type exists\r\n            if (_cfgType) {\r\n                // Ensure it's for this type\r\n                if (_cfgType != _1.SPCfgType.SiteUserCustomActions || _cfgType != _1.SPCfgType.WebUserCustomActions) {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                    return;\r\n                }\r\n            }\r\n            // Ensure the lists exist\r\n            if (cfgCustomActions == null || cfgCustomActions.length == 0) {\r\n                // Resolve the promise and return it\r\n                resolve();\r\n                return;\r\n            }\r\n            // Parse the configuration\r\n            _1.Executor(cfgCustomActions, function (cfg) {\r\n                // See if the target name exists\r\n                if (_cfgType && _targetName) {\r\n                    // Ensure it's for this custom action\r\n                    if (cfg.Name.toLowerCase() != _targetName ||\r\n                        cfg.Title.toLowerCase() != _targetName) {\r\n                        // Skip this custom action\r\n                        return;\r\n                    }\r\n                }\r\n                // See if this custom action already exists\r\n                if (isInCollection(\"Name\", cfg.Name, customActions.results)) {\r\n                    // Log\r\n                    console.log(\"[gd-sprest][Custom Action] The custom action '\" + cfg.Name + \"' already exists.\");\r\n                }\r\n                else {\r\n                    // See if rights exist\r\n                    if (cfg.Rights) {\r\n                        // Update the value\r\n                        cfg.Rights = updateBasePermissions(cfg.Rights);\r\n                    }\r\n                    // Add the custom action\r\n                    customActions.add(cfg).execute(function (ca) {\r\n                        // Ensure it exists\r\n                        if (ca.existsFl) {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][Custom Action] The custom action '\" + ca.Name + \"' was created successfully.\");\r\n                        }\r\n                        else {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][Custom Action] The custom action '\" + ca.Name + \"' failed to be created.\");\r\n                            console.log(\"[gd-sprest][Custom Action] Error: \" + ca.response);\r\n                        }\r\n                    }, reject, true);\r\n                }\r\n            }).then(resolve);\r\n        });\r\n    };\r\n    // Method to create the list views\r\n    var createViews = function (list, views, cfgViews) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure the list views exist\r\n            if (cfgViews == null || cfgViews.length == 0) {\r\n                // Resolve the promise and return it\r\n                resolve();\r\n                return;\r\n            }\r\n            // Parse the configuration\r\n            _1.Executor(cfgViews, function (cfg) {\r\n                // See if this view exists\r\n                var view = isInCollection(\"Title\", cfg.ViewName, views.results);\r\n                if (view) {\r\n                    // Log\r\n                    console.log(\"[gd-sprest][View] The view '\" + cfg.ViewName + \"' already exists.\");\r\n                }\r\n                else {\r\n                    // Add the view\r\n                    views.add({\r\n                        Title: cfg.ViewName,\r\n                        ViewQuery: cfg.ViewQuery\r\n                    }).execute(function (view) {\r\n                        // Ensure it exists\r\n                        if (view.existsFl) {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][View] The view '\" + cfg.ViewName + \"' was created successfully.\");\r\n                            // Trigger the event\r\n                            cfg.onCreated ? cfg.onCreated(view, list) : null;\r\n                        }\r\n                        else {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][View] The view '\" + cfg.ViewName + \"' failed to be created.\");\r\n                            console.log(\"[gd-sprest][View] Error: \" + view.response);\r\n                        }\r\n                    }, reject, true);\r\n                }\r\n            }).then(function () {\r\n                // Update the views\r\n                updateViews(list, views, cfgViews).then(function () {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    // Method to create the web parts\r\n    var createWebParts = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            var cfgWebParts = cfg.WebPartCfg;\r\n            // Ensure fields exist\r\n            if (cfgWebParts == null || cfgWebParts.length == 0) {\r\n                // Resolve the promise\r\n                resolve();\r\n                return;\r\n            }\r\n            // Log\r\n            console.log(\"[gd-sprest][WebPart] Creating the web parts.\");\r\n            // Get the web\r\n            lib_1.Web(webUrl, { disableCache: true, requestDigest: _requestDigest })\r\n                // Get the web part catalog\r\n                .getCatalog(__1.SPTypes.ListTemplateType.WebPartCatalog)\r\n                // Get the root folder\r\n                .RootFolder()\r\n                // Expand the files and items\r\n                .query({\r\n                Expand: [\"Files\"]\r\n            })\r\n                // Execute the request\r\n                .execute(function (folder) {\r\n                var ctr = 0;\r\n                var _loop_1 = function (i) {\r\n                    var cfgWebPart = cfgWebParts[i];\r\n                    // See if the target name exists\r\n                    if (_cfgType && _targetName) {\r\n                        // Ensure it's for this list\r\n                        if (cfgWebPart.FileName.toLowerCase() != _targetName) {\r\n                            return \"continue\";\r\n                        }\r\n                    }\r\n                    // The post execute method\r\n                    var postExecute = function () {\r\n                        // Increment the counter\r\n                        if (++ctr >= cfgWebParts.length) {\r\n                            // Resolve the promise\r\n                            resolve();\r\n                        }\r\n                    };\r\n                    // See if this webpart exists\r\n                    var file = isInCollection(\"Name\", cfgWebPart.FileName, folder.Files.results);\r\n                    if (file.Name) {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][WebPart] The webpart '\" + cfgWebPart.FileName + \"' already exists.\");\r\n                        // Trigger the event\r\n                        cfgWebPart.onUpdated ? cfgWebPart.onUpdated(file) : null;\r\n                        // Execute the post event\r\n                        postExecute();\r\n                    }\r\n                    else {\r\n                        // Trim the xml\r\n                        var xml = cfgWebPart.XML.trim();\r\n                        // Convert the string to an array buffer\r\n                        var buffer = new ArrayBuffer(xml.length * 2);\r\n                        var bufferView = new Uint16Array(buffer);\r\n                        for (var j = 0; j < xml.length; j++) {\r\n                            bufferView[j] = xml.charCodeAt(j);\r\n                        }\r\n                        // Create the webpart, but execute the requests one at a time\r\n                        folder.Files.add(cfgWebPart.FileName, true, buffer).execute(\r\n                        // Success\r\n                        function (file) {\r\n                            // See if group exists\r\n                            if (cfgWebPart.Group) {\r\n                                // Set the target to the root web\r\n                                lib_1.Web(lib_1.ContextInfo.siteServerRelativeUrl, { disableCache: true })\r\n                                    // Get the web part catalog\r\n                                    .getCatalog(__1.SPTypes.ListTemplateType.WebPartCatalog)\r\n                                    // Get the Items\r\n                                    .Items()\r\n                                    // Query for this webpart\r\n                                    .query({\r\n                                    Filter: \"FileLeafRef eq '\" + cfgWebPart.FileName + \"'\"\r\n                                })\r\n                                    // Execute the request\r\n                                    .execute(function (items) {\r\n                                    // Update the item\r\n                                    items.results[0].update({\r\n                                        Group: cfgWebPart.Group\r\n                                    }).execute(postExecute);\r\n                                });\r\n                            }\r\n                            // Log\r\n                            console.log(\"[gd-sprest][WebPart] The '\" + file.Name + \"' webpart file was uploaded successfully.\");\r\n                            // Trigger the event\r\n                            cfgWebPart.onCreated ? cfgWebPart.onCreated(file) : null;\r\n                        }, \r\n                        // Error\r\n                        function () {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][WebPart] The '\" + file.Name + \"' webpart file upload failed.\");\r\n                            // Skip this webpart\r\n                            resolve();\r\n                        });\r\n                    }\r\n                };\r\n                // Parse the configuration\r\n                for (var i = 0; i < cfgWebParts.length; i++) {\r\n                    _loop_1(i);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    // Method to see if an object exists in a collection\r\n    var isInCollection = function (key, value, collection) {\r\n        var valueLower = value.toLowerCase();\r\n        // Parse the collection\r\n        for (var i = 0; i < collection.length; i++) {\r\n            var keyValue = collection[i][key];\r\n            keyValue = keyValue ? keyValue.toLowerCase() : \"\";\r\n            // See if the item exists\r\n            if (valueLower == keyValue) {\r\n                // Return true\r\n                return collection[i];\r\n            }\r\n        }\r\n        // Not in the collection\r\n        return false;\r\n    };\r\n    // Method to remove the content type\r\n    var removeContentTypes = function (contentTypes, cfgContentTypes) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure the content types exist\r\n            if (cfgContentTypes == null || cfgContentTypes.length == 0) {\r\n                // Resolve the promise and return it\r\n                resolve();\r\n                return;\r\n            }\r\n            // Parse the configuration\r\n            _1.Executor(cfgContentTypes, function (cfg) {\r\n                // Get the field\r\n                var ct = isInCollection(\"Name\", cfg.Name, contentTypes.results);\r\n                if (ct) {\r\n                    // Remove the field\r\n                    ct.delete().execute(function () {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Content Type] The content type '\" + ct.Name + \"' was removed.\");\r\n                    }, reject, true);\r\n                }\r\n            }).then(resolve);\r\n        });\r\n    };\r\n    // Method to remove the fields\r\n    var removeFields = function (fields, cfgFields) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure the fields exist\r\n            if (cfgFields == null || cfgFields.length == 0) {\r\n                // Resolve the promise and return it\r\n                resolve();\r\n                return;\r\n            }\r\n            // Parse the configuration\r\n            _1.Executor(cfgFields, function (cfg) {\r\n                // Get the field\r\n                var field = isInCollection(\"InternalName\", cfg.name, fields.results);\r\n                if (field) {\r\n                    // Remove the field\r\n                    field.delete().execute(function () {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Field] The field '\" + field.InternalName + \"' was removed.\");\r\n                    }, reject, true);\r\n                }\r\n            }).then(resolve);\r\n        });\r\n    };\r\n    // Method to remove the lists\r\n    var removeLists = function (lists, cfgLists) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the configuration type exists\r\n            if (_cfgType) {\r\n                // Ensure it's for this type\r\n                if (_cfgType != _1.SPCfgType.Lists) {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                    return;\r\n                }\r\n            }\r\n            // Ensure the lists exist\r\n            if (cfgLists == null || cfgLists.length == 0) {\r\n                // Resolve the promise and return it\r\n                resolve();\r\n                return;\r\n            }\r\n            // Parse the configuration\r\n            _1.Executor(cfgLists, function (cfg) {\r\n                // See if the target name exists\r\n                if (_cfgType && _targetName) {\r\n                    // Ensure it's for this list\r\n                    if (cfg.ListInformation.Title.toLowerCase() != _targetName) {\r\n                        // Skip this list\r\n                        return;\r\n                    }\r\n                }\r\n                // Get the list\r\n                var list = isInCollection(\"Title\", cfg.ListInformation.Title, lists.results);\r\n                if (list) {\r\n                    // Remove the list\r\n                    list.delete().execute(function () {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][List] The list '\" + list.Title + \"' was removed.\");\r\n                    }, reject, true);\r\n                }\r\n            }).then(resolve);\r\n        });\r\n    };\r\n    // Method to remove the user custom actions\r\n    var removeUserCustomActions = function (customActions, cfgCustomActions) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the configuration type exists\r\n            if (_cfgType) {\r\n                // Ensure it's for this type\r\n                if (_cfgType != _1.SPCfgType.SiteUserCustomActions || _cfgType != _1.SPCfgType.WebUserCustomActions) {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                    return;\r\n                }\r\n            }\r\n            // Ensure the custom actions exist\r\n            if (cfgCustomActions == null || cfgCustomActions.length == 0) {\r\n                // Resolve the promise and return it\r\n                resolve();\r\n                return;\r\n            }\r\n            // Parse the configuration\r\n            _1.Executor(cfgCustomActions, function (cfg) {\r\n                // See if the target name exists\r\n                if (_cfgType && _targetName) {\r\n                    // Ensure it's for this custom action\r\n                    if (cfg.Name.toLowerCase() != _targetName ||\r\n                        cfg.Title.toLowerCase() != _targetName) {\r\n                        // Skip this custom action\r\n                        return;\r\n                    }\r\n                }\r\n                // Get the custom action\r\n                var ca = isInCollection(\"Name\", cfg.Name, customActions.results);\r\n                if (ca) {\r\n                    // Remove the custom action\r\n                    ca.delete().execute(function () {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][Custom Action] The custom action '\" + ca.Name + \"' was removed.\");\r\n                    }, reject, true);\r\n                }\r\n            }).then(resolve);\r\n        });\r\n    };\r\n    // Method to remove the web parts\r\n    var removeWebParts = function (site) {\r\n        var cfgWebParts = cfg.WebPartCfg;\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the configuration type exists\r\n            if (_cfgType) {\r\n                // Ensure it's for this type\r\n                if (_cfgType != _1.SPCfgType.WebParts) {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                    return;\r\n                }\r\n            }\r\n            // Ensure the configuration exists\r\n            if (cfgWebParts == null || cfgWebParts.length == 0) {\r\n                // Resolve the promise and return it\r\n                resolve();\r\n                return;\r\n            }\r\n            // Log\r\n            console.log(\"[gd-sprest][WebPart] Removing the web parts.\");\r\n            // Get the webpart gallery from the root web\r\n            site.RootWeb().getCatalog(__1.SPTypes.ListTemplateType.WebPartCatalog)\r\n                // Get the root folder\r\n                .RootFolder()\r\n                // Expand the files\r\n                .Files()\r\n                // Execute the request\r\n                .execute(function (files) {\r\n                var _loop_2 = function (i) {\r\n                    var cfgWebPart = cfgWebParts[i];\r\n                    // See if the target name exists\r\n                    if (_cfgType && _targetName) {\r\n                        // Ensure it's for this webpart\r\n                        if (cfgWebPart.FileName.toLowerCase() != _targetName) {\r\n                            return \"continue\";\r\n                        }\r\n                    }\r\n                    // Get the file\r\n                    var file = isInCollection(\"Name\", cfgWebPart.FileName, files.results);\r\n                    if (file) {\r\n                        // Remove the file\r\n                        file.delete().execute(function () {\r\n                            // Log\r\n                            console.log(\"[gd-sprest][WebPart] The webpart '\" + file.Name + \"' file was removed.\");\r\n                        }, true);\r\n                    }\r\n                };\r\n                // Parse the configuration\r\n                for (var i = 0; i < cfgWebParts.length; i++) {\r\n                    _loop_2(i);\r\n                }\r\n                // Resolve the promise\r\n                resolve();\r\n            }, reject);\r\n        });\r\n    };\r\n    // Method to get the web information\r\n    var setRequestDigest = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            if (webUrl) {\r\n                // Get the web context information\r\n                lib_1.ContextInfo.getWeb(webUrl).execute(function (webInfo) {\r\n                    _requestDigest = webInfo.GetContextWebInformation.FormDigestValue;\r\n                    // Resolve the promise\r\n                    resolve();\r\n                }, reject);\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n    // Method to update the base permissions\r\n    var updateBasePermissions = function (values) {\r\n        var high = values.High;\r\n        var low = values.Low;\r\n        // See if this is an array\r\n        for (var i = 0; i < values[\"length\"]; i++) {\r\n            var value = values[i];\r\n            // See if this is the full mask\r\n            if (value == 65) {\r\n                // Set the values\r\n                low = 65535;\r\n                high = 32767;\r\n                // Break from the loop\r\n                break;\r\n            }\r\n            // Else, see if it's empty\r\n            else if (value == 0) {\r\n                // Clear the values\r\n                low = 0;\r\n                high = 0;\r\n            }\r\n            // Else, update the base permission\r\n            else {\r\n                var bit = value - 1;\r\n                var bitValue = 1;\r\n                // Validate the bit\r\n                if (bit < 0) {\r\n                    continue;\r\n                }\r\n                // See if it's a low permission\r\n                if (bit < 32) {\r\n                    // Compute the value\r\n                    bitValue = bitValue << bit;\r\n                    // Set the low value\r\n                    low |= bitValue;\r\n                }\r\n                // Else, it's a high permission\r\n                else {\r\n                    // Compute the value\r\n                    bitValue = bitValue << (bit - 32);\r\n                    // Set the high value\r\n                    high |= bitValue;\r\n                }\r\n            }\r\n        }\r\n        // Return the base permission\r\n        return {\r\n            Low: low.toString(),\r\n            High: high.toString()\r\n        };\r\n    };\r\n    // Method to update the lists\r\n    var updateLists = function (cfgLists) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            var request = function (idx, resolve) {\r\n                // Get the list configuration\r\n                var cfgList = cfgLists[idx];\r\n                // See if the target name exists\r\n                if (_targetName) {\r\n                    // Ensure it's for this list\r\n                    if (cfgList.ListInformation.Title.toLowerCase() != _targetName) {\r\n                        // Update the next list\r\n                        request(idx + 1, resolve);\r\n                        return;\r\n                    }\r\n                }\r\n                // Ensure the configuration exists\r\n                if (cfgList) {\r\n                    // Get the web\r\n                    lib_1.Web(webUrl, { disableCache: true, requestDigest: _requestDigest })\r\n                        // Get the list\r\n                        .Lists(cfgList.ListInformation.Title)\r\n                        // Expand the content types, fields and views\r\n                        .query({\r\n                        Expand: [\"ContentTypes\", \"Fields\", \"UserCustomActions\", \"Views\"]\r\n                    })\r\n                        // Execute the request\r\n                        .execute(function (list) {\r\n                        // Update the title field\r\n                        updateListTitleField(list, cfgList).then(function () {\r\n                            // Create the fields\r\n                            createFields(list.Fields, cfgList.CustomFields, list).then(function () {\r\n                                // Create the content types\r\n                                createContentTypes(list.ContentTypes, cfgList.ContentTypes, list).then(function () {\r\n                                    // Update the views\r\n                                    createViews(list, list.Views, cfgList.ViewInformation).then(function () {\r\n                                        // Update the views\r\n                                        createUserCustomActions(list.UserCustomActions, cfgList.UserCustomActions).then(function () {\r\n                                            // Trigger the event\r\n                                            cfgList.onUpdated ? cfgList.onUpdated(list) : null;\r\n                                            // Update the next list\r\n                                            request(idx + 1, resolve);\r\n                                        }, reject);\r\n                                    }, reject);\r\n                                }, reject);\r\n                            }, reject);\r\n                        }, reject);\r\n                    }, reject);\r\n                }\r\n                else {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                }\r\n            };\r\n            // Execute the request\r\n            request(0, resolve);\r\n        });\r\n    };\r\n    // Method to update the list title field\r\n    var updateListTitleField = function (list, cfgList) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the title field is being updated\r\n            if (cfgList.TitleFieldDisplayName) {\r\n                // Update the field name\r\n                list.Fields.getByInternalNameOrTitle(\"Title\").update({ Title: cfgList.TitleFieldDisplayName }).execute(function () {\r\n                    // Log\r\n                    console.log(\"[gd-sprest][List] The 'Title' field's display name was updated to '\" + cfgList.TitleFieldDisplayName + \"'.\");\r\n                    // Resolve the promise\r\n                    resolve();\r\n                }, reject);\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n    // Method to update the views\r\n    var updateViews = function (list, views, cfgViews) {\r\n        // Return a promise\r\n        return new Promise(function (resolve) {\r\n            // Parse the configuration\r\n            _1.Executor(cfgViews, function (cfg) {\r\n                // Return a promise\r\n                return new Promise(function (resolve) {\r\n                    // Get the view\r\n                    var view = views.getByTitle(cfg.ViewName);\r\n                    // See if the view fields are defined\r\n                    if (cfg.ViewFields && cfg.ViewFields.length > 0) {\r\n                        // Log\r\n                        console.log(\"[gd-sprest][View] Updating the view fields for the '\" + cfg.ViewName + \"' view.\");\r\n                        // Clear the view fields\r\n                        view.ViewFields().removeAllViewFields().execute(true);\r\n                        // Parse the view fields\r\n                        for (var i = 0; i < cfg.ViewFields.length; i++) {\r\n                            // Add the view field\r\n                            view.ViewFields().addViewField(cfg.ViewFields[i]).execute(true);\r\n                        }\r\n                    }\r\n                    // See if we are updating the view properties\r\n                    if (cfg.JSLink || cfg.ViewQuery) {\r\n                        var props = {};\r\n                        // Log\r\n                        console.log(\"[gd-sprest][View] Updating the view properties for the '\" + cfg.ViewName + \"' view.\");\r\n                        // Set the properties\r\n                        cfg.JSLink ? props[\"JSLink\"] = cfg.JSLink : null;\r\n                        cfg.ViewQuery ? props[\"ViewQuery\"] = cfg.ViewQuery : null;\r\n                        // Update the view\r\n                        view.update(props).execute(true);\r\n                    }\r\n                    // Wait for the requests to complete\r\n                    view.done(function () {\r\n                        var args = [];\r\n                        for (var _i = 0; _i < arguments.length; _i++) {\r\n                            args[_i] = arguments[_i];\r\n                        }\r\n                        // Log\r\n                        console.log(\"[gd-sprest][View] The updates for the '\" + cfg.ViewName + \"' view has completed.\");\r\n                        // Trigger the event\r\n                        cfg.onUpdated ? cfg.onUpdated(view, list) : null;\r\n                        // Resolve the promise\r\n                        resolve(null);\r\n                    });\r\n                });\r\n            }).then(resolve);\r\n        });\r\n    };\r\n    // Method to uninstall the site components\r\n    var uninstallSite = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure we need to complete this request\r\n            if ((cfg.CustomActionCfg != null && cfg.CustomActionCfg.Site != null) || cfg.WebPartCfg != null) {\r\n                // Log\r\n                console.log(\"[gd-sprest][uninstall] Loading the site information...\");\r\n                // Get the site\r\n                lib_1.Site(webUrl, { disableCache: true, requestDigest: _requestDigest })\r\n                    // Expand the user custom actions\r\n                    .query({\r\n                    Expand: [\"UserCustomActions\"]\r\n                })\r\n                    // Execute the request\r\n                    .execute(function (site) {\r\n                    // Remove the user custom actions\r\n                    removeUserCustomActions(site.UserCustomActions, cfg.CustomActionCfg ? cfg.CustomActionCfg.Site : []).then(function () {\r\n                        // Remove the webpart\r\n                        removeWebParts(site).then(function () {\r\n                            // Resolve the promise\r\n                            resolve(site);\r\n                        }, reject);\r\n                    });\r\n                }, reject);\r\n            }\r\n            else {\r\n                // Resolve the promise\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n    // Method to uninstall the web components\r\n    var uninstallWeb = function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            var Expand = [];\r\n            // Log\r\n            console.log(\"[gd-sprest][uninstall] Loading the web information...\");\r\n            // Set the query\r\n            if (cfg.ContentTypes) {\r\n                Expand.push(\"ContentTypes\");\r\n            }\r\n            if (cfg.CustomActionCfg) {\r\n                Expand.push(\"UserCustomActions\");\r\n            }\r\n            if (cfg.Fields) {\r\n                Expand.push(\"Fields\");\r\n            }\r\n            if (cfg.ListCfg) {\r\n                Expand.push(\"Lists\");\r\n            }\r\n            // Query the web\r\n            lib_1.Web(webUrl, { disableCache: true, requestDigest: _requestDigest }).query({ Expand: Expand })\r\n                // Execute the request\r\n                .execute(function (web) {\r\n                // Remove the web custom actions\r\n                removeUserCustomActions(web.UserCustomActions, cfg.CustomActionCfg ? cfg.CustomActionCfg.Web : null).then(function () {\r\n                    // Remove the lists\r\n                    removeLists(web.Lists, cfg.ListCfg).then(function () {\r\n                        // Remove the content types\r\n                        removeContentTypes(web.ContentTypes, cfg.ContentTypes).then(function () {\r\n                            // Remove the fields\r\n                            removeFields(web.Fields, cfg.Fields).then(function () {\r\n                                // Resolve the promise\r\n                                resolve();\r\n                            }, reject);\r\n                        }, reject);\r\n                    }, reject);\r\n                }, reject);\r\n            }, reject);\r\n        });\r\n    };\r\n    /**\r\n     * Public Interface\r\n     */\r\n    return {\r\n        // The configuration\r\n        _configuration: cfg,\r\n        // Method to install the configuration\r\n        install: function () {\r\n            // Return a promise\r\n            return new Promise(function (resolve, reject) {\r\n                // Set the request digest\r\n                setRequestDigest().then(function () {\r\n                    // Log\r\n                    console.log(\"[gd-sprest] Installing the web assets...\");\r\n                    // Get the web\r\n                    var web = lib_1.Web(webUrl, { disableCache: true, requestDigest: _requestDigest });\r\n                    // Create the site fields\r\n                    var createSiteFields = function () {\r\n                        // Return a promise\r\n                        return new Promise(function (resolve, reject) {\r\n                            // See if we are creating fields\r\n                            if (cfg.Fields && cfg.Fields.length > 0) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest][Fields] Starting the requests.\");\r\n                                // Get the fields\r\n                                web.Fields().execute(function (fields) {\r\n                                    // Create the fields\r\n                                    createFields(fields, cfg.Fields).then(function () {\r\n                                        // Log\r\n                                        console.log(\"[gd-sprest][Fields] Completed the requests.\");\r\n                                        // Resolve the promise\r\n                                        resolve(null);\r\n                                    }, reject);\r\n                                }, reject);\r\n                            }\r\n                            else {\r\n                                // Resolve the promise\r\n                                resolve(null);\r\n                            }\r\n                        });\r\n                    };\r\n                    // Create the site content types\r\n                    var createSiteContentTypes = function () {\r\n                        // Return a promise\r\n                        return new Promise(function (resolve, reject) {\r\n                            // See if we are creating the content types\r\n                            if (cfg.ContentTypes && cfg.ContentTypes.length > 0) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest][Content Types] Starting the requests.\");\r\n                                // Get the content types\r\n                                web.ContentTypes().execute(function (contentTypes) {\r\n                                    // Create the content types\r\n                                    createContentTypes(contentTypes, cfg.ContentTypes).then(function () {\r\n                                        // Log\r\n                                        console.log(\"[gd-sprest][Content Types] Completed the requests.\");\r\n                                        // Resolve the promise\r\n                                        resolve();\r\n                                    }, reject);\r\n                                }, reject);\r\n                            }\r\n                            else {\r\n                                // Resolve the promise\r\n                                resolve();\r\n                            }\r\n                        });\r\n                    };\r\n                    // Create the site lists\r\n                    var createSiteLists = function () {\r\n                        // Return a promise\r\n                        return new Promise(function (resolve, reject) {\r\n                            // See if we are creating the lists\r\n                            if (cfg.ListCfg && cfg.ListCfg.length) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest][Lists] Starting the requests.\");\r\n                                // Get the lists\r\n                                web.Lists().execute(function (lists) {\r\n                                    // Create the lists\r\n                                    createLists(lists, cfg.ListCfg).then(function () {\r\n                                        // Log\r\n                                        console.log(\"[gd-sprest][Lists] Completed the requests.\");\r\n                                        // Resolve the promise\r\n                                        resolve();\r\n                                    }, reject);\r\n                                }, reject);\r\n                            }\r\n                            else {\r\n                                // Resolve the promise\r\n                                resolve();\r\n                            }\r\n                        });\r\n                    };\r\n                    // Create the site webparts\r\n                    var createSiteWebParts = function () {\r\n                        // Return a promise\r\n                        return new Promise(function (resolve, reject) {\r\n                            // See if we are creating the webparts\r\n                            if (cfg.WebPartCfg && cfg.WebPartCfg.length > 0) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest][WebParts] Starting the requests.\");\r\n                                // Create the webparts\r\n                                createWebParts().then(function () {\r\n                                    // Log\r\n                                    console.log(\"[gd-sprest][WebParts] Completed the requests.\");\r\n                                    // Resolve the promise\r\n                                    resolve();\r\n                                }, reject);\r\n                            }\r\n                            else {\r\n                                // Resolve the promise\r\n                                resolve();\r\n                            }\r\n                        });\r\n                    };\r\n                    // Create the custom actions\r\n                    var createSiteCollectionCustomActions = function () {\r\n                        // Return a promise\r\n                        return new Promise(function (resolve, reject) {\r\n                            // See if we are targeting the site collection\r\n                            if (cfg.CustomActionCfg && cfg.CustomActionCfg.Site) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest][Site Custom Actions] Starting the requests.\");\r\n                                // Get the site\r\n                                lib_1.Site(webUrl, { disableCache: true, requestDigest: _requestDigest })\r\n                                    // Get the user custom actions\r\n                                    .UserCustomActions().execute(function (customActions) {\r\n                                    // Create the user custom actions\r\n                                    createUserCustomActions(customActions, cfg.CustomActionCfg.Site).then(function () {\r\n                                        // Log\r\n                                        console.log(\"[gd-sprest][Site Custom Actions] Completed the requests.\");\r\n                                        // Resolve the promise\r\n                                        resolve();\r\n                                    }, reject);\r\n                                }, reject);\r\n                            }\r\n                            else {\r\n                                // Resolve the promise\r\n                                resolve();\r\n                            }\r\n                        });\r\n                    };\r\n                    // Create the custom actions\r\n                    var createSiteCustomActions = function () {\r\n                        // Return a promise\r\n                        return new Promise(function (resolve, reject) {\r\n                            // See if we are targeting the web\r\n                            if (cfg.CustomActionCfg && cfg.CustomActionCfg.Web) {\r\n                                // Log\r\n                                console.log(\"[gd-sprest][Web Custom Actions] Starting the requests.\");\r\n                                // Get the user custom actions\r\n                                web.UserCustomActions().execute(function (customActions) {\r\n                                    // Create the user custom actions\r\n                                    createUserCustomActions(customActions, cfg.CustomActionCfg.Web).then(function () {\r\n                                        // Log\r\n                                        console.log(\"[gd-sprest][Web Custom Actions] Completed the requests.\");\r\n                                        // Resolve the promise\r\n                                        resolve();\r\n                                    });\r\n                                }, reject);\r\n                            }\r\n                            else {\r\n                                // Resolve the promise\r\n                                resolve();\r\n                            }\r\n                        });\r\n                    };\r\n                    // Create the site fields\r\n                    createSiteFields().then(function () {\r\n                        // Create the site content types\r\n                        createSiteContentTypes().then(function () {\r\n                            // Create the site lists\r\n                            createSiteLists().then(function () {\r\n                                // Create the webparts\r\n                                createSiteWebParts().then(function () {\r\n                                    // Create the site collection custom actions\r\n                                    createSiteCollectionCustomActions().then(function () {\r\n                                        // Create the site custom actions\r\n                                        createSiteCustomActions().then(function () {\r\n                                            // Log\r\n                                            console.log(\"[gd-sprest] The configuration script completed, but some requests may still be running.\");\r\n                                            // Resolve the request\r\n                                            resolve();\r\n                                        }, reject);\r\n                                    }, reject);\r\n                                }, reject);\r\n                            }, reject);\r\n                        }, reject);\r\n                    }, reject);\r\n                }, reject);\r\n            });\r\n        },\r\n        // Method to uninstall the configuration\r\n        uninstall: function () {\r\n            // Return a promise\r\n            return new Promise(function (resolve, reject) {\r\n                // Set the request digest\r\n                setRequestDigest().then(function () {\r\n                    // Uninstall the web components\r\n                    uninstallWeb().then(function () {\r\n                        // Uninstall the site components\r\n                        uninstallSite().then(function () {\r\n                            // Log\r\n                            console.log(\"[gd-sprest] The configuration script completed, but some requests may still be running.\");\r\n                            // Resolve the promise\r\n                            resolve();\r\n                        }, reject);\r\n                    }, reject);\r\n                });\r\n            });\r\n        }\r\n    };\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfg.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfgTypes.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfgTypes.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SPCfgType = exports.SPCfgFieldType = void 0;\r\n/**\r\n * SharePoint Configuration Field Types\r\n */\r\nexports.SPCfgFieldType = {\r\n    Boolean: 0,\r\n    Calculated: 1,\r\n    Choice: 2,\r\n    Currency: 3,\r\n    Date: 4,\r\n    Geolocation: 5,\r\n    Lookup: 6,\r\n    MMS: 7,\r\n    Note: 8,\r\n    Number: 9,\r\n    Text: 10,\r\n    Url: 11,\r\n    User: 12\r\n};\r\n/**\r\n * SharePoint Configuration Types\r\n * The value determines the order to install the object type.\r\n */\r\nexports.SPCfgType = {\r\n    Fields: 0,\r\n    ContentTypes: 1,\r\n    Lists: 2,\r\n    SiteUserCustomActions: 3,\r\n    WebParts: 5,\r\n    WebUserCustomActions: 4\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/spCfgTypes.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/calloutManager.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/calloutManager.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CalloutManager = void 0;\r\n/**\r\n * Callout Manager\r\n */\r\nexports.CalloutManager = (function () {\r\n    // Return the callout manager\r\n    return {\r\n        /** Closes all callouts on the page. */\r\n        closeAll: function () {\r\n            // Load the library and call the method\r\n            return window[\"CalloutManager\"].closeAll();\r\n        },\r\n        /** Returns true if the associated callout is open. */\r\n        containsOneCalloutOpen: function (el) {\r\n            // Load the library and call the method\r\n            return window[\"CalloutManager\"].containsOneCalloutOpen(el);\r\n        },\r\n        /** Returns an callout action entry. */\r\n        createAction: function (options) {\r\n            // Create the callout action options entry\r\n            var caOptions = new window[\"CalloutActionOptions\"]();\r\n            // Update the options\r\n            for (var key in options) {\r\n                // Set the option\r\n                caOptions[key] = options[key];\r\n            }\r\n            // Create the action\r\n            return new window[\"CalloutAction\"](caOptions);\r\n        },\r\n        /** Returns an callout action menu entries. */\r\n        createMenuEntries: function (entries) {\r\n            var menuEntries = [];\r\n            // Parse the action options\r\n            for (var i = 0; i < entries.length; i++) {\r\n                var entry = entries[i];\r\n                // Add the action\r\n                menuEntries.push(new window[\"CalloutActionMenuEntry\"](entry.text, entry.onClickCallback, entry.iconUrl));\r\n            }\r\n            // Return the action menu entries\r\n            return menuEntries;\r\n        },\r\n        /** Creates a new callout. */\r\n        createNew: function (options) {\r\n            // Load the library and call the method\r\n            return window[\"CalloutManager\"].createNew(options);\r\n        },\r\n        /** Checks if the callout id exists, before creating it. */\r\n        createNewIfNecessary: function (options) {\r\n            // Load the library and call the method\r\n            return window[\"CalloutManager\"].createNewIfNecessary(options);\r\n        },\r\n        /** Performs an action on each callout on the page. */\r\n        forEach: function (callback) {\r\n            // Load the library and call the method\r\n            return window[\"CalloutManager\"].forEach(callback);\r\n        },\r\n        /** Finds the closest launch point and returns the callout associated with it. */\r\n        getFromCalloutDescendant: function (descendant) {\r\n            return window[\"CalloutManager\"].getFromCalloutDescendant(descendant);\r\n        },\r\n        /** Returns the callout from the specified launch point. */\r\n        getFromLaunchPoint: function (launchPoint) {\r\n            return window[\"CalloutManager\"].getFromLaunchPoint(launchPoint);\r\n        },\r\n        /** Returns the callout for the specified launch point, null if it doesn't exist. */\r\n        getFromLaunchPointIfExists: function (launchPoint) {\r\n            return window[\"CalloutManager\"].getFromLaunchPointIfExists(launchPoint);\r\n        },\r\n        /** Returns true if at least one callout is defined on the page is opened or opening. */\r\n        isAtLeastOneCalloutOn: function () {\r\n            return window[\"CalloutManager\"].isAtLeastOneCalloutOn();\r\n        },\r\n        /** Returns true if at least one callout is opened on the page. */\r\n        isAtLeastOneCalloutOpen: function () {\r\n            return window[\"CalloutManager\"].isAtLeastOneCalloutOpen();\r\n        },\r\n        // Ensures the core library is loaded\r\n        init: function () {\r\n            // Return a promise\r\n            return new Promise(function (resolve, reject) {\r\n                // See if the class exists\r\n                if (window[\"CalloutManager\"]) {\r\n                    resolve();\r\n                }\r\n                else {\r\n                    // Wait for the core script to be loaded\r\n                    window[\"SP\"].SOD.executeFunc(\"callout.js\", \"Callout\", function () {\r\n                        // Resolve the promise\r\n                        resolve();\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        /** Removes the callout and destroys it. */\r\n        remove: function (callout) {\r\n            // Load the library and call the method\r\n            return window[\"CalloutManager\"].remove(callout);\r\n        }\r\n    };\r\n})();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/calloutManager.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/index.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SP = void 0;\r\nvar calloutManager_1 = __webpack_require__(/*! ./calloutManager */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/calloutManager.js\");\r\nvar modalDialog_1 = __webpack_require__(/*! ./modalDialog */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/modalDialog.js\");\r\nvar notify_1 = __webpack_require__(/*! ./notify */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/notify.js\");\r\nvar sod_1 = __webpack_require__(/*! ./sod */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/sod.js\");\r\nvar status_1 = __webpack_require__(/*! ./status */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/status.js\");\r\nexports.SP = {\r\n    CalloutManager: calloutManager_1.CalloutManager,\r\n    ModalDialog: modalDialog_1.ModalDialog,\r\n    Notify: notify_1.Notify,\r\n    SOD: sod_1.SOD,\r\n    Status: status_1.Status\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/modalDialog.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/modalDialog.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModalDialog = void 0;\r\n/**\r\n * Modal Dialog\r\n */\r\nexports.ModalDialog = (function () {\r\n    // Adds the custom methods to the dialog\r\n    var getDialog = function (dialog) {\r\n        // Shows the dialog\r\n        dialog.show = function () {\r\n            // Get the modal dialog element\r\n            var el = dialog.get_dialogElement();\r\n            if (el) {\r\n                // Show the dialog\r\n                el.style.display = \"\";\r\n            }\r\n            // Get the iframe element\r\n            el = dialog.get_frameElement();\r\n            if (el) {\r\n                // Show the dialog\r\n                el.style.display = \"\";\r\n            }\r\n        };\r\n        // Updates the title\r\n        dialog.setTitle = function (value) {\r\n            // Get the title element\r\n            var elDlg = dialog.get_dialogElement();\r\n            var elTitle = elDlg ? elDlg.querySelector(\".ms-dlgLoadingTextDiv .ms-core-pageTitle\") : null;\r\n            elTitle = elTitle || elDlg.querySelector(\".ms-dlgTitle .ms-dlgTitleText\");\r\n            if (elTitle) {\r\n                // Update the title\r\n                elTitle.innerHTML = value;\r\n            }\r\n        };\r\n        // Updates the sub-title\r\n        dialog.setSubTitle = function (value) {\r\n            // Get the sub-title element\r\n            var elDlg = dialog.get_dialogElement();\r\n            var elSubTitle = elDlg ? elDlg.querySelector(\".ms-dlgLoadingTextDiv ~ div\") : null;\r\n            if (elSubTitle) {\r\n                // Update the sub-title\r\n                elSubTitle.innerHTML = value;\r\n            }\r\n        };\r\n        // Return the dialog\r\n        return dialog;\r\n    };\r\n    // Return the modal dialog\r\n    return {\r\n        // Close the dialog\r\n        commonModalDialogClose: function (dialogResult, returnVal) {\r\n            // Load the library and call the method\r\n            exports.ModalDialog.load().then(function () { window[\"SP\"].UI.ModalDialog.commonModalDialogClose(dialogResult, returnVal); });\r\n        },\r\n        // Open a dialog\r\n        commonModalDialogOpen: function (url, options, callback, args) {\r\n            // Load the library and call the method\r\n            exports.ModalDialog.load().then(function () { window[\"SP\"].UI.ModalDialog.commonModalDialogOpen(url, options, callback, args); });\r\n        },\r\n        // Method to ensure the core library is loaded\r\n        load: function () {\r\n            // Return a promise\r\n            return new Promise(function (resolve, reject) {\r\n                // See if the class exists\r\n                if (window[\"SP\"] && window[\"SP\"].UI && window[\"SP\"].UI.ModalDialog) {\r\n                    resolve();\r\n                }\r\n                else {\r\n                    // Wait for the core script to be loaded\r\n                    window[\"SP\"].SOD.executeFunc(\"sp.js\", \"SP.UI.ModalDialog\", function () {\r\n                        // Resolve the promise\r\n                        resolve();\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        // Opens a pop-up page\r\n        OpenPopUpPage: function (url, callback, width, height) {\r\n            // Load the library and call the method\r\n            exports.ModalDialog.load().then(function () { window[\"SP\"].UI.ModalDialog.OpenPopUpPage(url, callback, width, height); });\r\n        },\r\n        // Refreshes the page\r\n        RefreshPage: function (dialogResult) {\r\n            // Load the library and call the method\r\n            exports.ModalDialog.load().then(function () { window[\"SP\"].UI.ModalDialog.RefreshPage(dialogResult); });\r\n        },\r\n        // Shows a modal dialog\r\n        showModalDialog: function (options) {\r\n            // Return a promise\r\n            return new Promise(function (resolve) {\r\n                // Load the library and call the method\r\n                exports.ModalDialog.load().then(function () {\r\n                    // Resolve the promise\r\n                    resolve(getDialog(window[\"SP\"].UI.ModalDialog.showModalDialog(options)));\r\n                });\r\n            });\r\n        },\r\n        // Shows a pop-up dialog\r\n        ShowPopupDialog: function (url) {\r\n            // Load the library and call the method\r\n            exports.ModalDialog.load().then(function () { window[\"SP\"].UI.ModalDialog.ShowPopupDialog(url); });\r\n        },\r\n        // Shows a wait screen\r\n        showWaitScreenSize: function (title, message, callback, height, width) {\r\n            // Return a promise\r\n            return new Promise(function (resolve) {\r\n                // Load the library and call the method\r\n                exports.ModalDialog.load().then(function () {\r\n                    // Resolve the promise\r\n                    resolve(getDialog(window[\"SP\"].UI.ModalDialog.showWaitScreenSize(title, message, callback, height, width)));\r\n                });\r\n            });\r\n        },\r\n        // Shows a wait screen w/ no close button\r\n        showWaitScreenWithNoClose: function (title, message, height, width) {\r\n            // Return a promise\r\n            return new Promise(function (resolve) {\r\n                // Load the library and call the method\r\n                exports.ModalDialog.load().then(function () {\r\n                    // Resolve the promise\r\n                    resolve(getDialog(window[\"SP\"].UI.ModalDialog.showWaitScreenWithNoClose(title, message, height, width)));\r\n                });\r\n            });\r\n        }\r\n    };\r\n})();\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/modalDialog.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/notify.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/notify.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Notify = void 0;\r\n/**\r\n * Notification\r\n */\r\nexports.Notify = {\r\n    // Adds a notification\r\n    addNotification: function (html, sticky) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the library and call the method\r\n            exports.Notify.load().then(function () { resolve(window[\"SP\"].UI.Notify.addNotification(html, sticky)); });\r\n        });\r\n    },\r\n    // Method to ensure the core library is loaded\r\n    load: function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the class exists\r\n            if (window[\"SP\"] && window[\"SP\"].UI && window[\"SP\"].UI.Notify) {\r\n                resolve();\r\n            }\r\n            else {\r\n                // Wait for the core script to be loaded\r\n                window[\"SP\"].SOD.executeFunc(\"sp.js\", \"SP.UI.Notify\", function () {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                });\r\n            }\r\n        });\r\n    },\r\n    // Removes a notification\r\n    removeNotification: function (id) {\r\n        // Load the library and call the method\r\n        exports.Notify.load().then(function () { window[\"SP\"].UI.Notify.removeNotification(id); });\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/notify.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/sod.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/sod.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SOD = void 0;\r\n/**\r\n * Script on Demand (SOD)\r\n */\r\nexports.SOD = {\r\n    // Executes the specified function in the specified file with the optional arguments.\r\n    execute: function (key, functionName) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        window[\"SP\"] ? window[\"SP\"].SOD.execute(key, functionName, args) : null;\r\n    },\r\n    // Ensures that the specified file that contains the specified function is loaded and then runs the specified callback function.\r\n    executeFunc: function (key, functionName, fn) { window[\"SP\"] ? window[\"SP\"].SOD.executeFunc(key, functionName, fn) : null; },\r\n    // Executes the specified function if the specified event has occurred; otherwise, adds the function to the pending job queue.\r\n    executeOrDelayUntilEventNotified: function (func, eventName) { window[\"SP\"] ? window[\"SP\"].SOD.executeOrDelayUntilEventNotified(func, eventName) : null; },\r\n    // Executes the specified function if the file containing it is loaded; otherwise, adds it to the pending job queue.\r\n    executeOrDelayUntilScriptLoaded: function (func, depScriptFileName) { window[\"SP\"] ? window[\"SP\"].SOD.executeOrDelayUntilScriptLoaded(func, depScriptFileName) : null; },\r\n    // Records the event and executes any jobs in the pending job queue that are waiting on the event.\r\n    notifyEventAndExecuteWaitingJobs: function (eventName) { window[\"SP\"] ? window[\"SP\"].SOD.notifyEventAndExecuteWaitingJobs(eventName) : null; },\r\n    // Records that the script file is loaded and executes any jobs in the pending job queue that are waiting for the script file to be loaded.\r\n    notifyScriptLoadedAndExecuteWaitingJobs: function (scriptFileName) { window[\"SP\"] ? window[\"SP\"].SOD.notifyScriptLoadedAndExecuteWaitingJobs(scriptFileName) : null; },\r\n    // Registers the specified file at the specified URL.\r\n    registerSod: function (key, url) { window[\"SP\"] ? window[\"SP\"].SOD.registerSod(key, url) : null; },\r\n    // Registers the specified file as a dependency of another file.\r\n    registerSodDep: function (key, dep) { window[\"SP\"] ? window[\"SP\"].SOD.registerSodDep(key, dep) : null; },\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/sod.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/status.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/status.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Status = void 0;\r\n/**\r\n * Status\r\n */\r\nexports.Status = {\r\n    // Adds a status\r\n    addStatus: function (title, html, prepend) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the library\r\n            exports.Status.load().then(function () {\r\n                // Add the status and resolve the promise\r\n                resolve(window[\"SP\"].UI.Status.addStatus(title, html, prepend));\r\n            });\r\n        });\r\n    },\r\n    // Appends a status\r\n    appendStatus: function (id, title, html) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the library\r\n            exports.Status.load().then(function () {\r\n                // Add the status and resolve the promise\r\n                resolve(window[\"SP\"].UI.Status.appendStatus(id, title, html));\r\n            });\r\n        });\r\n    },\r\n    // Method to ensure the core library is loaded\r\n    load: function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // See if the class exists\r\n            if (window[\"SP\"] && window[\"SP\"].UI && window[\"SP\"].UI.Status) {\r\n                resolve();\r\n            }\r\n            else {\r\n                // Wait for the core script to be loaded\r\n                window[\"SP\"].SOD.executeFunc(\"sp.js\", \"SP.UI.Status\", function () {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                });\r\n            }\r\n        });\r\n    },\r\n    // Removes all status messages\r\n    removeAllStatus: function (hide) {\r\n        // Load the library and call the method\r\n        exports.Status.load().then(function () { window[\"SP\"].UI.Status.removeAllStatus(hide); });\r\n    },\r\n    // Removes a status\r\n    removeStatus: function (id) {\r\n        // Load the library and call the method\r\n        exports.Status.load().then(function () { window[\"SP\"].UI.Status.removeStatus(id); });\r\n    },\r\n    // Sets the status color\r\n    setStatusPriColor: function (id, color) {\r\n        // Load the library and call the method\r\n        exports.Status.load().then(function () { window[\"SP\"].UI.Status.setStatusPriColor(id, color); });\r\n    },\r\n    // Updates the status\r\n    updateStatus: function (id, html) {\r\n        // Load the library and call the method\r\n        exports.Status.load().then(function () { window[\"SP\"].UI.Status.updateStatus(id, html); });\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/sp/status.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/taxonomy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/taxonomy.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Taxonomy = void 0;\r\n/**\r\n * Taxonomy Helper Class\r\n */\r\nexports.Taxonomy = {\r\n    /**\r\n     * Method to find a term by id\r\n     */\r\n    findById: function (term, termId) {\r\n        // See if this is the root node\r\n        if (term.info && term.info.id == termId) {\r\n            // Return the root node\r\n            return term;\r\n        }\r\n        // Parse the child nodes\r\n        for (var prop in term) {\r\n            // Skip the info and parent\r\n            if (prop == \"info\" || prop == \"parent\") {\r\n                continue;\r\n            }\r\n            // Find the term by id\r\n            var childTerm = exports.Taxonomy.findById(term[prop], termId);\r\n            if (childTerm) {\r\n                return childTerm;\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Method to find a term by name\r\n     */\r\n    findByName: function (term, termName) {\r\n        // See if this is the root node\r\n        if (term.info && term.info.name == termName) {\r\n            // Return the root node\r\n            return term;\r\n        }\r\n        // Parse the child nodes\r\n        for (var prop in term) {\r\n            // Skip the info and parent\r\n            if (prop == \"info\" || prop == \"parent\") {\r\n                continue;\r\n            }\r\n            // Find the term by id\r\n            var childTerm = exports.Taxonomy.findByName(term[prop], termName);\r\n            if (childTerm) {\r\n                return childTerm;\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Method to get the terms\r\n     */\r\n    getTerms: function (termSet, termSetTerms) {\r\n        var terms = [];\r\n        // Add the root term\r\n        terms.push({\r\n            description: termSet.get_description(),\r\n            id: termSet.get_id().toString(),\r\n            name: termSet.get_name(),\r\n            path: [],\r\n            pathAsString: \"\",\r\n            props: termSet.get_customProperties()\r\n        });\r\n        // Parse the term sets terms\r\n        var enumerator = termSetTerms.getEnumerator();\r\n        while (enumerator.moveNext()) {\r\n            var term = enumerator.get_current();\r\n            // Create the terms\r\n            terms.push({\r\n                description: term.get_description(),\r\n                id: term.get_id().toString(),\r\n                name: term.get_name(),\r\n                path: term.get_pathOfTerm().split(\";\"),\r\n                pathAsString: term.get_pathOfTerm(),\r\n                props: term.get_customProperties()\r\n            });\r\n        }\r\n        // Sort the terms\r\n        terms = terms.sort(function (a, b) {\r\n            if (a.pathAsString < b.pathAsString) {\r\n                return -1;\r\n            }\r\n            if (a.pathAsString > b.pathAsString) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        // Return the terms\r\n        return terms;\r\n    },\r\n    /**\r\n     * Method to get the term group\r\n     */\r\n    getTermGroup: function (groupName) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the scripts\r\n            exports.Taxonomy.loadScripts().then(function () {\r\n                // Get the taxonomy session\r\n                var context = SP.ClientContext.get_current();\r\n                var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\r\n                // See if we are getting a specific group name\r\n                if (groupName) {\r\n                    // Resolve the promise\r\n                    var termStores_1 = session.get_termStores();\r\n                    context.load(termStores_1, \"Include(Groups)\");\r\n                    context.executeQueryAsync(function () {\r\n                        // Get the default store\r\n                        var enumerator = termStores_1.getEnumerator();\r\n                        var termStore = enumerator.moveNext() ? enumerator.get_current() : null;\r\n                        if (termStore) {\r\n                            // Get the term group\r\n                            var termGroup = termStore.get_groups().getByName(groupName);\r\n                            context.load(termGroup);\r\n                            // Resolve the promise\r\n                            resolve({ context: context, termGroup: termGroup });\r\n                        }\r\n                        else {\r\n                            // Reject the promise\r\n                            reject(\"Unable to find the taxonomy store.\");\r\n                        }\r\n                    }, function () {\r\n                        var args = [];\r\n                        for (var _i = 0; _i < arguments.length; _i++) {\r\n                            args[_i] = arguments[_i];\r\n                        }\r\n                        // Reject the promise\r\n                        reject(args[1].get_message());\r\n                    });\r\n                }\r\n                else {\r\n                    // Get the default site collection group\r\n                    var termStore = session.getDefaultSiteCollectionTermStore();\r\n                    var termGroup = termStore.getSiteCollectionGroup(context.get_site());\r\n                    context.load(termGroup);\r\n                    // Resolve the promise\r\n                    resolve({ context: context, termGroup: termGroup });\r\n                }\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the term groups\r\n     */\r\n    getTermGroups: function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the scripts\r\n            exports.Taxonomy.loadScripts().then(function () {\r\n                // Get the taxonomy session\r\n                var context = SP.ClientContext.get_current();\r\n                var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\r\n                // Resolve the promise\r\n                var termStores = session.get_termStores();\r\n                context.load(termStores, \"Include(Groups)\");\r\n                context.executeQueryAsync(function () {\r\n                    // Get the default store\r\n                    var enumerator = termStores.getEnumerator();\r\n                    var termStore = enumerator.moveNext() ? enumerator.get_current() : null;\r\n                    if (termStore) {\r\n                        // Get the term groups\r\n                        var termGroups_1 = termStore.get_groups();\r\n                        context.load(termGroups_1, \"Include(Description, Id, Name)\");\r\n                        // Execute the request\r\n                        context.executeQueryAsync(\r\n                        // Success\r\n                        function () {\r\n                            var groups = [];\r\n                            // Parse the groups\r\n                            var enumerator = termGroups_1.getEnumerator();\r\n                            while (enumerator.moveNext()) {\r\n                                var group = enumerator.get_current();\r\n                                // Add the group information\r\n                                groups.push({\r\n                                    description: group.get_description(),\r\n                                    id: group.get_id().toString(),\r\n                                    name: group.get_name()\r\n                                });\r\n                            }\r\n                            // Resolve the promise\r\n                            resolve(groups);\r\n                        }, function () {\r\n                            var args = [];\r\n                            for (var _i = 0; _i < arguments.length; _i++) {\r\n                                args[_i] = arguments[_i];\r\n                            }\r\n                            // Reject the promise\r\n                            reject(args[1].get_message());\r\n                        });\r\n                    }\r\n                    else {\r\n                        // Reject the promise\r\n                        reject(\"Unable to find the taxonomy store.\");\r\n                    }\r\n                }, function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Reject the promise\r\n                    reject(args[1].get_message());\r\n                });\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the term sets for a group\r\n     */\r\n    getTermSets: function (groupName) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the term gruop\r\n            exports.Taxonomy.getTermGroup(groupName).then(\r\n            // Success\r\n            function (_a) {\r\n                var context = _a.context, termGroup = _a.termGroup;\r\n                // Get the term group information\r\n                var termGroupInfo = termGroup.get_termSets();\r\n                context.load(termGroupInfo, \"Include(CustomProperties, Description, Id, Name)\");\r\n                // Execute the request\r\n                context.executeQueryAsync(function () {\r\n                    var termSets = [];\r\n                    // Parse the term group information\r\n                    var enumerator = termGroupInfo.getEnumerator();\r\n                    while (enumerator.moveNext()) {\r\n                        var termSet = enumerator.get_current();\r\n                        // Add the group information\r\n                        termSets.push({\r\n                            description: termSet.get_description(),\r\n                            id: termSet.get_id().toString(),\r\n                            name: termSet.get_name(),\r\n                            props: termSet.get_customProperties()\r\n                        });\r\n                    }\r\n                    // Resolve the promise\r\n                    resolve(termSets);\r\n                }, function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Reject the promise\r\n                    reject(args[1].get_message());\r\n                });\r\n            }, \r\n            // Error\r\n            function (reason) {\r\n                // Reject the promise\r\n                reject(reason);\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the term sets from the default site collection.\r\n     */\r\n    getTermSetsFromDefaultSC: function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the scripts\r\n            exports.Taxonomy.loadScripts().then(function () {\r\n                // Get the taxonomy session\r\n                var context = SP.ClientContext.get_current();\r\n                var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\r\n                // Get the terms sets from the default site collection\r\n                var termStore = session.getDefaultSiteCollectionTermStore();\r\n                var termGroup = termStore.getSiteCollectionGroup(context.get_site());\r\n                var termGroupInfo = termGroup.get_termSets();\r\n                context.load(termGroupInfo, \"Include(CustomProperties, Description, Id, Name)\");\r\n                // Execute the request\r\n                context.executeQueryAsync(\r\n                // Success\r\n                function () {\r\n                    var termSets = [];\r\n                    // Parse the term group information\r\n                    var enumerator = termGroupInfo.getEnumerator();\r\n                    while (enumerator.moveNext()) {\r\n                        var termSet = enumerator.get_current();\r\n                        // Add the group information\r\n                        termSets.push({\r\n                            description: termSet.get_description(),\r\n                            id: termSet.get_id().toString(),\r\n                            name: termSet.get_name(),\r\n                            props: termSet.get_customProperties()\r\n                        });\r\n                    }\r\n                    // Resolve the promise\r\n                    resolve(termSets);\r\n                }, function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Reject the promise\r\n                    reject(args[1].get_message());\r\n                });\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the terms by id\r\n     */\r\n    getTermsById: function (termStoreId, termSetId) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Load the scripts\r\n            exports.Taxonomy.loadScripts().then(function () {\r\n                // Get the taxonomy session\r\n                var context = SP.ClientContext.get_current();\r\n                var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\r\n                // Get the term set terms\r\n                var termStore = session.get_termStores().getById(termStoreId);\r\n                var termSet = termStore.getTermSet(termSetId);\r\n                var terms = termSet.getAllTerms();\r\n                context.load(termSet);\r\n                context.load(terms, \"Include(CustomProperties, Description, Id, Name, PathOfTerm)\");\r\n                // Execute the request\r\n                context.executeQueryAsync(function () {\r\n                    // Resolve the promise\r\n                    resolve(exports.Taxonomy.getTerms(termSet, terms));\r\n                }, function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Reject the promise\r\n                    reject(args[1].get_message());\r\n                });\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the term set by id\r\n     */\r\n    getTermSetById: function (termStoreId, termSetId) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the terms\r\n            exports.Taxonomy.getTermsById(termStoreId, termSetId).then(\r\n            // Success\r\n            function (terms) {\r\n                // Resolve the promise\r\n                resolve(exports.Taxonomy.toObject(terms));\r\n            }, \r\n            // Error\r\n            function (reason) {\r\n                // Reject the promise\r\n                reject(reason);\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the terms from the default site collection\r\n     */\r\n    getTermsFromDefaultSC: function (termSetName) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the term group\r\n            exports.Taxonomy.getTermGroup().then(\r\n            // Success\r\n            function (_a) {\r\n                var context = _a.context, termGroup = _a.termGroup;\r\n                // Get the term set terms\r\n                var termSet = termGroup.get_termSets().getByName(termSetName);\r\n                var terms = termSet.getAllTerms();\r\n                context.load(termSet);\r\n                context.load(terms, \"Include(CustomProperties, Description, Id, Name, PathOfTerm)\");\r\n                // Execute the request\r\n                context.executeQueryAsync(function () {\r\n                    // Resolve the promise\r\n                    resolve(exports.Taxonomy.getTerms(termSet, terms));\r\n                }, function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Reject the promise\r\n                    reject(args[1].get_message());\r\n                });\r\n            }, \r\n            // Error\r\n            function (reason) {\r\n                // Reject the promise\r\n                reject(reason);\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the term set from the default site collection\r\n     */\r\n    getTermSetFromDefaultSC: function (termSetName) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the terms\r\n            exports.Taxonomy.getTermsFromDefaultSC(termSetName).then(\r\n            // Success\r\n            function (terms) {\r\n                // Resolve the object\r\n                resolve(exports.Taxonomy.toObject(terms));\r\n            }, \r\n            // Error\r\n            function (reason) {\r\n                // Reject the promise\r\n                reject(reason);\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get a terms from a specified group\r\n     */\r\n    getTermsByGroupName: function (termSetName, groupName) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the term group\r\n            exports.Taxonomy.getTermGroup(groupName).then(function (_a) {\r\n                var context = _a.context, termGroup = _a.termGroup;\r\n                // Get the term set terms\r\n                var termSet = termGroup.get_termSets().getByName(termSetName);\r\n                var terms = termSet.getAllTerms();\r\n                context.load(termSet);\r\n                context.load(terms, \"Include(CustomProperties, Description, Id, Name, PathOfTerm)\");\r\n                // Execute the request\r\n                context.executeQueryAsync(function () {\r\n                    // Resolve the promise\r\n                    resolve(exports.Taxonomy.getTerms(termSet, terms));\r\n                }, function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Reject the promise\r\n                    reject(args[1].get_message());\r\n                });\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to get the term set from the default site collection\r\n     */\r\n    getTermSetByGroupName: function (termSetName, groupName) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Get the terms\r\n            exports.Taxonomy.getTermsByGroupName(termSetName, groupName).then(\r\n            // Success\r\n            function (terms) {\r\n                // Resolve the object\r\n                resolve(exports.Taxonomy.toObject(terms));\r\n            }, \r\n            // Error\r\n            function (reason) {\r\n                // Reject the promise\r\n                reject(reason);\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Method to ensure the taxonomy script references are loaded.\r\n     */\r\n    loadScripts: function () {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Ensure the core script is loaded\r\n            SP.SOD.executeFunc(\"sp.js\", \"SP.Utilities.Utility\", function () {\r\n                // Ensure the taxonomy script is loaded\r\n                SP.SOD.registerSod(\"sp.taxonomy.js\", SP.Utilities.Utility.getLayoutsPageUrl(\"sp.taxonomy.js\"));\r\n                SP.SOD.executeFunc(\"sp.taxonomy.js\", \"SP.Taxonomy.TaxonomySession\", function () {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                });\r\n            }, \"sp.js\");\r\n        });\r\n    },\r\n    /**\r\n     * Method to convert a term to an array of term information\r\n     */\r\n    toArray: function (term) {\r\n        var terms = [];\r\n        // Recursive method to extract the child terms\r\n        var getChildTerms = function (term, terms) {\r\n            // Parse the properties\r\n            for (var prop in term) {\r\n                // Skip the info and parent properties\r\n                if (prop == \"info\" || prop == \"parent\") {\r\n                    continue;\r\n                }\r\n                // Add the child term\r\n                var childTerm = term[prop];\r\n                terms.push(childTerm.info);\r\n                // Add the child terms\r\n                getChildTerms(childTerm, terms);\r\n            }\r\n        };\r\n        // Ensure the term exists\r\n        if (term) {\r\n            // See if the root node contains term information\r\n            if (term.info) {\r\n                // Add the root term\r\n                terms.push(term.info);\r\n            }\r\n            // Get the child terms\r\n            getChildTerms(term, terms);\r\n        }\r\n        // Return the child terms\r\n        return terms;\r\n    },\r\n    /**\r\n     * Method to convert a term to a field value\r\n     */\r\n    toFieldValue: function (term) {\r\n        var termInfo = term ? term[\"info\"] || term : null;\r\n        // Ensure the term exists\r\n        if (termInfo) {\r\n            return {\r\n                __metadata: { \"type\": \"SP.Taxonomy.TaxonomyFieldValue\" },\r\n                Label: termInfo.name,\r\n                TermGuid: termInfo.id,\r\n                WssId: -1\r\n            };\r\n        }\r\n        // Return nothing\r\n        return null;\r\n    },\r\n    /**\r\n     * Method to convert a collection of terms to a field value\r\n     */\r\n    toFieldMultiValue: function (terms) {\r\n        var results = [];\r\n        // Ensure terms exist\r\n        if (terms && terms.length > 0) {\r\n            // Parse the terms\r\n            for (var i = 0; i < terms.length; i++) {\r\n                var termInfo = terms[i][\"info\"] || terms[i];\r\n                // Add the term\r\n                results.push(\";#\" + termInfo.name + \"|\" + termInfo.id);\r\n            }\r\n        }\r\n        // Return a blank array\r\n        return {\r\n            __metadata: { type: \"Collection(SP.Taxonomy.TaxonomyFieldValue)\" },\r\n            results: results\r\n        };\r\n    },\r\n    /**\r\n     * Method to convert the terms to an object\r\n     */\r\n    toObject: function (terms) {\r\n        var root = {};\r\n        // Recursive method to add terms\r\n        var addTerm = function (node, info, path) {\r\n            var term = node;\r\n            var termName = \"\";\r\n            // Loop for each term\r\n            while (path.length > 0) {\r\n                // Ensure the term exists\r\n                termName = path[0];\r\n                if (term[termName] == null) {\r\n                    // Create the term\r\n                    term[termName] = {};\r\n                }\r\n                // Set the term\r\n                var parent_1 = term;\r\n                term = term[termName];\r\n                // Set the parent\r\n                term.parent = parent_1;\r\n                // Remove the term from the path\r\n                path.splice(0, 1);\r\n            }\r\n            // Set the info\r\n            term.info = info;\r\n        };\r\n        // Ensure the terms exist\r\n        if (terms && terms.length > 0) {\r\n            // Parse the terms\r\n            for (var i = 0; i < terms.length; i++) {\r\n                var term = terms[i];\r\n                // See if this is the root term\r\n                if (term.pathAsString == \"\") {\r\n                    // Set the root information\r\n                    root.info = term;\r\n                }\r\n                else {\r\n                    // Add the term\r\n                    addTerm(root, term, term.pathAsString.split(\";\"));\r\n                }\r\n            }\r\n            // Return the root term\r\n            return exports.Taxonomy.findById(root, terms[0].id);\r\n        }\r\n        // Return nothing\r\n        return null;\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/taxonomy.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/webpart.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/webpart.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebPart = void 0;\r\n/**\r\n * Web Part\r\n */\r\nvar _WebPart = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param props - The webpart properties.\r\n     */\r\n    function _WebPart(props) {\r\n        var _this = this;\r\n        this._props = null;\r\n        this._wp = null;\r\n        /**\r\n         * Method to add the help link to a script part editor.\r\n         * @wpId - The webpart id.\r\n         */\r\n        this.addHelpLink = function () {\r\n            // Ensure the help properties exist\r\n            if (_this._props.helpProps) {\r\n                // Get the webpart's \"Snippet\"\r\n                var link = document.querySelector(\"div[webpartid='\" + _this._wp.wpId + \"'] a[title='Edit Snippet']\");\r\n                if (link) {\r\n                    // Create the help link\r\n                    var helpLink = document.createElement(\"a\");\r\n                    helpLink.href = _this._props.helpProps.url || \"#\";\r\n                    helpLink.style.paddingLeft = \"10px\";\r\n                    helpLink.setAttribute(\"role\", \"button\");\r\n                    helpLink.title = _this._props.helpProps.title || \"Help\";\r\n                    helpLink.innerHTML = \"<span class='ms-metadata'>\" + helpLink.title + \"</span>\";\r\n                    helpLink.target = \"_blank\";\r\n                    // Append the link\r\n                    link.parentElement.appendChild(helpLink);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Method to get the webpart id for a specified element\r\n         * @param el - The target element.\r\n         */\r\n        this.getWebPartId = function (el) {\r\n            // Loop until we find the webpart id\r\n            while (el) {\r\n                // See if this element contains the webpart id\r\n                var wpId = el.getAttribute(\"webpartid\");\r\n                if (wpId) {\r\n                    // Return the webpart id\r\n                    return wpId;\r\n                }\r\n                // Check the parent\r\n                el = el.parentElement;\r\n            }\r\n            // Unable to detect\r\n            return \"\";\r\n        };\r\n        /**\r\n         * Method to get the webpart information\r\n         */\r\n        this.getWebPartInfo = function () {\r\n            var targetInfo = {\r\n                cfg: null,\r\n                el: null,\r\n                wpId: null\r\n            };\r\n            // Ensure the element id exists\r\n            if (_this._props.elementId) {\r\n                // Get the webpart elements\r\n                var elements = document.querySelectorAll(\"#\" + _this._props.elementId);\r\n                for (var i = 0; i < elements.length; i++) {\r\n                    var elWebPart = elements[i];\r\n                    // See if we have already configured this element\r\n                    if (elWebPart.getAttribute(\"data-isConfigured\")) {\r\n                        continue;\r\n                    }\r\n                    // Get the webpart id\r\n                    var wpId = _this.getWebPartId(elWebPart);\r\n                    if (wpId) {\r\n                        // See if the configuration element exists\r\n                        var elCfg = _this._props.cfgElementId ? elWebPart.parentElement.querySelector(\"#\" + _this._props.cfgElementId) : null;\r\n                        if (elCfg) {\r\n                            try {\r\n                                // Parse the configuration\r\n                                var cfg = JSON.parse(elCfg.innerText.trim());\r\n                                // See if the webaprt id exists\r\n                                if (cfg.WebPartId) {\r\n                                    // See if it's for this webpart\r\n                                    if (cfg.WebPartId == wpId) {\r\n                                        // Set the target information\r\n                                        targetInfo = {\r\n                                            cfg: cfg,\r\n                                            el: elWebPart,\r\n                                            wpId: wpId\r\n                                        };\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // Set the target information\r\n                                    targetInfo = {\r\n                                        cfg: {\r\n                                            WebPartId: wpId\r\n                                        },\r\n                                        el: elWebPart,\r\n                                        wpId: wpId\r\n                                    };\r\n                                    break;\r\n                                }\r\n                            }\r\n                            catch (ex) {\r\n                                // Set the target information\r\n                                targetInfo = {\r\n                                    cfg: {\r\n                                        WebPartId: wpId\r\n                                    },\r\n                                    el: elWebPart,\r\n                                    wpId: wpId\r\n                                };\r\n                                // Log\r\n                                console.log(\"[sp-webpart] Error parsing the configuration for element '\" + _this._props.cfgElementId + \"'.\");\r\n                            }\r\n                            // Break from the loop\r\n                            break;\r\n                        }\r\n                        else {\r\n                            // Set the target information\r\n                            targetInfo = {\r\n                                cfg: {\r\n                                    WebPartId: wpId\r\n                                },\r\n                                el: elWebPart,\r\n                                wpId: wpId\r\n                            };\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // Ensure elements were found\r\n                if (elements.length == 0) {\r\n                    // Log\r\n                    console.log(\"[sp-webpart] Error - Unable to find elements with id '\" + _this._props.elementId + \"'.\");\r\n                }\r\n            }\r\n            else {\r\n                // Log\r\n                console.log(\"[sp-webpart] The target element id is not defined.\");\r\n            }\r\n            // Ensure the target element exists\r\n            if (targetInfo.el) {\r\n                // Set the configuration flag\r\n                targetInfo.el.setAttribute(\"data-isConfigured\", \"true\");\r\n            }\r\n            // Return the target information\r\n            return targetInfo;\r\n        };\r\n        /**\r\n         * Method to render the webpart\r\n         */\r\n        this.render = function () {\r\n            var element = null;\r\n            // Get the webpart information\r\n            _this._wp = _this.getWebPartInfo();\r\n            if (_this._wp == null || _this._wp.el == null) {\r\n                // Log\r\n                console.log(\"[sp-webpart] The target webpart element '\" + _this._props.elementId + \"' was not found.\");\r\n                return;\r\n            }\r\n            // See if the page is being edited\r\n            var returnVal = null;\r\n            if (exports.WebPart.isEditMode()) {\r\n                // Add the help link\r\n                _this.addHelpLink();\r\n                // Call the render event\r\n                if (_this._props.onRenderEdit) {\r\n                    // Execute the render edit event\r\n                    returnVal = _this._props.onRenderEdit(_this._wp);\r\n                }\r\n            }\r\n            else {\r\n                // See if the configuration is defined, but has no value\r\n                if (_this._wp.cfg || (_this._props.cfgElementId || \"\").length == 0) {\r\n                    // Execute the render edit event\r\n                    returnVal = _this._props.onRenderDisplay(_this._wp);\r\n                }\r\n                else {\r\n                    // Render a message\r\n                    _this._wp.el.innerHTML = '<h3>Please edit the page and configure the webpart.</h3>';\r\n                }\r\n            }\r\n            // See if a promise was returned\r\n            if (returnVal && returnVal.then) {\r\n                // Wait for the request to complete\r\n                returnVal.then(function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    // Execute the post render event\r\n                    _this._props.onPostRender ? _this._props.onPostRender(_this._wp) : null;\r\n                });\r\n            }\r\n            else {\r\n                // Execute the post render event\r\n                _this._props.onPostRender ? _this._props.onPostRender(_this._wp) : null;\r\n            }\r\n        };\r\n        // Set the properties\r\n        this._props = props || {};\r\n        // Add a load event\r\n        window.addEventListener(\"load\", function () {\r\n            // Render the component\r\n            _this.render();\r\n        });\r\n    }\r\n    // Method to create an instance of the webpart\r\n    _WebPart.create = function (props) {\r\n        // Return an instance of the webpart\r\n        return new _WebPart(props);\r\n    };\r\n    // Generates the XML for a content editor webpart\r\n    _WebPart.generateContentEditorXML = function (props) {\r\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<WebPart xmlns=\\\"http://schemas.microsoft.com/WebPart/v2\\\">\\n    <Assembly>Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c</Assembly>\\n    <TypeName>Microsoft.SharePoint.WebPartPages.ContentEditorWebPart</TypeName>\\n    <Title>[[Title]]</Title>\\n    <Description>[[Description]]</Description>\\n    <FrameType>[[FrameType]]</FrameType>\\n    <ContentLink xmlns=\\\"http://schemas.microsoft.com/WebPart/v2/ContentEditor\\\">[[ContentLink]]</ContentLink>\\n    <Content xmlns=\\\"http://schemas.microsoft.com/WebPart/v2/ContentEditor\\\"><![CDATA[[[Content]]]]></Content>\\n</WebPart>\".replace(/\\r?\\n/g, '')\r\n            .replace(/\\[\\[FrameType\\]\\]/g, props.frameType || \"Default\")\r\n            .replace(/\\[\\[Content\\]\\]/g, props.content || \"\")\r\n            .replace(/\\[\\[ContentLink\\]\\]/g, props.contentLink || \"\")\r\n            .replace(/\\[\\[Description\\]\\]/g, props.description || \"\")\r\n            .replace(/\\[\\[Title\\]\\]/g, props.title || \"\");\r\n    };\r\n    // Generates the XML for a script editor webpart\r\n    _WebPart.generateScriptEditorXML = function (props) {\r\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<webParts>\\n    <webPart xmlns=\\\"http://schemas.microsoft.com/WebPart/v3\\\">\\n        <metaData>\\n            <type name=\\\"Microsoft.SharePoint.WebPartPages.ScriptEditorWebPart, Microsoft.SharePoint, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c\\\" />\\n            <importErrorMessage>$Resources:core,ImportantErrorMessage;</importErrorMessage>\\n        </metaData>\\n        <data>\\n            <properties>\\n            <property name=\\\"Title\\\" type=\\\"string\\\">[[Title]]</property>\\n            <property name=\\\"Description\\\" type=\\\"string\\\">[[Description]]</property>\\n            <property name=\\\"ChromeType\\\" type=\\\"chrometype\\\">[[ChromeType]]</property>\\n            <property name=\\\"Content\\\" type=\\\"string\\\">[[Content]]</property>\\n        </properties>\\n        </data>\\n    </webPart>\\n</webParts>\".replace(/\\r?\\n/g, '')\r\n            .replace(/\\[\\[ChromeType\\]\\]/g, props.chromeType || \"TitleOnly\")\r\n            .replace(/\\[\\[Content\\]\\]/g, props.content.replace(/\\</g, '&lt;').replace(/\\>/g, '&gt;'))\r\n            .replace(/\\[\\[Description\\]\\]/g, props.description || \"\")\r\n            .replace(/\\[\\[Title\\]\\]/g, props.title || \"\");\r\n    };\r\n    /**\r\n     * Method to detect if a page is being edited\r\n     */\r\n    _WebPart.isEditMode = function () {\r\n        var formName = MSOWebPartPageFormName ? MSOWebPartPageFormName : \"\";\r\n        // Get the form\r\n        var form = document.forms[MSOWebPartPageFormName];\r\n        if (form) {\r\n            // Get the wiki page mode\r\n            var wikiPageMode = form._wikiPageMode ? form._wikiPageMode.value : null;\r\n            // Get the webpart page mode\r\n            var wpPageMode = form.MSOLayout_InDesignMode ? form.MSOLayout_InDesignMode.value : null;\r\n            // Determine if the page is being edited\r\n            return wikiPageMode == \"Edit\" || wpPageMode == \"1\";\r\n        }\r\n        // Unable to determine\r\n        return false;\r\n    };\r\n    return _WebPart;\r\n}());\r\nexports.WebPart = _WebPart;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/webpart.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Helper = void 0;\r\n// Type definitions for gd-sprest\r\n// Project: https://dattabase.com\r\n// Definitions by: Gunjan Datta <https://github.com/gunjandatta>\r\n/***************************************************************************************************\r\nMIT License\r\n\r\nCopyright (c) 2016 Dattabase, LLC.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n***************************************************************************************************/\r\nvar Helper = __webpack_require__(/*! ./helper */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/index.js\");\r\nexports.Helper = Helper;\r\n__exportStar(__webpack_require__(/*! ./lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./rest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/rest.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sptypes */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/index.js\"), exports);\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/apps.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/apps.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Apps = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Apps\r\n */\r\nexports.Apps = (function (targetInfo) {\r\n    var apps = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    apps.targetInfo.defaultToWebFl = true;\r\n    apps.targetInfo.endpoint = \"apps\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(apps, { __metadata: { type: \"Microsoft.AppServices.AppCollection\" } });\r\n    // Return the apps\r\n    return apps;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/apps.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/contextInfo.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/contextInfo.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ContextInfo = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Context Information\r\n */\r\nvar _ContextInfo = /** @class */ (function () {\r\n    function _ContextInfo() {\r\n    }\r\n    Object.defineProperty(_ContextInfo, \"_contextInfo\", {\r\n        // The current context information\r\n        get: function () {\r\n            // Return the page context by default\r\n            if (this.window[\"_spPageContextInfo\"]) {\r\n                return this.window[\"_spPageContextInfo\"];\r\n            }\r\n            // See if the SPFx context was set\r\n            if (this._spfxPageContext && this._spfxPageContext.legacyPageContext) {\r\n                return this._spfxPageContext.legacyPageContext;\r\n            }\r\n            // Return a default object\r\n            return {\r\n                existsFl: false,\r\n                isAppWeb: false,\r\n                isHubSite: false,\r\n                isSPO: false,\r\n                siteAbsoluteUrl: \"\",\r\n                siteServerRelativeUrl: \"\",\r\n                userId: 0,\r\n                webAbsoluteUrl: \"\",\r\n                webServerRelativeUrl: \"\"\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(_ContextInfo, \"aadInstanceUrl\", {\r\n        /**\r\n         * Properties\r\n         */\r\n        get: function () { return this._contextInfo.aadInstanceUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"aadTenantId\", {\r\n        get: function () { return this._contextInfo.aadTenantId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"alertsEnabled\", {\r\n        get: function () { return this._contextInfo.alertsEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"allowSilverlightPrompt\", {\r\n        get: function () { return this._contextInfo.allowSilverlightPrompt == \"True\" ? true : false; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"canUserCreateMicrosoftForm\", {\r\n        get: function () { return this._contextInfo.canUserCreateMicrosoftForm; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"canUserCreateVisioDrawing\", {\r\n        get: function () { return this._contextInfo.canUserCreateVisioDrawing; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"cdnPrefix\", {\r\n        get: function () { return this._contextInfo.cdnPrefix; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"clientServerTimeDelta\", {\r\n        get: function () { return this._contextInfo.clientServerTimeDelta; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"CorrelationId\", {\r\n        get: function () { return this._contextInfo.CorrelationId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"crossDomainPhotosEnabled\", {\r\n        get: function () { return this._contextInfo.crossDomainPhotosEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"currentCultureName\", {\r\n        get: function () { return this._contextInfo.currentCultureName; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"currentLanguage\", {\r\n        get: function () { return this._contextInfo.currentLanguage; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"currentUICultureName\", {\r\n        get: function () { return this._contextInfo.currentUICultureName; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"departmentId\", {\r\n        get: function () { return this._contextInfo.departmentId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"DesignPackageId\", {\r\n        get: function () { return this._contextInfo.DesignPackageId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"disableAppViews\", {\r\n        get: function () { return this._contextInfo.disableAppViews; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"disableFlows\", {\r\n        get: function () { return this._contextInfo.disableFlows; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"document\", {\r\n        get: function () { return this.window ? this.window.document : null; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"env\", {\r\n        get: function () { return this._contextInfo.env; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"existsFl\", {\r\n        get: function () { return this._contextInfo.existsFl == null; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"farmLabel\", {\r\n        get: function () { return this._contextInfo.farmLabel; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"fid\", {\r\n        get: function () { return this._contextInfo.fid; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"formDigestTimeoutSeconds\", {\r\n        get: function () { return this._contextInfo.formDigestTimeoutSeconds; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"formDigestValue\", {\r\n        get: function () { return this._contextInfo.formDigestValue; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"groupColor\", {\r\n        get: function () { return this._contextInfo.groupColor; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"groupHasHomepage\", {\r\n        get: function () { return this._contextInfo.groupHasHomepage; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"groupId\", {\r\n        get: function () { return this._contextInfo.groupId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"groupType\", {\r\n        get: function () { return this._contextInfo.groupType; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"guestsEnabled\", {\r\n        get: function () { return this._contextInfo.guestsEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"hasManageWebPermissions\", {\r\n        get: function () { return this._contextInfo.hasManageWebPermissions; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"hasPendingWebTemplateExtension\", {\r\n        get: function () { return this._contextInfo.hasPendingWebTemplateExtension; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"hideSyncButtonOnODB\", {\r\n        get: function () { return this._contextInfo.hideSyncButtonOnODB; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"hubSiteId\", {\r\n        get: function () { return this._contextInfo.hubSiteId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"idleSessionSignOutEnabled\", {\r\n        get: function () { return this._contextInfo.idleSessionSignOutEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isAnonymousGuestUser\", {\r\n        get: function () { return this._contextInfo.isAnonymousGuestUser; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isAppWeb\", {\r\n        get: function () { return this._contextInfo.isAppWeb; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isArchived\", {\r\n        get: function () { return this._contextInfo.isArchived; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isEmailAuthenticationGuestUser\", {\r\n        get: function () { return this._contextInfo.isEmailAuthenticationGuestUser; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isExternalGuestUser\", {\r\n        get: function () { return this._contextInfo.isExternalGuestUser; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isGroupRelatedSite\", {\r\n        get: function () { return this._contextInfo.isGroupRelatedSite; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isGroupifyDisabled\", {\r\n        get: function () { return this._contextInfo.isGroupifyDisabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isGroupifyMenuButtonFeatureOff\", {\r\n        get: function () { return this._contextInfo.isGroupifyMenuButtonFeatureOff; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isHubSite\", {\r\n        get: function () { return this._contextInfo.isHubSite; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isLocationserviceAvailable\", {\r\n        get: function () { return this._contextInfo.isLocationserviceAvailable; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isMultiGeoODBMode\", {\r\n        get: function () { return this._contextInfo.isMultiGeoODBMode; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isMultiGeoTenant\", {\r\n        get: function () { return this._contextInfo.isMultiGeoTenant; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isNoScriptEnabled\", {\r\n        get: function () { return this._contextInfo.isNoScriptEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isSiteAdmin\", {\r\n        get: function () { return this._contextInfo.isSiteAdmin; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isSiteOwner\", {\r\n        get: function () { return this._contextInfo.isSiteOwner; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isSPO\", {\r\n        get: function () { return this._contextInfo.isSPO; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isShareByLinkEnabled\", {\r\n        get: function () { return this._contextInfo.isShareByLinkEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isTeamsChannelSite\", {\r\n        get: function () { return this._contextInfo.isTeamsChannelSite; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isTeamsConnectedSite\", {\r\n        get: function () { return this._contextInfo.isTeamsConnectedSite; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isTenantDevSite\", {\r\n        get: function () { return this._contextInfo.isTenantDevSite; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isUnauthorizedTenant\", {\r\n        get: function () { return this._contextInfo.isUnauthorizedTenant; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"isWebWelcomePage\", {\r\n        get: function () { return this._contextInfo.isWebWelcomePage; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"layoutsUrl\", {\r\n        get: function () { return this._contextInfo.layoutsUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"listBaseTemplate\", {\r\n        get: function () { return this._contextInfo.listBaseTemplate; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"listBaseType\", {\r\n        get: function () { return this._contextInfo.listBaseType; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"listId\", {\r\n        get: function () { return this._contextInfo.listId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"listItemCount\", {\r\n        get: function () { return this._contextInfo.listItemCount; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"listTitle\", {\r\n        get: function () { return this._contextInfo.listTitle; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"listPermsMask\", {\r\n        get: function () { return this._contextInfo.listPermsMask; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"listUrl\", {\r\n        get: function () { return this._contextInfo.listUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"maximumFileSize\", {\r\n        get: function () { return this._contextInfo.maximumFileSize; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"modernThemingEnabled\", {\r\n        get: function () { return this._contextInfo.modernThemingEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"msGraphEndpointUrl\", {\r\n        get: function () { return this._contextInfo.msGraphEndpointUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"msMruEndpointUrl\", {\r\n        get: function () { return this._contextInfo.msMruEndpointUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"multiGeoInfo\", {\r\n        get: function () { return this._contextInfo.multiGeoInfo; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"navigationInfo\", {\r\n        get: function () { return this._contextInfo.navigationInfo; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"nid\", {\r\n        get: function () { return this._contextInfo.nid; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"openInClient\", {\r\n        get: function () { return this._contextInfo.openInClient; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"pageItemId\", {\r\n        get: function () { return this._contextInfo.pageItemId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"pageListId\", {\r\n        get: function () { return this._contextInfo.pageListId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"pagePermsMask\", {\r\n        get: function () { return this._contextInfo.pagePermsMask; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"pagePersonalizationScope\", {\r\n        get: function () { return this._contextInfo.pagePersonalizationScope; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"preferUserTimeZone\", {\r\n        get: function () { return this._contextInfo.preferUserTimeZone; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"PreviewFeaturesEnabled\", {\r\n        get: function () { return this._contextInfo.PreviewFeaturesEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"profileUrl\", {\r\n        get: function () { return this._contextInfo.profileUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"PublishingFeatureOn\", {\r\n        get: function () { return this._contextInfo.PublishingFeatureOn; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"RecycleBinItemCount\", {\r\n        get: function () { return this._contextInfo.RecycleBinItemCount; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"serverRedirectedUrl\", {\r\n        get: function () { return this._contextInfo.serverRedirectedUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"serverRequestPath\", {\r\n        get: function () { return this._contextInfo.serverRequestPath; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"serverTime\", {\r\n        get: function () { return this._contextInfo.serverTime; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"showNGSCDialogForSyncOnODB\", {\r\n        get: function () { return this._contextInfo.showNGSCDialogForSyncOnODB; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"showNGSCDialogForSyncOnTS\", {\r\n        get: function () { return this._contextInfo.showNGSCDialogForSyncOnTS; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"siteAbsoluteUrl\", {\r\n        get: function () { return this._contextInfo.siteAbsoluteUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"siteClassification\", {\r\n        get: function () { return this._contextInfo.siteClassification; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"siteClientTag\", {\r\n        get: function () { return this._contextInfo.siteClientTag; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"siteColor\", {\r\n        get: function () { return this._contextInfo.siteColor; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"siteId\", {\r\n        get: function () { return this._contextInfo.siteId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"sitePagesEnabled\", {\r\n        get: function () { return this._contextInfo.sitePagesEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"sitePagesFeatureVersion\", {\r\n        get: function () { return this._contextInfo.sitePagesFeatureVersion; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"siteServerRelativeUrl\", {\r\n        get: function () { return this._contextInfo.siteServerRelativeUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"siteSubscriptionId\", {\r\n        get: function () { return this._contextInfo.siteSubscriptionId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"socialBarEnabled\", {\r\n        get: function () { return this._contextInfo.socialBarEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"supportPercentStorePage\", {\r\n        get: function () { return this._contextInfo.supportPercentStorePage; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"supportPoundStorePath\", {\r\n        get: function () { return this._contextInfo.supportPoundStorePath; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"systemUserKey\", {\r\n        get: function () { return this._contextInfo.systemUserKey; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"teamsChannelType\", {\r\n        get: function () { return this._contextInfo.teamsChannelType; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"tenantAppVersion\", {\r\n        get: function () { return this._contextInfo.tenantAppVersion; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"tenantDisplayName\", {\r\n        get: function () { return this._contextInfo.tenantDisplayName; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"themeCacheToken\", {\r\n        get: function () { return this._contextInfo.themeCacheToken; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"themedCssFolderUrl\", {\r\n        get: function () { return this._contextInfo.themedCssFolderUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"themedImageFileNames\", {\r\n        get: function () { return this._contextInfo.themedImageFileNames; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"updateFromDigestPageLoaded\", {\r\n        get: function () { return this._contextInfo.updateFromDigestPageLoaded; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userDisplayName\", {\r\n        get: function () { return this._contextInfo.userDisplayName; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userEmail\", {\r\n        get: function () { return this._contextInfo.userEmail; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userFirstDayOfWeek\", {\r\n        get: function () { return this._contextInfo.userFirstDayOfWeek; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userId\", {\r\n        get: function () { return this._contextInfo.userId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userLoginName\", {\r\n        get: function () { return this._contextInfo.userLoginName; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userPhotoCdnBaseUrl\", {\r\n        get: function () { return this._contextInfo.userPhotoCdnBaseUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userPrincipalName\", {\r\n        get: function () { return this._contextInfo.userPrincipalName; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userTime24\", {\r\n        get: function () { return this._contextInfo.userTime24; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userTimeZoneData\", {\r\n        get: function () { return this._contextInfo.userTimeZoneData; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"userVoiceForFeedbackEnabled\", {\r\n        get: function () { return this._contextInfo.userVoiceForFeedbackEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"viewId\", {\r\n        get: function () { return this._contextInfo.viewId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"viewOnlyExperienceEnabled\", {\r\n        get: function () { return this._contextInfo.viewOnlyExperienceEnabled; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webAbsoluteUrl\", {\r\n        get: function () { return this._contextInfo.webAbsoluteUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webDescription\", {\r\n        get: function () { return this._contextInfo.webDescription; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webDomain\", {\r\n        get: function () { return this._contextInfo.webDomain; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webFirstDayOfWeek\", {\r\n        get: function () { return this._contextInfo.webFirstDayOfWeek; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webId\", {\r\n        get: function () { return this._contextInfo.webId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webLanguage\", {\r\n        get: function () { return this._contextInfo.webLanguage; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webLanguageName\", {\r\n        get: function () { return this._contextInfo.webLanguageName; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webLogoUrl\", {\r\n        get: function () { return this._contextInfo.webLogoUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webPermMasks\", {\r\n        get: function () { return this._contextInfo.webPermMasks; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webServerRelativeUrl\", {\r\n        get: function () { return this._contextInfo.webServerRelativeUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webTemplate\", {\r\n        get: function () { return this._contextInfo.webTemplate; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webTemplateConfiguration\", {\r\n        get: function () { return this._contextInfo.webTemplateConfiguration; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webTime24\", {\r\n        get: function () { return this._contextInfo.webTime24; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webTimeZoneData\", {\r\n        get: function () { return this._contextInfo.webTimeZoneData; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webTitle\", {\r\n        get: function () { return this._contextInfo.webTitle; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"webUIVersion\", {\r\n        get: function () { return this._contextInfo.webUIVersion; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(_ContextInfo, \"window\", {\r\n        get: function () { return typeof (window) == \"undefined\" ? {} : window; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Methods\r\n     */\r\n    // Method to generate a guid\r\n    _ContextInfo.generateGUID = function () {\r\n        // Set the batch id\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    // The page context information from an spfx project\r\n    _ContextInfo._spfxPageContext = null;\r\n    // Method to get the context information for a web\r\n    _ContextInfo.getWeb = function (url) {\r\n        // Create a new base object\r\n        return new utils_1.Base({\r\n            endpoint: \"contextinfo\",\r\n            method: \"POST\",\r\n            url: url\r\n        });\r\n    };\r\n    // Method to set the page context information from an SPFX project\r\n    _ContextInfo.setPageContext = function (spfxPageContext) { exports.ContextInfo._spfxPageContext = spfxPageContext; };\r\n    return _ContextInfo;\r\n}());\r\nexports.ContextInfo = _ContextInfo;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/contextInfo.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/graph.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/graph.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Graph = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Graph\r\n */\r\nexports.Graph = (function (accessToken, version) {\r\n    var graph = new utils_1.Base({ accessToken: accessToken });\r\n    // Default the target information\r\n    graph.targetInfo.endpoint = version || \"v1.0\";\r\n    graph.targetInfo.requestType = utils_1.RequestType.GraphGet;\r\n    // Add the methods\r\n    utils_1.Request.addMethods(graph, { __metadata: { type: \"graph\" } });\r\n    // Return the graph\r\n    return graph;\r\n});\r\n// Method to get the graph token from a classic page\r\nexports.Graph.getAccessToken = function (scope) {\r\n    // Return a promise\r\n    return new Promise(function (resolve, reject) {\r\n        // Set the data \r\n        var data = { \"resource\": \"https://graph.microsoft.com\" };\r\n        scope ? data[\"scope\"] = scope : null;\r\n        // Get the access token\r\n        (new utils_1.Base({\r\n            endpoint: \"SP.OAuth.Token/Acquire\",\r\n            data: data,\r\n            method: \"POST\"\r\n        })).execute(function (token) {\r\n            // Resolve the promise\r\n            resolve(token);\r\n        });\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/graph.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupService.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupService.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GroupService = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Group Service\r\n */\r\nexports.GroupService = (function (targetInfo) {\r\n    var svc = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    svc.targetInfo.defaultToWebFl = true;\r\n    svc.targetInfo.endpoint = \"groupservice\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(svc, { __metadata: { type: \"Microsoft.SharePoint.Portal.GroupService\" } });\r\n    // Return the group service\r\n    return svc;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupService.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupSiteManager.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupSiteManager.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GroupSiteManager = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Group Site Manager\r\n */\r\nexports.GroupSiteManager = (function (targetInfo) {\r\n    var mgr = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    mgr.targetInfo.defaultToWebFl = true;\r\n    mgr.targetInfo.endpoint = \"groupsitemanager\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(mgr, { __metadata: { type: \"Microsoft.SharePoint.Portal.GroupSiteManager\" } });\r\n    // Return the group site manager\r\n    return mgr;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupSiteManager.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSites.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSites.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HubSites = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Hub Sites\r\n */\r\nexports.HubSites = (function (targetInfo) {\r\n    var hubs = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    hubs.targetInfo.defaultToWebFl = true;\r\n    hubs.targetInfo.endpoint = \"hubsites\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(hubs, { __metadata: { type: \"SP.HubSite.Collection\" } });\r\n    // Return the hub sites\r\n    return hubs;\r\n});\r\n// Static method to see if the current user can create hub sites\r\nexports.HubSites.canCreate = (function () {\r\n    // Return the base object\r\n    return new utils_1.Base({\r\n        endpoint: \"SP.HubSites.CanCreate\"\r\n    });\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSites.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSitesUtility.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSitesUtility.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HubSitesUtility = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Hub Sites Utility\r\n */\r\nexports.HubSitesUtility = (function (targetInfo) {\r\n    var utility = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    utility.targetInfo.defaultToWebFl = true;\r\n    utility.targetInfo.endpoint = \"hubsitesutility\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(utility, { __metadata: { type: \"Microsoft.SharePoint.Portal.SPHubSitesUtility\" } });\r\n    // Return the hub sites utility\r\n    return utility;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSitesUtility.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./apps */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/apps.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./contextInfo */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/contextInfo.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./graph */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/graph.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./groupService */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupService.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./groupSiteManager */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/groupSiteManager.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./hubSites */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSites.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./hubSitesUtility */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/hubSitesUtility.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./list */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/list.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./navigation */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/navigation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./peopleManager */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peopleManager.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./peoplePicker */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peoplePicker.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./profileLoader */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/profileLoader.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./search */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/search.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./site */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/site.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./siteManager */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/siteManager.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./socialFeed */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/socialFeed.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./themeManager */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/themeManager.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./userProfile */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/userProfile.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./utility */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/utility.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./web */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/web.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./webTemplateExtensions */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/webTemplateExtensions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./wfInstanceService */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfInstanceService.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./wfSubscriptionService */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfSubscriptionService.js\"), exports);\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/list.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/list.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.List = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\nvar web_1 = __webpack_require__(/*! ./web */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/web.js\");\r\n/**\r\n * List\r\n */\r\nexports.List = (function (listName, targetInfo) {\r\n    var list = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    list.targetInfo.defaultToWebFl = true;\r\n    list.targetInfo.endpoint = \"web/lists/getByTitle('\" + listName.replace(/\\'/g, \"''\") + \"')\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(list, { __metadata: { type: \"SP.List\" } });\r\n    // Return the list\r\n    return list;\r\n});\r\n// Static method to get the list by the entity name.\r\nexports.List.getByEntityName = (function (props) {\r\n    // Query for the list\r\n    var query = web_1.Web(props.url, props.targetInfo)\r\n        // Get the lists\r\n        .Lists()\r\n        // Set the query\r\n        .query({\r\n        Filter: \"EntityTypeName eq '\" + props.name + \"'\",\r\n        Top: 1\r\n    });\r\n    // See if the callback exists\r\n    if (props.callback) {\r\n        // Execute the request asynchronously\r\n        query.execute(function (lists) {\r\n            // Execute the callback method\r\n            props.callback(lists.results ? lists.results[0] : null);\r\n        });\r\n    }\r\n    else {\r\n        // Execute the request synchronously and return it\r\n        var list = query.executeAndWait();\r\n        return list.results ? list.results[0] : list;\r\n    }\r\n});\r\n// Static method to get the list data from the SP.List.getListDataAsStream endpoint\r\nexports.List.getDataAsStream = (function (listFullUrl, parameters) {\r\n    if (parameters === void 0) { parameters = {}; }\r\n    var params = \"?listFullUrl='\" + listFullUrl + \"'\";\r\n    // Parse the parameters\r\n    for (var key in parameters) {\r\n        // Append the parameter\r\n        params += \"&\" + key + \"=\" + parameters[key];\r\n    }\r\n    // Return the base object\r\n    return new utils_1.Base({\r\n        endpoint: \"SP.List.getListDataAsStream\" + params\r\n    });\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/list.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/navigation.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/navigation.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Navigation = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Navigation\r\n */\r\nexports.Navigation = (function (url, targetInfo) {\r\n    var navigation = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    navigation.targetInfo.defaultToWebFl = true;\r\n    navigation.targetInfo.endpoint = \"navigation\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        navigation.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(navigation, { __metadata: { type: \"Microsoft.SharePoint.Navigation.REST.NavigationServiceRest\" } });\r\n    // Return the navigation\r\n    return navigation;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/navigation.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peopleManager.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peopleManager.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PeopleManager = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * People Manager\r\n */\r\nexports.PeopleManager = (function (targetInfo) {\r\n    var peopleManager = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    peopleManager.targetInfo.defaultToWebFl = true;\r\n    peopleManager.targetInfo.endpoint = \"sp.userprofiles.peoplemanager\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(peopleManager, { __metadata: { type: \"SP.UserProfiles.PeopleManager\" } });\r\n    // Return the people manager\r\n    return peopleManager;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peopleManager.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peoplePicker.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peoplePicker.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PeoplePicker = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * People Picker\r\n */\r\nexports.PeoplePicker = (function (targetInfo) {\r\n    var peoplePicker = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    peoplePicker.targetInfo.defaultToWebFl = true;\r\n    peoplePicker.targetInfo.endpoint = \"SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface\";\r\n    peoplePicker.targetInfo.overrideDefaultRequestToHostFl = true;\r\n    // Add the methods\r\n    utils_1.Request.addMethods(peoplePicker, { __metadata: { type: \"peoplepicker\" } });\r\n    // Return the people picker\r\n    return peoplePicker;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/peoplePicker.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/profileLoader.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/profileLoader.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ProfileLoader = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Profile Loader\r\n */\r\nexports.ProfileLoader = (function (targetInfo) {\r\n    var profileLoader = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    profileLoader.targetInfo.defaultToWebFl = true;\r\n    profileLoader.targetInfo.endpoint = \"sp.userprofiles.profileloader.getprofileloader\";\r\n    profileLoader.targetInfo.method = \"POST\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(profileLoader, { __metadata: { type: \"SP.UserProfiles.ProfileLoader\" } });\r\n    // Return the profile loader\r\n    return profileLoader;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/profileLoader.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/search.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/search.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Search = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Search\r\n */\r\nexports.Search = (function (url, targetInfo) {\r\n    var base = new utils_1.Base(targetInfo);\r\n    var search = base;\r\n    // Default the properties\r\n    base.targetInfo.defaultToWebFl = true;\r\n    base.targetInfo.endpoint = \"search\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        base.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(search, { __metadata: { type: \"Microsoft.Office.Server.Search.REST.SearchService\" } });\r\n    /** The search query method */\r\n    search.searchquery = function (settings) {\r\n        // Execute the request\r\n        return search.executeMethod(\"query\", {\r\n            argNames: [\"query\"],\r\n            name: \"query?[[query]]\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        }, exports.Search.getQuery(settings));\r\n    };\r\n    // Return the search\r\n    return search;\r\n});\r\n// Static method to compute the query\r\nexports.Search.getQuery = function (parameters) {\r\n    var query = \"\";\r\n    // Parse the parameters\r\n    for (var key in parameters) {\r\n        // Append the parameter to the query\r\n        query += (query == \"\" ? \"\" : \"&\") + key + \"='\" + parameters[key] + \"'\";\r\n    }\r\n    // Return the query\r\n    return [query];\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/search.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/site.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/site.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Site = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Site\r\n */\r\nexports.Site = (function (url, targetInfo) {\r\n    var site = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    site.targetInfo.defaultToWebFl = true;\r\n    site.targetInfo.endpoint = \"site\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        site.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(site, { __metadata: { type: \"SP.Site\" } });\r\n    // Return the site\r\n    return site;\r\n});\r\n// Static method to see if a site exists\r\nexports.Site.exists = (function (url) {\r\n    // Return the base object\r\n    return new utils_1.Base({\r\n        data: { url: url },\r\n        defaultToWebFl: true,\r\n        endpoint: \"SP.Site.Exists\",\r\n        method: \"POST\"\r\n    });\r\n});\r\n// Static method to get the app context\r\nexports.Site.getAppContext = (function (siteUrl) {\r\n    // Return the base object\r\n    return new utils_1.Base({\r\n        data: { siteUrl: siteUrl },\r\n        defaultToWebFl: true,\r\n        endpoint: \"SP.AppContextSite\",\r\n        method: \"POST\"\r\n    });\r\n});\r\n// Method to get the url by id\r\nexports.Site.getUrlById = (function (id) {\r\n    // Return the base object\r\n    return new utils_1.Base({\r\n        data: { id: id },\r\n        defaultToWebFl: true,\r\n        endpoint: \"SP.Site.GetUrlById\",\r\n        method: \"POST\"\r\n    });\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/site.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/siteManager.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/siteManager.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SiteManager = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Site Manager\r\n */\r\nexports.SiteManager = (function (url, targetInfo) {\r\n    var siteMgr = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    siteMgr.targetInfo.defaultToWebFl = true;\r\n    siteMgr.targetInfo.endpoint = \"SPSiteManager\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        siteMgr.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(siteMgr, { __metadata: { type: \"Microsoft.SharePoint.Portal.SPSiteManager\" } });\r\n    // Return the site\r\n    return siteMgr;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/siteManager.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/socialFeed.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/socialFeed.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SocialFeed = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Social Feed\r\n */\r\nexports.SocialFeed = (function (targetInfo) {\r\n    var base = new utils_1.Base(targetInfo);\r\n    var socialFeed = base;\r\n    // Default the properties\r\n    base.targetInfo.defaultToWebFl = true;\r\n    base.targetInfo.endpoint = \"social.feed\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(socialFeed, { __metadata: { type: \"SP.Social.SocialRestFeedManager\" } });\r\n    // Return the social feed\r\n    return socialFeed;\r\n});\r\n// Method to post to another user's feed\r\nexports.SocialFeed.postToFeed = function (accountName, creationData) {\r\n    var postInfo = { ID: null, creationData: creationData };\r\n    // Set the post metadata\r\n    postInfo[\"__metadata\"] = { type: \"SP.Social.SocialRestPostCreationData\" };\r\n    postInfo.creationData[\"__metadata\"] = { type: \"SP.Social.SocialPostCreationData\" };\r\n    // Execute the request\r\n    return exports.SocialFeed().executeMethod(\"postToMyFeed\", {\r\n        argNames: [\"restCreationData\"],\r\n        name: \"actor(item=@v)/feed?@v='\" + encodeURIComponent(accountName) + \"'\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    }, [postInfo]);\r\n};\r\n// Method to post to the current user's feed\r\nexports.SocialFeed.postToMyFeed = function (creationData) {\r\n    var postInfo = { ID: null, creationData: creationData };\r\n    // Set the post metadata\r\n    postInfo[\"__metadata\"] = { type: \"SP.Social.SocialRestPostCreationData\" };\r\n    postInfo.creationData[\"__metadata\"] = { type: \"SP.Social.SocialPostCreationData\" };\r\n    // Execute the request\r\n    return exports.SocialFeed().executeMethod(\"postToMyFeed\", {\r\n        argNames: [\"restCreationData\"],\r\n        name: \"my/feed/post\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    }, [postInfo]);\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/socialFeed.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/themeManager.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/themeManager.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ThemeManager = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Theme Manager\r\n */\r\nexports.ThemeManager = (function (targetInfo) {\r\n    var mgr = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    mgr.targetInfo.defaultToWebFl = true;\r\n    mgr.targetInfo.endpoint = \"thememanager\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(mgr, { __metadata: { type: \"SP.Utilities.ThemeManager\" } });\r\n    // Return the theme manager\r\n    return mgr;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/themeManager.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/userProfile.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/userProfile.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UserProfile = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * User Profile\r\n */\r\nexports.UserProfile = (function (targetInfo) {\r\n    var userProfile = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    userProfile.targetInfo.defaultToWebFl = true;\r\n    userProfile.targetInfo.endpoint = \"sp.userprofiles.profileloader.getprofileloader/getUserProfile\";\r\n    userProfile.targetInfo.method = \"POST\";\r\n    // Add the methods\r\n    utils_1.Request.addMethods(userProfile, { __metadata: { type: \"SP.UserProfiles.UserProfile\" } });\r\n    // Return the user profile\r\n    return userProfile;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/userProfile.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/utility.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/utility.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Utility = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Utility\r\n */\r\nexports.Utility = (function (url, targetInfo) {\r\n    var base = new utils_1.Base(targetInfo);\r\n    var utility = base;\r\n    // Default the properties\r\n    base.targetInfo.defaultToWebFl = true;\r\n    base.targetInfo.endpoint = \"SP.Utilities.Utility\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        base.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(utility, { __metadata: { type: \"utility\" } });\r\n    // Method to create a wiki page\r\n    utility.createWikiPage = function (listUrl, content) {\r\n        if (content === void 0) { content = \"\"; }\r\n        var parameters = {\r\n            ServerRelativeUrl: listUrl,\r\n            WikiHtmlContent: content\r\n        };\r\n        // Execute the method\r\n        return utility.executeMethod(\"createWikiPage\", {\r\n            argNames: [\"parameters\"],\r\n            name: \"SP.Utilities.Utility.CreateWikiPageInContextWeb\",\r\n            replaceEndpointFl: true,\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        }, [parameters]);\r\n    };\r\n    // Method to send an email\r\n    utility.sendEmail = function (properties) {\r\n        // Parse the email properties\r\n        for (var _i = 0, _a = [\"To\", \"CC\", \"BCC\"]; _i < _a.length; _i++) {\r\n            var propName = _a[_i];\r\n            var propValue = properties[propName];\r\n            // Ensure the value exists\r\n            if (propValue) {\r\n                // See if it's a string\r\n                if (typeof (propValue) === \"string\") {\r\n                    // Add the results property\r\n                    properties[propName] = { 'results': [propValue] };\r\n                }\r\n                // Else, assume it's an array\r\n                else {\r\n                    // Add the results property\r\n                    properties[propName] = { 'results': propValue };\r\n                }\r\n            }\r\n        }\r\n        // Execute the method\r\n        return utility.executeMethod(\"sendEmail\", {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.Utilities.EmailProperties\",\r\n            name: \"SP.Utilities.Utility.sendEmail\",\r\n            replaceEndpointFl: true,\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        }, [properties]);\r\n    };\r\n    // Return the utility\r\n    return utility;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/utility.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/web.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/web.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Web = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\nexports.Web = (function (url, targetInfo) {\r\n    var web = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    web.targetInfo.defaultToWebFl = true;\r\n    web.targetInfo.endpoint = \"web\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        web.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(web, { __metadata: { type: \"SP.Web\" } });\r\n    // Return the web\r\n    return web;\r\n});\r\n// Static method to get a remote web\r\nexports.Web.getRemoteWeb = (function (requestUrl) {\r\n    // Return the remote web information\r\n    return new utils_1.Base({\r\n        data: { requestUrl: requestUrl },\r\n        defaultToWebFl: true,\r\n        endpoint: \"SP.RemoteWeb?$expand=Web\",\r\n        method: \"POST\"\r\n    });\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/web.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/webTemplateExtensions.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/webTemplateExtensions.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebTemplateExtensions = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Web Template Extensions\r\n */\r\nexports.WebTemplateExtensions = (function (url, targetInfo) {\r\n    var webTemplateExtensions = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    webTemplateExtensions.targetInfo.defaultToWebFl = true;\r\n    webTemplateExtensions.targetInfo.endpoint = \"Microsoft.SharePoint.Utilities.WebTemplateExtensions.SiteScriptUtility\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        webTemplateExtensions.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(webTemplateExtensions, { __metadata: { type: \"webTemplateExtensions\" } });\r\n    // Return the web template extension utilities\r\n    return webTemplateExtensions;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/webTemplateExtensions.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfInstanceService.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfInstanceService.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WorkflowInstanceService = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Workflow Instance Service\r\n */\r\nexports.WorkflowInstanceService = (function (url, targetInfo) {\r\n    var wfs = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    wfs.targetInfo.defaultToWebFl = true;\r\n    wfs.targetInfo.endpoint = \"SP.WorkflowServices.WorkflowInstanceService.Current\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        wfs.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(wfs, { __metadata: { type: \"SP.WorkflowServices.WorkflowInstanceService\" } });\r\n    // Return the workflow service\r\n    return wfs;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfInstanceService.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfSubscriptionService.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfSubscriptionService.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WorkflowSubscriptionService = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Workflow Subscription Service\r\n */\r\nexports.WorkflowSubscriptionService = (function (url, targetInfo) {\r\n    var wfs = new utils_1.Base(targetInfo);\r\n    // Default the properties\r\n    wfs.targetInfo.defaultToWebFl = true;\r\n    wfs.targetInfo.endpoint = \"SP.WorkflowServices.WorkflowSubscriptionService.Current\";\r\n    // See if the web url exists\r\n    if (url) {\r\n        // Set the settings\r\n        wfs.targetInfo.url = url;\r\n    }\r\n    // Add the methods\r\n    utils_1.Request.addMethods(wfs, { __metadata: { type: \"SP.WorkflowServices.WorkflowSubscriptionService\" } });\r\n    // Return the workflow service\r\n    return wfs;\r\n});\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/wfSubscriptionService.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/audit.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/audit.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.audit = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Audit\r\n */\r\nexports.audit = {\r\n    // Queries the collection\r\n    query: {\r\n        argNames: [\"oData\"],\r\n        requestType: utils_1.RequestType.OData\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/audit.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/graph.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/graph.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.graph_me = exports.graph_drive = exports.graph = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Graph v1.0\r\n */\r\nexports.graph = {\r\n    properties: [\r\n        \"groups|graph_groups|/[Name]|graph_group\",\r\n        \"users|graph_users|/[Name]|graph_user\"\r\n    ],\r\n    /**\r\n     * me\r\n     **/\r\n    me: {\r\n        requestType: utils_1.RequestType.GraphGet,\r\n        returnType: \"graph_me\"\r\n    }\r\n};\r\n/**\r\n * Graph Drive\r\n */\r\nexports.graph_drive = {\r\n    properties: [\r\n        \"items|graph_drive_items|/[Name]|graph_drive_item\",\r\n        \"root|graph_drive_item\",\r\n        \"special|graph_drive_items\",\r\n    ]\r\n};\r\n/**\r\n * Graph Me\r\n */\r\nexports.graph_me = {\r\n    properties: [\r\n        \"drives|graph_drives|/[Name]|graph_drive\",\r\n        \"messages|graph_messages|/[Name]|graph_message\"\r\n    ],\r\n    /**\r\n     * Calendar\r\n     */\r\n    calendar: {\r\n        requestType: utils_1.RequestType.GraphGet,\r\n        returnType: \"graph_calendar\"\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/graph.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./audit */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/audit.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./graph */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/graph.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./old */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/old.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./peoplePicker */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/peoplePicker.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./propertyValues */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/propertyValues.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./utility */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/utility.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./webTemplateExtensions */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/webTemplateExtensions.js\"), exports);\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/old.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/old.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.webinfos = exports.webs = exports.web = exports.viewfieldcollection = exports.views = exports.view = exports.versions = exports.usercustomactions = exports.usercustomaction = exports.users = exports.user = exports.tenantappcatalog = exports.tenantapps = exports.tenantapp = exports.site = exports.search = exports.roledefinitions = exports.roledefinition = exports.roleassignments = exports.roleassignment = exports.items = exports.listitem = exports.lists = exports.list = exports.limitedwebpartmanager = exports.sitegroups = exports.group = exports.folders = exports.folder = exports.fileversions = exports.fileversion = exports.files = exports.file = exports.fieldlinks = exports.fields = exports.field = exports.features = exports.eventreceivers = exports.eventreceiver = exports.attachmentfiles = void 0;\r\nvar def_1 = __webpack_require__(/*! ../def */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/def.js\");\r\n/**\r\n * This is required for dynamic metadata types\r\n */\r\nexports.attachmentfiles = def_1.Mapper[\"SP.Attachment.Collection\"];\r\nexports.eventreceiver = def_1.Mapper[\"SP.EventReceiverDefinition\"];\r\nexports.eventreceivers = def_1.Mapper[\"SP.EventReceiverDefinition.Collection\"];\r\nexports.features = def_1.Mapper[\"SP.Feature.Collection\"];\r\nexports.field = def_1.Mapper[\"SP.Field\"];\r\nexports.fields = def_1.Mapper[\"SP.Field.Collection\"];\r\nexports.fieldlinks = def_1.Mapper[\"SP.FieldLink.Collection\"];\r\nexports.file = def_1.Mapper[\"SP.File\"];\r\nexports.files = def_1.Mapper[\"SP.File.Collection\"];\r\nexports.fileversion = def_1.Mapper[\"SP.FileVersion\"];\r\nexports.fileversions = def_1.Mapper[\"SP.FileVersion.Collection\"];\r\nexports.folder = def_1.Mapper[\"SP.Folder\"];\r\nexports.folders = def_1.Mapper[\"SP.Folder.Collection\"];\r\nexports.group = def_1.Mapper[\"SP.Group\"];\r\nexports.sitegroups = def_1.Mapper[\"SP.Directory.Group.Collection\"];\r\nexports.limitedwebpartmanager = def_1.Mapper[\"SP.WebParts.LimitedWebPartManager\"];\r\nexports.list = def_1.Mapper[\"SP.List\"];\r\nexports.lists = def_1.Mapper[\"SP.List.Collection\"];\r\nexports.listitem = def_1.Mapper[\"SP.ListItem\"];\r\nexports.items = def_1.Mapper[\"SP.ListItem.Collection\"];\r\nexports.roleassignment = def_1.Mapper[\"SP.RoleAssignment\"];\r\nexports.roleassignments = def_1.Mapper[\"SP.RoleAssignment.Collection\"];\r\nexports.roledefinition = def_1.Mapper[\"SP.RoleDefinition\"];\r\nexports.roledefinitions = def_1.Mapper[\"SP.RoleDefinition.Collection\"];\r\nexports.search = def_1.Mapper[\"Microsoft.Office.Server.Search.REST.SearchService\"];\r\nexports.site = def_1.Mapper[\"SP.Site\"];\r\nexports.tenantapp = def_1.Mapper[\"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata\"];\r\nexports.tenantapps = def_1.Mapper[\"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection\"];\r\nexports.tenantappcatalog = def_1.Mapper[\"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionCorporateCatalogAccessor\"];\r\nexports.user = def_1.Mapper[\"SP.User\"];\r\nexports.users = def_1.Mapper[\"SP.User.Collection\"];\r\nexports.usercustomaction = def_1.Mapper[\"SP.UserCustomAction\"];\r\nexports.usercustomactions = def_1.Mapper[\"SP.UserCustomAction.Collection\"];\r\nexports.versions = def_1.Mapper[\"SP.FileVersion.Collection\"];\r\nexports.view = def_1.Mapper[\"SP.View\"];\r\nexports.views = def_1.Mapper[\"SP.View.Collection\"];\r\nexports.viewfieldcollection = def_1.Mapper[\"SP.ViewFieldCollection\"];\r\nexports.web = def_1.Mapper[\"SP.Web\"];\r\nexports.webs = def_1.Mapper[\"SP.Web.Collection\"];\r\nexports.webinfos = def_1.Mapper[\"SP.WebInformation.Collection\"];\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/old.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/peoplePicker.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/peoplePicker.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.peoplepicker = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * People Picker\r\n */\r\nexports.peoplepicker = {\r\n    clientPeoplePickerResolveUser: {\r\n        argNames: [\"queryParams\"],\r\n        metadataType: \"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\",\r\n        name: \"SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerResolveUser\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    clientPeoplePickerSearchUser: {\r\n        argNames: [\"queryParams\"],\r\n        metadataType: \"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\",\r\n        name: \"SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerSearchUser\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/peoplePicker.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/propertyValues.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/propertyValues.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.propertyvalues = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Property Values\r\n */\r\nexports.propertyvalues = {\r\n    // Queries the collection\r\n    query: {\r\n        argNames: [\"oData\"],\r\n        requestType: utils_1.RequestType.OData\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/propertyValues.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/utility.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/utility.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.utility = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Utility\r\n */\r\nexports.utility = {\r\n    createEmailBodyForInvitation: {\r\n        argNames: [\"pageAddress\"],\r\n        name: \"SP.Utilities.Utility.CreateEmailBodyForInvitation\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    createWikiPage: {\r\n        argNames: [\"parameters\"],\r\n        name: \"SP.Utilities.Utility.CreateWikiPageInContextWeb\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    getAppLicenseDeploymentId: {\r\n        name: \"SP.Utilities.Utility.GetAppLicenseDeploymentId\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.Get\r\n    },\r\n    getAppLicenseInformation: {\r\n        name: \"SP.Utilities.Utility.GetAppLicenseInformation\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.Get\r\n    },\r\n    getCurrentUserEmailAddresses: {\r\n        name: \"SP.Utilities.Utility.GetCurrentUserEmailAddresses\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.Get\r\n    },\r\n    getLocalizedString: {\r\n        argNames: [\"sourceValue\"],\r\n        name: \"SP.Utilities.Utility.GetLocalizedString\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n    },\r\n    getLowerCaseString: {\r\n        argNames: [\"sourceValue\", \"lcid\"],\r\n        name: \"SP.Utilities.Utility.GetLowerCaseString\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    importAppLicense: {\r\n        argNames: [\"url\"],\r\n        name: \"SP.Utilities.Utility.ImportAppLicense\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgs\r\n    },\r\n    isUserLicensedForEntityInContext: {\r\n        argNames: [\"url\"],\r\n        name: \"SP.Utilities.Utility.IsUserLicensedForEntityInContext\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgs\r\n    },\r\n    localizeWebPartGallery: {\r\n        argNames: [\"url\"],\r\n        name: \"SP.Utilities.Utility.LocalizeWebPartGallery\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgs\r\n    },\r\n    markDiscussionAsFeatured: {\r\n        argNames: [\"url\"],\r\n        name: \"SP.Utilities.Utility.MarkDiscussionAsFeatured\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgs\r\n    },\r\n    resolvePrincipal: {\r\n        name: \"SP.Utilities.Utility.ResolvePrincipalInCurrentContext\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.Post\r\n    },\r\n    searchPrincipals: {\r\n        name: \"SP.Utilities.Utility.SearchPrincipalsUsingContextWeb\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.Post\r\n    },\r\n    sendEmail: {\r\n        argNames: [\"properties\"],\r\n        metadataType: \"SP.Utilities.EmailProperties\",\r\n        name: \"SP.Utilities.Utility.sendEmail\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    unmarkDiscussionAsFeatured: {\r\n        argNames: [\"url\"],\r\n        name: \"SP.Utilities.Utility.UnmarkDiscussionAsFeatured\",\r\n        replaceEndpointFl: true,\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/utility.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/webTemplateExtensions.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/webTemplateExtensions.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.webtemplateextensions = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Web Template Extensions\r\n * https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-rest-api\r\n */\r\nexports.webtemplateextensions = {\r\n    applySiteDesign: {\r\n        argNames: [\"siteDesignId\", \"webUrl\"],\r\n        appendEndpointFl: true,\r\n        name: \"ApplySiteDesign\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    addSiteDesignTaskToCurrentWeb: {\r\n        argNames: [\"siteDesignId\"],\r\n        appendEndpointFl: true,\r\n        name: \"AddSiteDesignTaskToCurrentWeb\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    createSiteDesign: {\r\n        argNames: [\"info\"],\r\n        appendEndpointFl: true,\r\n        name: \"CreateSiteDesign\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    createSiteScript: {\r\n        argNames: [\"title\", \"content\"],\r\n        appendEndpointFl: true,\r\n        name: \"CreateSiteScript(@title)?@title='[[title]]\",\r\n        requestType: utils_1.RequestType.PostReplaceWithData\r\n    },\r\n    deleteSiteDesign: {\r\n        argNames: [\"id\"],\r\n        appendEndpointFl: true,\r\n        name: \"DeleteSiteDesign\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    deleteSiteScript: {\r\n        argNames: [\"id\"],\r\n        appendEndpointFl: true,\r\n        name: \"DeleteSiteScript\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    getSiteDesigns: {\r\n        argNames: [],\r\n        appendEndpointFl: true,\r\n        name: \"GetSiteDesigns\",\r\n        requestType: utils_1.RequestType.Post\r\n    },\r\n    getSiteDesignMetadata: {\r\n        argNames: [\"id\"],\r\n        appendEndpointFl: true,\r\n        name: \"GetSiteDesignMetadata\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    getSiteScripts: {\r\n        argNames: [],\r\n        appendEndpointFl: true,\r\n        name: \"GetSiteScripts\",\r\n        requestType: utils_1.RequestType.Post\r\n    },\r\n    getSiteScriptFromWeb: {\r\n        argNames: [\"webUrl\", \"info\"],\r\n        appendEndpointFl: true,\r\n        name: \"GetSiteScriptFromWeb\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    getSiteScriptFromList: {\r\n        argNames: [\"listUrl\"],\r\n        appendEndpointFl: true,\r\n        name: \"GetSiteScriptFromList\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    getSiteScriptMetadata: {\r\n        argNames: [\"id\"],\r\n        appendEndpointFl: true,\r\n        name: \"GetSiteScriptMetadata\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    getSiteDesignRights: {\r\n        argNames: [\"id\"],\r\n        appendEndpointFl: true,\r\n        name: \"GetSiteDesignRights\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    grantSiteDesignRights: {\r\n        argNames: [\"id\", \"principalNames\", \"grantedRights\"],\r\n        appendEndpointFl: true,\r\n        name: \"GrantSiteDesignRights\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    revokeSiteDesignRights: {\r\n        argNames: [\"id\", \"principalNames\"],\r\n        appendEndpointFl: true,\r\n        name: \"RevokeSiteDesignRights\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    updateSiteDesign: {\r\n        argNames: [\"updateInfo\"],\r\n        appendEndpointFl: true,\r\n        name: \"UpdateSiteDesign\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    },\r\n    updateSiteScript: {\r\n        argNames: [\"updateInfo\"],\r\n        appendEndpointFl: true,\r\n        name: \"UpdateSiteScript\",\r\n        requestType: utils_1.RequestType.PostWithArgsInBody\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/webTemplateExtensions.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/def.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/def.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Mapper = void 0;\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\nexports.Mapper = {\r\n    \"MS.FileServices.File\": {\r\n        copyTo: {\r\n            argNames: [\"target\", \"overwrite\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        download: {},\r\n        moveTo: {\r\n            argNames: [\"target\", \"overwrite\"],\r\n        },\r\n        upload: {\r\n            argNames: [\"stream\"],\r\n        },\r\n    },\r\n    \"MS.FileServices.FileSystemItem.Collection\": {\r\n        add: {\r\n            argNames: [\"name\", \"overwrite\", \"content\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"MS.FileServices.Folder\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        moveTo: {\r\n            argNames: [\"target\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.AppServices.AppCollection\": {\r\n        getAppsFromStore: {\r\n            argNames: [\"addInType\", \"queryString\"],\r\n        },\r\n        getByType: {\r\n            argNames: [\"type\"],\r\n        },\r\n    },\r\n    \"Microsoft.Office.Server.ContentCenter.SPMachineLearningModel\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Office.Server.ContentCenter.SPMachineLearningModel.Collection\": {\r\n        getByTitle: {\r\n            argNames: [\"title\"],\r\n        },\r\n        getByUniqueId: {\r\n            argNames: [\"uniqueId\"],\r\n        },\r\n        query: { argNames: [\"oData\"] },\r\n    },\r\n    \"Microsoft.Office.Server.ContentCenter.SPMachineLearningPublication\": {\r\n        delete: {},\r\n        update: {},\r\n    },\r\n    \"Microsoft.Office.Server.ContentCenter.SPMachineLearningPublication.Collection\": {\r\n        batchDelete: {\r\n            argNames: [\"publications\"],\r\n        },\r\n        getByModelUniqueId: {\r\n            argNames: [\"modelUniqueId\"],\r\n        },\r\n        getByUniqueId: {\r\n            argNames: [\"uniqueId\"],\r\n        },\r\n        query: { argNames: [\"oData\"] },\r\n    },\r\n    \"Microsoft.Office.Server.ContentCenter.SPMachineLearningSample\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Office.Server.ContentCenter.SPMachineLearningSample.Collection\": {\r\n        getByModelId: {\r\n            argNames: [\"modelID\"],\r\n        },\r\n        getByTitle: {\r\n            argNames: [\"title\"],\r\n        },\r\n        getByUniqueId: {\r\n            argNames: [\"uniqueId\"],\r\n        },\r\n        query: { argNames: [\"oData\"] },\r\n    },\r\n    \"Microsoft.Office.Server.Search.REST.SearchService\": {\r\n        autocompletions: {\r\n            argNames: [\"querytext\", \"sources\", \"numberOfCompletions\", \"cursorPosition\"],\r\n        },\r\n        export: {\r\n            argNames: [\"userName\", \"startTime\"],\r\n        },\r\n        exportmanualsuggestions: {},\r\n        exportpopulartenantqueries: {\r\n            argNames: [\"count\"]\r\n        },\r\n        postquery: {\r\n            argNames: [\"request\"],\r\n            metadataType: \"Microsoft.Office.Server.Search.REST.SearchRequest\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        query: {\r\n            argNames: [\"querytext\", \"queryTemplate\", \"enableInterleaving\", \"sourceId\", \"rankingModelId\", \"startRow\", \"rowLimit\", \"rowsPerPage\", \"selectProperties\", \"culture\", \"refinementFilters\", \"refiners\", \"hiddenConstraints\", \"sortList\", \"enableStemming\", \"trimDuplicates\", \"timeout\", \"enableNicknames\", \"enablePhonetic\", \"enableFQL\", \"hitHighlightedProperties\", \"propertiesToGenerateAcronyms\", \"bypassResultTypes\", \"processBestBets\", \"clientType\", \"personalizationData\", \"resultsUrl\", \"queryTag\", \"trimDuplicatesIncludeId\", \"totalRowsExactMinimum\", \"impressionId\", \"properties\", \"enableQueryRules\", \"summaryLength\", \"maxSnippetLength\", \"desiredSnippetLength\", \"uiLanguage\", \"blockDedupeMode\", \"generateBlockRankLog\", \"enableSorting\", \"collapseSpecification\", \"processPersonalFavorites\", \"enableOrderingHitHighlightedProperty\", \"hitHighlightedMultivaluePropertyLimit\", \"queryTemplatePropertiesUrl\", \"timeZoneId\", \"useOLSQuery\", \"OLSQuerySession\"],\r\n        },\r\n        recordPageClick: {\r\n            argNames: [\"pageInfo\", \"clickType\", \"blockType\", \"clickedResultId\", \"subResultIndex\", \"immediacySourceId\", \"immediacyQueryString\", \"immediacyTitle\", \"immediacyUrl\"],\r\n        },\r\n        resultspageaddress: {},\r\n        searchcenterurl: {},\r\n        searchquery: {\r\n            argNames: [\"request\"],\r\n        },\r\n        suggest: {\r\n            argNames: [\"querytext\", \"iNumberOfQuerySuggestions\", \"iNumberOfResultSuggestions\", \"iNumberOfPopularResultSuggestions\", \"fPreQuerySuggestions\", \"fHitHighlighting\", \"fCapitalizeFirstLetters\", \"culture\", \"enableStemming\", \"showPeopleNameSuggestions\", \"enableQueryRules\", \"fPrefixMatchAllTerms\", \"sourceId\", \"clientType\", \"useOLSQuery\", \"OLSQuerySession\", \"zeroTermSuggestions\"],\r\n        },\r\n    },\r\n    \"Microsoft.Office.Server.Search.REST.SearchSetting\": {\r\n        getpromotedresultqueryrules: {\r\n            argNames: [\"siteCollectionLevel\", \"offset\", \"numberOfRules\"],\r\n        },\r\n        getqueryconfiguration: {\r\n            argNames: [\"callLocalSearchFarmsOnly\", \"skipGroupObjectIdLookup\"],\r\n        },\r\n        getxssearchpolicy: {},\r\n        pingadminendpoint: {},\r\n        setxssearchpolicy: {\r\n            argNames: [\"policy\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.AppLauncher.AppLauncher\": {\r\n        getData: {\r\n            argNames: [\"suiteVersion\", \"isMobileRequest\", \"locale\", \"onPremVer\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.AllowedDataLocation\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.AllowedDataLocation.Collection\": {\r\n        getByLocation: {\r\n            argNames: [\"location\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmGroupMoveJob.Collection\": {\r\n        getByMoveId: {\r\n            argNames: [\"moveId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmSiteMoveJob\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmSiteMoveJob.Collection\": {\r\n        getByMoveId: {\r\n            argNames: [\"moveId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmUserMoveJob\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmUserMoveJob.Collection\": {\r\n        getByMoveId: {\r\n            argNames: [\"moveId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.CrossGeoTenantProperty\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.CrossGeoTenantProperty.Collection\": {\r\n        getByPropertyNameAndGeoLocation: {\r\n            argNames: [\"propertyName\", \"geo\"],\r\n        },\r\n        getChanges: {\r\n            argNames: [\"startTimeInUtc\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.GeoAdministrator\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.GeoAdministrator.Collection\": {\r\n        create: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByLoginName: {\r\n            argNames: [\"loginName\"],\r\n        },\r\n        getByLoginNameAndType: {\r\n            argNames: [\"loginName\", \"memberType\"],\r\n        },\r\n        getByObjectId: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.GeoExperience\": {\r\n        upgradeAllInstancesToSPOMode: {},\r\n        upgradeToSPOMode: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.GeoTenantInstanceInformation.Collection\": {\r\n        getByGeoLocation: {\r\n            argNames: [\"geoLocation\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.GroupMoveJob\": {\r\n        cancel: {},\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.GroupMoveJob.Collection\": {\r\n        getByGroupName: {\r\n            argNames: [\"groupname\"],\r\n        },\r\n        getMoveReport: {\r\n            argNames: [\"moveState\", \"moveDirection\", \"limit\", \"startTime\", \"endTime\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.MultiGeoServicesBeta\": {\r\n        crossGeoCredentials: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n        dBSchemaCompatibilityCheck: {},\r\n        geoMoveCompatibilityChecks: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        userPersonalSiteId: {\r\n            argNames: [\"userPrincipalName\"],\r\n        },\r\n        userPersonalSiteLocation: {\r\n            argNames: [\"userPrincipalName\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.SiteMoveJob\": {\r\n        cancel: {},\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.SiteMoveJob.Collection\": {\r\n        getByUrl: {\r\n            argNames: [\"url\"],\r\n        },\r\n        getMoveReport: {\r\n            argNames: [\"moveState\", \"moveDirection\", \"limit\", \"startTime\", \"endTime\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.StorageQuota\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.StorageQuota.Collection\": {\r\n        getByLocation: {\r\n            argNames: [\"geoLocation\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.TaxonomyReplicationParameters\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.UnifiedGroup.Collection\": {\r\n        getByAlias: {\r\n            argNames: [\"alias\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.UserMoveJob\": {\r\n        cancel: {},\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.MultiGeo.Service.UserMoveJob.Collection\": {\r\n        getByDirection: {\r\n            argNames: [\"direction\"],\r\n        },\r\n        getByMoveId: {\r\n            argNames: [\"odbMoveId\"],\r\n        },\r\n        getByUpn: {\r\n            argNames: [\"upn\"],\r\n        },\r\n        getByValidPdl: {\r\n            argNames: [\"validPdl\"],\r\n        },\r\n        getMoveReport: {\r\n            argNames: [\"moveState\", \"moveDirection\", \"limit\", \"startTime\", \"endTime\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.Onboarding.RestService.Service.SiteRenameJob.Collection\": {\r\n        getBySiteUrl: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        getJobsByParentId: {\r\n            argNames: [\"parentId\"],\r\n        },\r\n        getJobsByParentIdAndState: {\r\n            argNames: [\"parentId\", \"state\"],\r\n        },\r\n        getJobsBySiteUrl: {\r\n            argNames: [\"url\"],\r\n        },\r\n        getSiteRenameReport: {\r\n            argNames: [\"state\"],\r\n        },\r\n        query: { argNames: [\"oData\"] },\r\n    },\r\n    \"Microsoft.Online.SharePoint.Onboarding.RestService.TenantRename.TenantRenameJob.Collection\": {\r\n        getJobById: {\r\n            argNames: [\"jobId\", \"loadProgressState\"],\r\n        },\r\n        getJobsByState: {\r\n            argNames: [\"state\"],\r\n        },\r\n        getState: {},\r\n        query: { argNames: [\"oData\"] },\r\n    },\r\n    \"Microsoft.Online.SharePoint.PointPublishing.PointPublishingAdmin\": {\r\n        createTopicMagazine: {\r\n            argNames: [\"magazineName\"],\r\n        },\r\n        deleteTopicMagazine: {\r\n            argNames: [\"magazineId\"],\r\n        },\r\n        provisionPointPublishingAsync: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.SPLogger.LogExport\": {\r\n        getFiles: {\r\n            argNames: [\"partitionId\", \"logType\"],\r\n        },\r\n        getLogTypes: {},\r\n        getPartitions: {\r\n            argNames: [\"logType\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdmin.MiddleTier.DDIAdapter\": {\r\n        getList: {\r\n            argNames: [\"schema\", \"workflow\", \"stream\"],\r\n        },\r\n        getObject: {\r\n            argNames: [\"schema\", \"workflow\", \"stream\"],\r\n        },\r\n        multiObjectExecute: {\r\n            argNames: [\"schema\", \"workflow\", \"stream\"],\r\n        },\r\n        newObject: {\r\n            argNames: [\"schema\", \"workflow\", \"stream\"],\r\n        },\r\n        removeObjects: {\r\n            argNames: [\"schema\", \"workflow\", \"stream\"],\r\n        },\r\n        setObject: {\r\n            argNames: [\"schema\", \"workflow\", \"stream\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.HubSiteProperties\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipal\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionGrant\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionGrant.Collection\": {\r\n        getByObjectId: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionRequest\": {\r\n        approve: {},\r\n        deny: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionRequest.Collection\": {\r\n        approve: {\r\n            argNames: [\"resource\", \"scope\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Office365CommsMessagesServiceProxy\": {\r\n        messageCenterMessages: {\r\n            argNames: [\"messagesFieldsData\"],\r\n        },\r\n        serviceHealthMessages: {\r\n            argNames: [\"messagesFieldsData\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.SPOGroup\": {\r\n        getGroupInfo: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n        updateGroupProperties: {\r\n            argNames: [\"groupId\", \"displayName\"],\r\n        },\r\n        updateGroupPropertiesBySiteId: {\r\n            argNames: [\"groupId\", \"siteId\", \"displayName\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.SiteCollectionManagementService\": {\r\n        exportCSVFile: {},\r\n        getSiteDescription: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n        office365ProvidedSharepointSiteActivityDataReady: {},\r\n        resetTimestampUpdateOffice365ProvidedSharepointSiteActivityData: {},\r\n        updateOffice365ProvidedSharepointSiteActivityData: {\r\n            argNames: [\"oauthToken\"],\r\n        },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\": {\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties.Collection\": {\r\n        getById: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n        getGroupSiteRelationship: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n        getLockStateById: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n        getSiteUserGroups: {\r\n            argNames: [\"siteId\", \"userGroupIds\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Tenant\": {\r\n        checkTenantIntuneLicense: {},\r\n        checkTenantLicenses: {\r\n            argNames: [\"licenses\"],\r\n        },\r\n        connectSiteToHubSiteById: {\r\n            argNames: [\"siteUrl\", \"hubSiteId\"],\r\n        },\r\n        createSite: {\r\n            argNames: [\"siteCreationProperties\"],\r\n        },\r\n        getIdleSessionSignOutForUnmanagedDevices: {},\r\n        getSPOAllWebTemplates: {\r\n            argNames: [\"cultureName\", \"compatibilityLevel\"],\r\n        },\r\n        getSPOTenantAllWebTemplates: {},\r\n        getSPOTenantWebTemplates: {\r\n            argNames: [\"localeId\", \"compatibilityLevel\"],\r\n        },\r\n        getSitePropertiesByUrl: {\r\n            argNames: [\"url\", \"includeDetail\"],\r\n        },\r\n        getSitePropertiesFromSharePointByFilters: {\r\n            argNames: [\"speFilter\"],\r\n        },\r\n        getSiteSecondaryAdministrators: {\r\n            argNames: [\"secondaryAdministratorsFieldsData\"],\r\n        },\r\n        grantHubSiteRightsById: {\r\n            argNames: [\"hubSiteId\", \"principals\", \"grantedRights\"],\r\n        },\r\n        hasValidEducationLicense: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        registerHubSite: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        registerHubSiteWithCreationInformation: {\r\n            argNames: [\"siteUrl\", \"creationInformation\"],\r\n        },\r\n        removeDeletedSite: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        removeDeletedSitePreferId: {\r\n            argNames: [\"siteUrl\", \"siteId\"],\r\n        },\r\n        removeSite: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        restoreDeletedSite: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        restoreDeletedSitePreferId: {\r\n            argNames: [\"siteUrl\", \"siteId\"],\r\n        },\r\n        revokeHubSiteRightsById: {\r\n            argNames: [\"hubSiteId\", \"principals\"],\r\n        },\r\n        setIdleSessionSignOutForUnmanagedDevices: {\r\n            argNames: [\"enabled\", \"warnAfter\", \"signOutAfter\"],\r\n        },\r\n        setSiteSecondaryAdministrators: {\r\n            argNames: [\"secondaryAdministratorsFieldsData\"],\r\n        },\r\n        swapSite: {\r\n            argNames: [\"sourceUrl\", \"targetUrl\", \"archiveUrl\"],\r\n        },\r\n        swapSiteWithSmartGestureOption: {\r\n            argNames: [\"sourceUrl\", \"targetUrl\", \"archiveUrl\", \"includeSmartGestures\"],\r\n        },\r\n        unregisterHubSite: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.TenantAdminSettingsService\": {\r\n        getTenantSharingStatus: {},\r\n        update: {},\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantManagement.ExternalUser.Collection\": {\r\n        getById: {\r\n            argNames: [\"uniqueId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantManagement.Office365Tenant\": {\r\n        addPublicCdnOrigin: {\r\n            argNames: [\"origin\"],\r\n        },\r\n        addSdnProvider: {\r\n            argNames: [\"identifier\", \"license\"],\r\n        },\r\n        addTenantCdnOrigin: {\r\n            argNames: [\"cdnType\", \"originUrl\"],\r\n        },\r\n        addTenantTheme: {\r\n            argNames: [\"name\", \"themeJson\"],\r\n        },\r\n        addToOrgAssetsLibAndCdn: {\r\n            argNames: [\"cdnType\", \"libUrl\", \"thumbnailUrl\", \"orgAssetType\"],\r\n        },\r\n        createTenantCdnDefaultOrigins: {\r\n            argNames: [\"cdnType\"],\r\n        },\r\n        deleteImportProfilePropertiesJob: {\r\n            argNames: [\"jobId\"],\r\n        },\r\n        deleteTenantTheme: {\r\n            argNames: [\"name\"],\r\n        },\r\n        disableSharingForNonOwnersOfSite: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        getAllTenantThemes: {},\r\n        getExternalUsers: {\r\n            argNames: [\"position\", \"pageSize\", \"filter\", \"sortOrder\"],\r\n        },\r\n        getExternalUsersForSite: {\r\n            argNames: [\"siteUrl\", \"position\", \"pageSize\", \"filter\", \"sortOrder\"],\r\n        },\r\n        getExternalUsersWithSortBy: {\r\n            argNames: [\"position\", \"pageSize\", \"filter\", \"sortPropertyName\", \"sortOrder\"],\r\n        },\r\n        getHideDefaultThemes: {},\r\n        getIdleSessionSignOutForUnmanagedDevices: {},\r\n        getImportProfilePropertyJob: {\r\n            argNames: [\"jobId\"],\r\n        },\r\n        getImportProfilePropertyJobs: {},\r\n        getTenantCdnEnabled: {\r\n            argNames: [\"cdnType\"],\r\n        },\r\n        getTenantCdnOrigins: {\r\n            argNames: [\"cdnType\"],\r\n        },\r\n        getTenantCdnPolicies: {\r\n            argNames: [\"cdnType\"],\r\n        },\r\n        getTenantTheme: {\r\n            argNames: [\"name\"],\r\n        },\r\n        isSharingDisabledForNonOwnersOfSite: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n        queueImportProfileProperties: {\r\n            argNames: [\"idType\", \"sourceDataIdProperty\", \"propertyMap\", \"sourceUri\"],\r\n        },\r\n        removeExternalUsers: {\r\n            argNames: [\"uniqueIds\"],\r\n        },\r\n        removeFromOrgAssets: {\r\n            argNames: [\"libUrl\", \"listId\"],\r\n        },\r\n        removeFromOrgAssetsAndCdn: {\r\n            argNames: [\"remove\", \"cdnType\", \"libUrl\"],\r\n        },\r\n        removePublicCdnOrigin: {\r\n            argNames: [\"originId\"],\r\n        },\r\n        removeSdnProvider: {},\r\n        removeTenantCdnOrigin: {\r\n            argNames: [\"cdnType\", \"originUrl\"],\r\n        },\r\n        revokeAllUserSessions: {\r\n            argNames: [\"userName\"],\r\n        },\r\n        revokeAllUserSessionsByPuid: {\r\n            argNames: [\"puidList\"],\r\n        },\r\n        setHideDefaultThemes: {\r\n            argNames: [\"hideDefaultThemes\"],\r\n        },\r\n        setIdleSessionSignOutForUnmanagedDevices: {\r\n            argNames: [\"enabled\", \"warnAfter\", \"signOutAfter\"],\r\n        },\r\n        setOrgAssetsLib: {\r\n            argNames: [\"libUrl\", \"thumbnailUrl\", \"orgAssetType\"],\r\n        },\r\n        setTenantCdnEnabled: {\r\n            argNames: [\"cdnType\", \"isEnabled\"],\r\n        },\r\n        setTenantCdnPolicy: {\r\n            argNames: [\"cdnType\", \"policy\", \"policyValue\"],\r\n        },\r\n        updateTenantTheme: {\r\n            argNames: [\"name\", \"themeJson\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Administration.FeatureDefinition.Collection\": {\r\n        getFeatureDefinition: {\r\n            argNames: [\"featureDisplayName\", \"compatibilityLevel\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.SharePoint.Administration.SPAnalyticsUsageService\": {\r\n        logevent: {\r\n            argNames: [\"usageEntry\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Administration.SPAppStateQueryJobDefinition\": {\r\n        performFastRevokeWithClientIds: {},\r\n    },\r\n    \"Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog\": {\r\n        getCrawledUrls: {\r\n            argNames: [\"getCountOnly\", \"maxRows\", \"queryString\", \"isLike\", \"contentSourceID\", \"errorLevel\", \"errorID\", \"startDateTime\", \"endDateTime\"],\r\n        },\r\n        getUnsuccesfulCrawledUrls: {\r\n            argNames: [\"displayUrl\", \"startDateTime\", \"endDateTime\"]\r\n        }\r\n    },\r\n    \"Microsoft.SharePoint.Client.Search.Analytics.SignalStore\": {\r\n        signals: {\r\n            argNames: [\"signals\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Client.Search.Query.RankingLabeling\": {\r\n        addJudgment: {\r\n            argNames: [\"userQuery\", \"url\", \"labelId\"],\r\n        },\r\n        getJudgementsForQuery: {\r\n            argNames: [\"query\"],\r\n        },\r\n        normalizeResultUrl: {\r\n            argNames: [\"url\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection\": {\r\n        add: {\r\n            argNames: [\"matchType\", \"matchValue\", \"boost\"],\r\n        },\r\n        clear: {},\r\n    },\r\n    \"Microsoft.SharePoint.Client.Search.Query.SortCollection\": {\r\n        add: {\r\n            argNames: [\"strProperty\", \"direction\"],\r\n        },\r\n        clear: {},\r\n    },\r\n    \"Microsoft.SharePoint.Client.Search.Query.StringCollection\": {\r\n        add: {\r\n            argNames: [\"property\"],\r\n        },\r\n        clear: {},\r\n    },\r\n    \"Microsoft.SharePoint.ClientSideComponent.HostedApp\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        updateWebPartData: {\r\n            argNames: [\"webPartDataAsJson\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.ClientSideComponent.HostedAppsManager\": {\r\n        add: {\r\n            argNames: [\"webPartDataAsJson\", \"hostType\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Comments.comment\": {\r\n        like: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        unlike: {},\r\n    },\r\n    \"Microsoft.SharePoint.Comments.comment.Collection\": {\r\n        deleteAll: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.SharePoint.Internal.ActivityLogger\": {\r\n        feedbackDirect: {\r\n            argNames: [\"Operation\", \"ListId\", \"ListItemUniqueId\", \"AffectedResourceUrl\", \"ItemType\", \"json\"],\r\n        },\r\n        feedbackIndirect: {\r\n            argNames: [\"Operation\", \"ListId\", \"ListItemUniqueId\", \"AffectedResourceUrl\", \"ItemType\", \"json\"],\r\n        },\r\n        logActivity: {\r\n            argNames: [\"Operation\", \"ListId\", \"ListItemUniqueId\", \"AffectedResourceUrl\", \"ItemType\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata\": {\r\n        deploy: {\r\n            argNames: [\"skipFeatureDeployment\"],\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        install: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        remove: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        retract: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        uninstall: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        upgrade: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionAppCatalogAllowedItem.Collection\": {\r\n        add: {\r\n            argNames: [\"absolutePath\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        remove: {\r\n            argNames: [\"absolutePath\"],\r\n        },\r\n        removeById: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionCorporateCatalogAccessor\": {\r\n        properties: [\r\n            \"AvailableApps|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection|/getById('[Id]')|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata\"\r\n        ],\r\n        add: {\r\n            argNames: [\"Url\", \"Overwrite\", \"Content\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TenantCorporateCatalogAccessor\": {\r\n        properties: [\r\n            \"AvailableApps|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection|/getById('[Id]')|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata\"\r\n        ],\r\n        add: {\r\n            argNames: [\"Url\", \"Overwrite\", \"Content\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        syncSolutionToTeams: {\r\n            argNames: [\"id\"]\r\n        },\r\n        upload: {\r\n            argNames: [\"Content\", \"Overwrite\", \"Url\"],\r\n        }\r\n    },\r\n    \"Microsoft.Online.SharePoint.MigrationCenter.Service.Device\": {\r\n        delete: { requestType: utils_1.RequestType.Delete },\r\n        update: {}\r\n    },\r\n    \"Microsoft.Online.SharePoint.MigrationCenter.Service.Device.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"]\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCenterStorage\": {\r\n        create: {\r\n            argNames: [\"config\"]\r\n        },\r\n        delete: { requestType: utils_1.RequestType.Delete },\r\n        update: {}\r\n    },\r\n    \"Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCredential\": {\r\n        delete: { requestType: utils_1.RequestType.Delete },\r\n        update: {}\r\n    },\r\n    \"Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCredential.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"]\r\n        },\r\n        getCredentials: {\r\n            argNames: [\"AccountName\", \"Type\"]\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData }\r\n    },\r\n    \"Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationTask\": {\r\n        delete: { requestType: utils_1.RequestType.Delete },\r\n        update: {}\r\n    },\r\n    \"Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationTask.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"]\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData }\r\n    },\r\n    \"Microsoft.Online.SharePoint.TenantAdministration.Internal.SPO3rdPartyAADPermissionGrant.Collection\": {\r\n        add: {\r\n            argNames: [\"servicePrincipalId\", \"resource\", \"scope\"]\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        remove: {\r\n            argNames: [\"servicePrincipalId\", \"resource\", \"scope\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        }\r\n    },\r\n    \"Microsoft.SharePoint.Navigation.REST.NavigationServiceRest\": {\r\n        properties: [\r\n            \"MenuState|menustate|([Name])|menunode\"\r\n        ],\r\n        getPublishingNavigationProviderType: {\r\n            argNames: [\"mapProviderName\"],\r\n        },\r\n        menuNodeKey: {\r\n            argNames: [\"currentUrl\", \"mapProviderName\"],\r\n        },\r\n        menuState: {\r\n            argNames: [\"menuNodeKey\", \"mapProviderName\", \"depth\", \"customProperties\"],\r\n        },\r\n        saveMenuState: {\r\n            argNames: [\"menuState\", \"mapProviderName\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.OrgNewsSite.OrgNewsSiteApi\": {\r\n        details: {},\r\n    },\r\n    \"Microsoft.SharePoint.Portal.GroupService\": {\r\n        getGroupImage: {\r\n            argNames: [\"id\", \"hash\", \"color\"],\r\n        },\r\n        setGroupImage: {\r\n            argNames: [\"imageStream\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        syncGroupProperties: {\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Portal.GroupSiteManager\": {\r\n        canUserCreateGroup: {},\r\n        create: {\r\n            argNames: [\"groupId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        createGroup: {\r\n            argNames: [\"displayName\", \"alias\", \"isPublic\", \"ownerPrincipalNames\", \"description\", \"creationOptions\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        createGroupEx: {\r\n            argNames: [\"displayName\", \"alias\", \"isPublic\", \"optionalParams\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        createGroupForSite: {\r\n            argNames: [\"displayName\", \"alias\", \"isPublic\", \"optionalParams\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        delete: {\r\n            argNames: [\"siteUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        ensureTeamForGroup: {},\r\n        getGroupCreationContext: {},\r\n        getGroupSiteConversionData: {},\r\n        getSiteStatus: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n        getValidSiteUrlFromAlias: {\r\n            argNames: [\"alias\", \"managedPath\", \"isTeamSite\"],\r\n        },\r\n        hideTeamifyPrompt: {\r\n            argNames: [\"siteUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        isTeamifyPromptHidden: {\r\n            argNames: [\"siteUrl\"]\r\n        },\r\n        notebook: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Portal.SPHubSitesUtility\": {\r\n        getHubSites: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Portal.SPSiteManager\": {\r\n        archiveTeamChannelSite: {\r\n            argNames: [\"siteId\", \"archive\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        canCreateHubJoinedSite: {\r\n            argNames: [\"hubSiteId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        create: {\r\n            argNames: [\"request\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        delete: {\r\n            argNames: [\"siteId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getIBSegmentLabels: {\r\n            argNames: [\"IBSegments\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQS\r\n        },\r\n        getTeamChannelSiteOwner: {\r\n            argNames: [\"siteId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQS\r\n        },\r\n        restoreTeamsChannelSite: {\r\n            argNames: [\"siteId\", \"relatedGroupId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        setTeamChannelSiteOwner: {\r\n            argNames: [\"siteId\", \"logonName\", \"secondaryLogonName\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        siteUrl: {\r\n            argNames: [\"siteId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQS\r\n        },\r\n        status: {\r\n            argNames: [\"url\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQS\r\n        },\r\n        updateWorkflow2013Endpoint: {\r\n            argNames: [\"workflowServiceAddress\", \"workflowHostname\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Portal.SharePointHomeServiceContextBuilder\": {\r\n        context: {},\r\n    },\r\n    \"Microsoft.SharePoint.Portal.SiteIconManager\": {\r\n        getSiteLogo: {\r\n            argNames: [\"siteUrl\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Portal.SiteLinkingManager\": {\r\n        getSiteLinks: {},\r\n        linkGroup: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n        unlinkGroup: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.TenantCdn.TenantCdnApi\": {\r\n        getCdnUrls: {\r\n            argNames: [\"items\"],\r\n        },\r\n        isFolderUrlsInTenantCdn: {\r\n            argNames: [\"urls\", \"cdnType\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Webhooks.Subscription\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n    },\r\n    \"Microsoft.SharePoint.Webhooks.Subscription.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        remove: {\r\n            argNames: [\"subscriptionId\"],\r\n        },\r\n    },\r\n    \"OBA.Server.ServerWrapper.Diagnostics\": {\r\n        status: {},\r\n    },\r\n    \"OBA.Server.ServerWrapper.Reporting\": {\r\n        publishReport: {\r\n            argNames: [\"odataPostBodyStm\"],\r\n        },\r\n    },\r\n    \"OBA.Server.ServerWrapper.Taskflow\": {\r\n        processTask: {\r\n            argNames: [\"requestBodyStream\"],\r\n        },\r\n    },\r\n    \"PS.BaseCalendarException\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.Calendar\": {\r\n        copyTo: {\r\n            argNames: [\"name\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.Calendar.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.CalendarException\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.CalendarException.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.CustomField\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.CustomField.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByAppAlternateId: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.DraftAssignment.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.DraftProjectResource.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        addEnterpriseResourceById: {\r\n            argNames: [\"resourceId\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.DraftTask.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.DraftTaskLink.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.EngagementComment.Collection\": {\r\n        add: {\r\n            argNames: [\"comment\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.EnterpriseProjectType\": {\r\n        addDepartment: {\r\n            argNames: [\"departmentValueGuid\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        removeDepartment: {\r\n            argNames: [\"departmentValueGuid\"],\r\n        },\r\n        updateCreatePDP: {\r\n            argNames: [\"pdp\"],\r\n        },\r\n    },\r\n    \"PS.EnterpriseProjectType.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.EnterpriseResource\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        forceCheckIn: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        updateClaimsAccount: {\r\n            argNames: [\"newClaimsAccount\"],\r\n        },\r\n    },\r\n    \"PS.EnterpriseResource.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.EnterpriseResourceCostRate\": {\r\n        rESTfulUpdate: {},\r\n        restfulDelete: {},\r\n    },\r\n    \"PS.EnterpriseResourceCostRate.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByDateUrl: {\r\n            argNames: [\"effectiveDate\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.EntityLink\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.EntityLink.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.Event.Collection\": {\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        getByInt: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.EventHandler\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.EventHandler.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.LookupCost\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.LookupDate\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.LookupDuration\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.LookupEntry\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.LookupEntry.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByAppAlternateId: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.LookupNumber\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.LookupTable\": {\r\n        addMask: {\r\n            argNames: [\"mask\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        updateMask: {\r\n            argNames: [\"mask\", \"level\"],\r\n        },\r\n    },\r\n    \"PS.LookupTable.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByAppAlternateId: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.LookupText\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.Phase\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.Phase.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.PlanAssignment\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.PlanAssignment.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.PlanAssignmentInterval.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        getByStart: {\r\n            argNames: [\"start\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.Project\": {\r\n        getResourcePlanByUrl: {\r\n            argNames: [\"start\", \"end\", \"scale\"],\r\n        },\r\n        leaveProjectStage: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        readyToLeaveProjectStage: {},\r\n        updateIdeaListItemStatus: {\r\n            argNames: [\"status\"],\r\n        },\r\n    },\r\n    \"PS.ProjectDetailPage.Collection\": {\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.ProjectEngagement\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        getTimephasedByUrl: {\r\n            argNames: [\"start\", \"end\", \"scale\", \"contourType\"],\r\n        },\r\n    },\r\n    \"PS.ProjectEngagement.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.ProjectEngagementTimephasedPeriod.Collection\": {\r\n        getByStartUrl: {\r\n            argNames: [\"start\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.ProjectServer\": {\r\n        getDeletedPublishedAssignments: {\r\n            argNames: [\"deletedDate\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        stopDelegation: {},\r\n    },\r\n    \"PS.ProjectWorkflowInstance\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        restartWorkflow: {},\r\n        restartWorkflowSkipToStage: {\r\n            argNames: [\"stageId\"],\r\n        },\r\n    },\r\n    \"PS.ProjectWorkflowInstance.Collection\": {\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.PublishedAssignment.Collection\": {\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.PublishedProject\": {\r\n        checkOut: {},\r\n        createProjectSite: {\r\n            argNames: [\"siteName\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        getResourcePlanByUrl: {\r\n            argNames: [\"start\", \"end\", \"scale\"],\r\n        },\r\n        leaveProjectStage: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        readyToLeaveProjectStage: {},\r\n        submitToWorkflow: {},\r\n        unlinkProjectSite: {},\r\n        updateIdeaListItemStatus: {\r\n            argNames: [\"status\"],\r\n        },\r\n        updateVisibilityCustomFields: {}\r\n    },\r\n    \"PS.PublishedProject.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n        validate: {},\r\n    },\r\n    \"PS.PublishedProjectResource.Collection\": {\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.PublishedTask\": {\r\n        addTaskPlanLink: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        deleteTaskPlanLink: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.PublishedTask.Collection\": {\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.PublishedTaskLink.Collection\": {\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.QueueJob\": {\r\n        cancel: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.QueueJob.Collection\": {\r\n        getAll: {},\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.ResourceCalendarException\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.ResourceEngagement\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        getTimephasedByUrl: {\r\n            argNames: [\"start\", \"end\", \"scale\", \"contourType\"],\r\n        },\r\n    },\r\n    \"PS.ResourceEngagement.Collection\": {\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.ResourceEngagementTimephasedPeriod.Collection\": {\r\n        getByStartUrl: {\r\n            argNames: [\"start\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.ResourcePlan\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        forceCheckIn: {},\r\n        publish: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.ServiceStatus\": {\r\n        stopDelegation: {},\r\n    },\r\n    \"PS.Stage\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.Stage.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {},\r\n    },\r\n    \"PS.StageCustomField\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.StageCustomField.Collection\": {\r\n        add: {\r\n            argNames: [\"creationInfo\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.StageDetailPage\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.StageDetailPage.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.StatusAssignment\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        submitStatusUpdates: {\r\n            argNames: [\"comment\"],\r\n        },\r\n    },\r\n    \"PS.StatusAssignment.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        getTimePhaseByUrl: {\r\n            argNames: [\"start\", \"end\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        submitAllStatusUpdates: {\r\n            argNames: [\"comment\"],\r\n        },\r\n        update: {},\r\n    },\r\n    \"PS.StatusAssignmentHistoryLine.Collection\": {\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.TaskPlanLink\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.TimeSheet\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recall: {},\r\n        submit: {\r\n            argNames: [\"comment\"],\r\n        },\r\n        update: {},\r\n    },\r\n    \"PS.TimeSheetLine\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        submit: {\r\n            argNames: [\"comment\"],\r\n        },\r\n    },\r\n    \"PS.TimeSheetLine.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.TimeSheetPeriod\": {\r\n        createTimeSheet: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.TimeSheetPeriod.Collection\": {\r\n        getByGuid: {\r\n            argNames: [\"uid\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.TimeSheetWork\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"PS.TimeSheetWork.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        getByStartDate: {\r\n            argNames: [\"start\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"PS.WorkflowActivities\": {\r\n        checkInWithJobId: {\r\n            argNames: [\"projId\", \"jobId\", \"force\"],\r\n        },\r\n        createProjectFromListItem: {\r\n            argNames: [\"webId\", \"listId\", \"itemId\", \"eptId\"],\r\n        },\r\n        enterProjectStage: {\r\n            argNames: [\"projectId\", \"stageId\"],\r\n        },\r\n        leaveProjectStage: {\r\n            argNames: [\"projectId\"],\r\n        },\r\n        publishSummaryWithJobId: {\r\n            argNames: [\"projId\", \"jobId\"],\r\n        },\r\n        publishWithJobId: {\r\n            argNames: [\"projectId\", \"jobId\"],\r\n        },\r\n        readBooleanProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readCurrencyProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readDateTimeProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readGuidProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readIntegerProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readNumberProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readProjectProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readTextProperty: {\r\n            argNames: [\"projectId\", \"propertyId\"],\r\n        },\r\n        readyToLeaveProjectStage: {\r\n            argNames: [\"projectId\"],\r\n        },\r\n        updateBooleanProperty: {\r\n            argNames: [\"projectId\", \"propertyId\", \"value\"],\r\n        },\r\n        updateCurrencyProperty: {\r\n            argNames: [\"projectId\", \"propertyId\", \"value\"],\r\n        },\r\n        updateDateTimeProperty: {\r\n            argNames: [\"projectId\", \"propertyId\", \"value\"],\r\n        },\r\n        updateGuidProperty: {\r\n            argNames: [\"projectId\", \"propertyId\", \"value\"],\r\n        },\r\n        updateIdeaListItemStatus: {\r\n            argNames: [\"projectId\", \"status\"],\r\n        },\r\n        updateIntegerProperty: {\r\n            argNames: [\"projectId\", \"propertyId\", \"value\"],\r\n        },\r\n        updateNumberProperty: {\r\n            argNames: [\"projectId\", \"propertyId\", \"value\"],\r\n        },\r\n        updateProjectStageStatus: {\r\n            argNames: [\"projectId\", \"stageId\", \"statusInformation\", \"stageStatusValue\", \"append\"],\r\n        },\r\n        updateTextProperty: {\r\n            argNames: [\"projectId\", \"propertyId\", \"value\"],\r\n        },\r\n    },\r\n    \"PS.WorkflowDesignerField.Collection\": {\r\n        getById: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Alert\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        updateAlert: {},\r\n    },\r\n    \"SP.Alert.Collection\": {\r\n        add: {\r\n            argNames: [\"alertCreationInformation\"],\r\n            name: \"\",\r\n            metadataType: \"SP.Alert\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        contains: {\r\n            argNames: [\"idAlert\"],\r\n        },\r\n        deleteAlert: {\r\n            argNames: [\"idAlert\"],\r\n        },\r\n        deleteAlertAtIndex: {\r\n            argNames: [\"index\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"idAlert\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.AppInstance\": {\r\n        cancelAllJobs: {},\r\n        getAppDatabaseConnectionString: {},\r\n        getErrorDetails: {},\r\n        getPreviousAppVersion: {},\r\n        install: {},\r\n        recycle: {},\r\n        restore: {},\r\n        retryAllJobs: {},\r\n        uninstall: {},\r\n        upgrade: {\r\n            argNames: [\"appPackageStream\"],\r\n        },\r\n    },\r\n    \"SP.Attachment\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        recycleObject: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n    },\r\n    \"SP.Attachment.Collection\": {\r\n        add: {\r\n            argNames: [\"FileName\", \"Content\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        addUsingPath: {\r\n            argNames: [\"DecodedUrl\", \"contentStream\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        getByFileName: {\r\n            argNames: [\"fileName\"]\r\n        },\r\n        getByFileNameAsPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Audit\": {\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.BusinessData.AppBdcCatalog\": {\r\n        getConnectionId: {\r\n            argNames: [\"lobSystemName\", \"lobSystemInstanceName\"],\r\n        },\r\n        getEntity: {\r\n            argNames: [\"namespace\", \"name\"],\r\n        },\r\n        getLobSystemInstanceProperty: {\r\n            argNames: [\"lobSystemName\", \"lobSystemInstanceName\", \"propertyName\"],\r\n        },\r\n        getLobSystemProperty: {\r\n            argNames: [\"lobSystemName\", \"propertyName\"],\r\n        },\r\n        getPermissibleConnections: {},\r\n        setConnectionId: {\r\n            argNames: [\"lobSystemName\", \"lobSystemInstanceName\", \"connectionId\"],\r\n        },\r\n        setLobSystemInstanceProperty: {\r\n            argNames: [\"lobSystemName\", \"lobSystemInstanceName\", \"propertyName\", \"propertyValue\"],\r\n        },\r\n        setLobSystemProperty: {\r\n            argNames: [\"lobSystemName\", \"propertyName\", \"propertyValue\"],\r\n        },\r\n    },\r\n    \"SP.BusinessData.Entity\": {\r\n        getAssociationView: {\r\n            argNames: [\"associationName\"],\r\n        },\r\n        getCreatorView: {\r\n            argNames: [\"methodInstanceName\"],\r\n        },\r\n        getDefaultSpecificFinderView: {},\r\n        getFilters: {\r\n            argNames: [\"methodInstanceName\"],\r\n        },\r\n        getFinderView: {\r\n            argNames: [\"methodInstanceName\"],\r\n        },\r\n        getIdentifierCount: {},\r\n        getIdentifiers: {},\r\n        getLobSystem: {},\r\n        getSpecificFinderView: {\r\n            argNames: [\"specificFinderName\"],\r\n        },\r\n        getUpdaterView: {\r\n            argNames: [\"updaterName\"],\r\n        },\r\n    },\r\n    \"SP.BusinessData.EntityIdentifier\": {\r\n        containsLocalizedDisplayName: {},\r\n        getDefaultDisplayName: {},\r\n        getLocalizedDisplayName: {},\r\n    },\r\n    \"SP.BusinessData.EntityView\": {\r\n        getDefaultValues: {},\r\n        getType: {\r\n            argNames: [\"fieldDotNotation\"],\r\n        },\r\n        getTypeDescriptor: {\r\n            argNames: [\"fieldDotNotation\"],\r\n        },\r\n        getXmlSchema: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.BusinessData.Infrastructure.ExternalSubscriptionStore\": {\r\n        indexStore: {},\r\n    },\r\n    \"SP.BusinessData.LobSystem\": {\r\n        getLobSystemInstances: {},\r\n    },\r\n    \"SP.BusinessData.Runtime.EntityFieldValueDictionary\": {\r\n        createCollectionInstance: {\r\n            argNames: [\"fieldDotNotation\", \"size\"],\r\n        },\r\n        createInstance: {\r\n            argNames: [\"fieldInstanceDotNotation\", \"fieldDotNotation\"],\r\n        },\r\n        fromXml: {\r\n            argNames: [\"xml\"],\r\n        },\r\n        getCollectionSize: {\r\n            argNames: [\"fieldDotNotation\"],\r\n        },\r\n        toXml: {},\r\n    },\r\n    \"SP.BusinessData.Runtime.EntityInstance\": {\r\n        createCollectionInstance: {\r\n            argNames: [\"fieldDotNotation\", \"size\"],\r\n        },\r\n        createInstance: {\r\n            argNames: [\"fieldInstanceDotNotation\", \"fieldDotNotation\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        fromXml: {\r\n            argNames: [\"xml\"],\r\n        },\r\n        getIdentity: {},\r\n        toXml: {},\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.BusinessData.TypeDescriptor\": {\r\n        containsLocalizedDisplayName: {},\r\n        getChildTypeDescriptors: {},\r\n        getDefaultDisplayName: {},\r\n        getLocalizedDisplayName: {},\r\n        getParentTypeDescriptor: {},\r\n        isLeaf: {},\r\n        isRoot: {},\r\n    },\r\n    \"SP.CheckedOutFile\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        takeOverCheckOut: {},\r\n    },\r\n    \"SP.CheckedOutFile.Collection\": {\r\n        getByPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.ClientWebPart\": {\r\n        render: {\r\n            argNames: [\"properties\"],\r\n        },\r\n    },\r\n    \"SP.ClientWebPart.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.CompliancePolicy.SPPolicyStoreProxy\": {\r\n        addDynamicScopeBinding: {\r\n            argNames: [\"identity\", \"siteId\"],\r\n        },\r\n        bulkUpdateDynamicScopeBindings: {\r\n            argNames: [\"scopesToAdd\", \"scopesToRemove\", \"siteId\"],\r\n        },\r\n        deleteDynamicScopeBinding: {\r\n            argNames: [\"identity\", \"siteId\"],\r\n        },\r\n        extendReviewItemsRetention: {\r\n            argNames: [\"itemIds\", \"extensionDate\"],\r\n        },\r\n        getDynamicScopeBindingBySiteId: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n        markReviewItemsForDeletion: {\r\n            argNames: [\"itemIds\"],\r\n        },\r\n        openBinaryStreamForOriginalItem: {\r\n            argNames: [\"itemId\"],\r\n        },\r\n        removeContainerRetentionPolicy: {\r\n            argNames: [\"siteId\"],\r\n        },\r\n        removeContainerSettings: {\r\n            argNames: [\"externalId\"],\r\n        },\r\n        retagReviewItems: {\r\n            argNames: [\"itemIds\", \"newTag\", \"newTagIsRecord\", \"newTagBlockDelete\", \"newTagIsEventBased\"],\r\n        },\r\n        retagReviewItemsWithMetas: {\r\n            argNames: [\"itemIds\", \"newTagName\", \"newTagMetas\"],\r\n        },\r\n        setContainerRetentionPolicy: {\r\n            argNames: [\"siteId\", \"defaultContainerLabel\"],\r\n        },\r\n        updateContainerSetting: {\r\n            argNames: [\"siteId\", \"externalId\", \"settingType\", \"setting\"],\r\n        },\r\n    },\r\n    \"SP.ContentType\": {\r\n        properties: [\r\n            \"FieldLinks|SP.FieldLink.Collection|('[Name]')|SP.FieldLink\", \"Fields|SP.Field.Collection|/getByInternalNameOrTitle('[Name]')|SP.Field\", \"WorkflowAssociations|SP.Workflow.WorkflowAssociation.Collection\"\r\n        ],\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        reorderFields: {\r\n            argNames: [\"fieldNames\"]\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.ContentType\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.ContentType.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: \"SP.ContentType\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        addAvailableContentType: {\r\n            argNames: [\"contentTypeId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getById: {\r\n            argNames: [\"contentTypeId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.ContentType\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Directory.DirectorySession\": {\r\n        getGraphUser: {\r\n            argNames: [\"principalName\"],\r\n        },\r\n        getSharePointDataForUser: {\r\n            argNames: [\"userId\"],\r\n        },\r\n        group: {\r\n            argNames: [\"groupId\", \"alias\"],\r\n        },\r\n        joinGroup: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n        me: {},\r\n        user: {\r\n            argNames: [\"id\", \"principalName\"],\r\n        },\r\n        validateGroupName: {\r\n            argNames: [\"displayName\", \"alias\"],\r\n        },\r\n    },\r\n    \"SP.Directory.Group\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Directory.Group.Collection\": {\r\n        add: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        remove: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n    },\r\n    \"SP.Directory.Provider.DirectoryNotification\": {\r\n        notifyChanges: {\r\n            argNames: [\"directoryObjectChanges\"],\r\n        },\r\n    },\r\n    \"SP.Directory.Provider.SharePointDirectoryProvider\": {\r\n        createDirectoryObject: {\r\n            argNames: [\"data\"],\r\n        },\r\n        deleteDirectoryObject: {\r\n            argNames: [\"data\"],\r\n        },\r\n        getOrCreateUnifiedGroupTenantInstanceId: {\r\n            argNames: [\"groupId\", \"tenantInstanceId\"],\r\n        },\r\n        getOrCreateUnifiedGroupWithPreferredDataLocation: {\r\n            argNames: [\"groupId\", \"preferredDataLocation\"],\r\n        },\r\n        notifyDataChanges: {\r\n            argNames: [\"data\"],\r\n        },\r\n        readDirectoryObject: {\r\n            argNames: [\"data\"],\r\n        },\r\n        readDirectoryObjectBatch: {\r\n            argNames: [\"ids\", \"objectType\"],\r\n        },\r\n        updateCache: {\r\n            argNames: [\"data\"],\r\n        },\r\n        updateDirectoryObject: {\r\n            argNames: [\"data\"],\r\n        },\r\n    },\r\n    \"SP.Directory.User\": {\r\n        getUserLinks: {\r\n            argNames: [\"linkName\", \"groupType\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Directory.User.Collection\": {\r\n        add: {\r\n            argNames: [\"objectId\", \"principalName\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        remove: {\r\n            argNames: [\"objectId\"],\r\n        },\r\n    },\r\n    \"SP.DocumentManagement.DocumentId\": {\r\n        resetDocIdByServerRelativePath: {\r\n            argNames: [\"DecodedUrl\"],\r\n        },\r\n        resetDocIdsInLibrary: {\r\n            argNames: [\"DecodedUrl\", \"contentTypeId\"],\r\n        },\r\n    },\r\n    \"SP.EventReceiverDefinition\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.EventReceiverDefinition\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.EventReceiverDefinition.Collection\": {\r\n        add: {\r\n            argNames: [\"eventReceiverCreationInformation\"],\r\n            metadataType: \"SP.EventReceiverDefinition\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"eventReceiverId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.EventReceiverDefinition\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Feature.Collection\": {\r\n        add: {\r\n            argNames: [\"featureId\", \"force\", \"featdefScope\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"featureId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.Feature\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        remove: {\r\n            argNames: [\"featureId\", \"force\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n    },\r\n    \"SP.Field\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            name: \"\",\r\n            metadataType: \"SP.Field\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.Field\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Field.Collection\": {\r\n        addDependentLookupField: {\r\n            argNames: [\"displayName\", \"primaryLookupFieldId\", \"showField\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        addField: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: \"SP.FieldCreationInformation\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        createFieldAsXml: {\r\n            argNames: [\"schemaXml\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody,\r\n            data: {\r\n                parameters: {\r\n                    __metadata: { type: \"SP.XmlSchemaFieldCreationInformation\" },\r\n                    Options: 8,\r\n                    SchemaXml: \"[[schemaXml]]\"\r\n                }\r\n            }\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly,\r\n            returnType: \"SP.Field\"\r\n        },\r\n        getByInternalNameOrTitle: {\r\n            argNames: [\"strName\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly,\r\n            returnType: \"SP.Field\"\r\n        },\r\n        getByTitle: {\r\n            argNames: [\"title\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly,\r\n            returnType: \"SP.Field\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.FieldCalculated\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldCalculated\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldChoice\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldChoice\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldComputed\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldComputed\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldCurrency\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldCurrency\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldDateTime\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldDateTime\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldGeolocation\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldGeolocation\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldGuid\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldGuid\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldLink\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldLink\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldLink.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: \"SP.FieldLink\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.FieldLink\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        reorder: {\r\n            argNames: [\"internalNames\"]\r\n        },\r\n    },\r\n    \"SP.FieldLocation\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldLocation\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldLookup\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldLookup\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldMultiChoice\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldMultiChoice\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldMultiLineText\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldMultiLineText\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldNumber\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldNumber\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldRatingScale\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldRatingScale\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldText\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldText\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldThumbnail\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldThumbnail\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldUrl\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldUrl\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.FieldUser\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: \"SP.FieldUser\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.File\": {\r\n        properties: [\r\n            \"Author|SP.User\", \"CheckedOutByUser|SP.User\", \"EffectiveInformationRightsManagementSettings\", \"InformationRightsManagementSettings\",\r\n            \"ListItemAllFields\", \"LockedByUser|SP.User\", \"ModifiedBy|SP.User\", \"Properties\", \"VersionEvents\", \"Versions|SP.FileVersion.Collection\"\r\n        ],\r\n        addClientActivities: {\r\n            argNames: [\"activitiesStream\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        approve: {\r\n            argNames: [\"comment\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        cancelUpload: {\r\n            argNames: [\"uploadId\"],\r\n            name: \"cancelupload(guid'[[uploadId]]')\",\r\n            requestType: utils_1.RequestType.PostReplace\r\n        },\r\n        checkAccessAndPostViewAuditEvent: {},\r\n        checkIn: {\r\n            argNames: [\"comment\", \"checkInType\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        checkOut: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        content: {\r\n            name: \"$value\",\r\n            requestType: utils_1.RequestType.GetBuffer\r\n        },\r\n        continueUpload: {\r\n            argNames: [\"uploadId\", \"fileOffset\", \"stream\"],\r\n            name: \"continueUpload(uploadId=guid'[[uploadId]]', fileOffset=[[fileOffset]])\",\r\n            requestType: utils_1.RequestType.PostReplaceWithData\r\n        },\r\n        copyTo: {\r\n            argNames: [\"strNewUrl\", \"bOverWrite\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        copyToUsingPath: {\r\n            argNames: [\"DecodedUrl\", \"bOverWrite\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        deleteWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        deny: {\r\n            argNames: [\"comment\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        executeCobaltRequest: {\r\n            argNames: [\"inputStream\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        finishUpload: {\r\n            argNames: [\"uploadId\", \"fileOffset\", \"stream\"],\r\n            name: \"finishUpload(uploadId=guid'[[uploadId]]', fileOffset=[[fileOffset]])\",\r\n            requestType: utils_1.RequestType.PostReplaceWithData\r\n        },\r\n        finishUploadWithChecksum: {\r\n            argNames: [\"uploadId\", \"fileOffset\", \"checksum\", \"stream\"],\r\n            name: \"finishUploadWithChecksum(uploadId=guid'[[uploadId]]', fileOffset=[[fileOffset]], checksum=[[checksum]])\",\r\n            requestType: utils_1.RequestType.PostReplaceWithData\r\n        },\r\n        getFileUserValue: {\r\n            argNames: [\"key\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        getImagePreviewUri: {\r\n            argNames: [\"width\", \"height\", \"clientType\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        getImagePreviewUrl: {\r\n            argNames: [\"width\", \"height\", \"clientType\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        getLimitedWebPartManager: {\r\n            argNames: [\"scope\"],\r\n            name: \"getLimitedWebPartManager(scope=[[scope]])\",\r\n            requestType: utils_1.RequestType.GetReplace,\r\n            returnType: \"SP.WebParts.LimitedWebPartManager\"\r\n        },\r\n        getPreAuthorizedAccessUrl: {\r\n            argNames: [\"expirationHours\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        getPreAuthorizedAccessUrl2: {\r\n            argNames: [\"expirationHours\", \"expirationMinuites\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        getUploadStatus: {\r\n            argNames: [\"uploadId\"],\r\n        },\r\n        getWOPIFrameUrl: {\r\n            argNames: [\"action\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInQS\r\n        },\r\n        moveTo: {\r\n            argNames: [\"newUrl\", \"flags\"],\r\n            name: \"moveTo(newUrl='[[newUrl]]', flags=[[flags]])\",\r\n            requestType: utils_1.RequestType.PostReplace\r\n        },\r\n        moveToUsingPath: {\r\n            argNames: [\"DecodedUrl\", \"moveOperations\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        openBinaryStream: {\r\n            requestType: utils_1.RequestType.GetBuffer\r\n        },\r\n        openBinaryStreamWithOptions: {\r\n            argNames: [\"openOptions\"],\r\n            requestType: utils_1.RequestType.GetBuffer\r\n        },\r\n        publish: {\r\n            argNames: [\"comment\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recycle: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        recycleWithETag: {\r\n            argNames: [\"etagMatch\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        recycleWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        saveBinaryStream: {\r\n            argNames: [\"file\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        setFileUserValue: {\r\n            argNames: [\"key\", \"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        startUpload: {\r\n            argNames: [\"uploadId\", \"stream\"],\r\n            name: \"startupload(uploadId=guid'[[uploadId]]')\",\r\n            requestType: utils_1.RequestType.PostReplaceWithData\r\n        },\r\n        unPublish: {\r\n            argNames: [\"comment\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        undoCheckOut: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.File\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        updateVirusInfo: {\r\n            argNames: [\"virusStatus\", \"virusMessage\", \"etagToCheck\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n    },\r\n    \"SP.File.Collection\": {\r\n        add: {\r\n            argNames: [\"Url\", \"Overwrite\", \"Content\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        addStub: {\r\n            argNames: [\"urlOfFile\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        addStubUsingPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        addTemplateFile: {\r\n            argNames: [\"urlOfFile\", \"templateFileType\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        addUsingPath: {\r\n            argNames: [\"DecodedUrl\", \"AutoCheckoutOnInvalidData\", \"Overwrite\", \"XorHash\", \"contentStream\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        getByPathOrAddStub: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getByUrl: {\r\n            argNames: [\"url\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.File\"\r\n        },\r\n        getByUrlOrAddStub: {\r\n            argNames: [\"urlOfFile\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.FileVersion\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        openBinaryStream: {\r\n            requestType: utils_1.RequestType.GetBuffer,\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.FileVersion.Collection\": {\r\n        deleteAll: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        deleteByID: {\r\n            argNames: [\"vid\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        deleteByLabel: {\r\n            argNames: [\"versionlabel\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        getById: {\r\n            argNames: [\"versionid\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.Version\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recycleByID: {\r\n            argNames: [\"vid\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        recycleByLabel: {\r\n            argNames: [\"versionlabel\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        restoreByLabel: {\r\n            argNames: [\"versionlabel\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n    },\r\n    \"SP.Folder\": {\r\n        properties: [\r\n            \"Files|SP.File.Collection|/getByUrl('[Name]')|SP.File\", \"Folders|SP.Folder.Collection|/getByUrl('[Name]')|SP.Folder\", \"ListItemAllFields\",\r\n            \"ParentFolder|SP.Folder\", \"Properties\", \"StorageMetrics\"\r\n        ],\r\n        addSubFolder: {\r\n            argNames: [\"leafName\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        addSubFolderUsingPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        deleteWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getChanges: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getListItemChanges: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        moveTo: {\r\n            argNames: [\"newUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        moveToUsingPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recycle: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        recycleWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.Folder\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n    },\r\n    \"SP.Folder.Collection\": {\r\n        properties: [\r\n            \"Files|SP.File.Collection|/getByUrl('[Name]')|SP.File\", \"Folders|SP.Folder.Collection|/getByUrl('[Name]')|SP.Folder\", \"ListItemAllFields\",\r\n            \"ParentFolder\", \"StorageMetrics\"\r\n        ],\r\n        add: {\r\n            argNames: [\"url\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        addUsingPath: {\r\n            argNames: [\"DecodedUrl\", \"Overwrite\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        addWithOverwrite: {\r\n            argNames: [\"url\", \"overwrite\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        getByPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getByUrl: {\r\n            argNames: [\"url\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.Folder\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Form.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        getByPageType: {\r\n            argNames: [\"formType\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Group\": {\r\n        properties: [\r\n            \"Users|SP.User.Collection|/getById([Name])|SP.User\"\r\n        ],\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        setUserAsOwner: {\r\n            argNames: [\"ownerId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            metadataType: \"SP.Group\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Group.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: \"SP.Group\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.Group\"\r\n        },\r\n        getByName: {\r\n            argNames: [\"name\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.Group\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        removeById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        removeByLoginName: {\r\n            argNames: [\"loginName\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n    },\r\n    \"SP.HubSite\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        }\r\n    },\r\n    \"SP.HubSite.Collection\": {\r\n        getById: {\r\n            argNames: [\"hubSiteId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQS\r\n        },\r\n        getConnectedHubs: {\r\n            argNames: [\"hubSiteId\", \"option\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQS\r\n        },\r\n        getSiteUrlByHubSiteId: {\r\n            argNames: [\"hubSiteId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQS\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.InformationRightsManagementFileSettings\": {\r\n        reset: {},\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.InformationRightsManagementSettings\": {\r\n        reset: {},\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.KnowledgeHub\": {\r\n        siteReference: {},\r\n    },\r\n    \"SP.LanguageCollection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n    },\r\n    \"SP.List\": {\r\n        properties: [\r\n            \"BrowserFileHandling\", \"ContentTypes|SP.ContentType.Collection|('[Name]')|SP.ContentType\", \"CreatablesInfo\",\r\n            \"DefaultDisplayFormUrl\", \"DefaultEditFormUrl\", \"DefaultNewFormUrl\", \"DefaultView|SP.View\", \"DescriptionResource\",\r\n            \"EffectiveBasePermissions\", \"EventReceivers|SP.EventReceiverDefinition.Collection|('[Name]')|SP.EventReceiverDefinition\",\r\n            \"Fields|SP.Field.Collection|/getByInternalNameOrTitle('[Name]')|SP.Field\", \"FirstUniqueAncestorSecurableObject\", \"Forms|SP.Form.Collection|('[Name]')|SP.Form\",\r\n            \"InformationRightsManagementSettings\", \"Items|SP.ListItem.Collection|([Name])|SP.ListItem\", \"ParentWeb\",\r\n            \"RoleAssignments|SP.RoleAssignment.Collection|([Name])|SP.RoleAssignment\", \"RootFolder|SP.Folder|/getByUrl('[Name]')|SP.File\", \"Subscriptions\", \"TitleResource\",\r\n            \"UserCustomActions|SP.UserCustomAction.Collection|('[Name]')|SP.UserCustomAction\", \"Views|SP.View.Collection|('[Name]')|SP.View\", \"WorkflowAssociations\"\r\n        ],\r\n        addItem: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        addItemUsingPath: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        addValidateUpdateItem: {\r\n            argNames: [\"listItemCreateInfo\", \"formValues\", \"bNewDocumentUpdate\", \"checkInComment\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        addValidateUpdateItemUsingPath: {\r\n            argNames: [\"listItemCreateInfo\", \"formValues\", \"bNewDocumentUpdate\", \"checkInComment\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        breakRoleInheritance: {\r\n            argNames: [\"copyRoleAssignments\", \"clearSubscopes\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        bulkValidateUpdateListItems: {\r\n            argNames: [\"itemIds\", \"formValues\", \"bNewDocumentUpdate\", \"checkInComment\", \"folderPath\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        createDocumentAndGetEditLink: {\r\n            argNames: [\"fileName\", \"folderPath\", \"documentTemplateType\", \"templateUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        createDocumentWithDefaultName: {\r\n            argNames: [\"folderPath\", \"extension\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        createMappedView: {\r\n            argNames: [\"appViewCreationInfo\", \"visualizationTarget\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        ensureSignoffStatusField: {},\r\n        getBloomFilter: {\r\n            argNames: [\"startItemId\"],\r\n        },\r\n        getBloomFilterWithCustomFields: {\r\n            argNames: [\"listItemStartingID\", \"internalFieldNames\"],\r\n        },\r\n        getChanges: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getCheckedOutFiles: {},\r\n        getItemById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.ListItem\"\r\n        },\r\n        getItemByStringId: {\r\n            argNames: [\"sId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getItemByUniqueId: {\r\n            argNames: [\"uniqueId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getItems: {\r\n            argNames: [\"viewXML\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody,\r\n            data: {\r\n                query: {\r\n                    __metadata: { type: \"SP.CamlQuery\" },\r\n                    ViewXml: \"[[viewXML]]\"\r\n                }\r\n            }\r\n        },\r\n        getItemsByQuery: {\r\n            argNames: [\"camlQuery\"],\r\n            name: \"getItems\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody,\r\n            data: {\r\n                query: {\r\n                    __metadata: { type: \"SP.CamlQuery\" },\r\n                    ViewXml: \"<View>[[camlQuery]]</View>\"\r\n                }\r\n            }\r\n        },\r\n        getListItemChangesSinceToken: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeLogItemQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getMappedApp: {\r\n            argNames: [\"appId\", \"visualizationAppTarget\"],\r\n        },\r\n        getMappedApps: {\r\n            argNames: [\"visualizationAppTarget\"],\r\n        },\r\n        getRelatedFields: {},\r\n        getSpecialFolderUrl: {\r\n            argNames: [\"type\", \"bForceCreate\", \"existingFolderGuid\"],\r\n        },\r\n        getUserEffectivePermissions: {\r\n            argNames: [\"userName\"],\r\n            name: \"getUserEffectivePermissions(@user)?@user='[[userName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getView: {\r\n            argNames: [\"viewGuid\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.View\"\r\n        },\r\n        getWebDavUrl: {\r\n            argNames: [\"sourceUrl\"],\r\n        },\r\n        publishMappedView: {\r\n            argNames: [\"appId\", \"visualizationTarget\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recycle: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        renderExtendedListFormData: {\r\n            argNames: [\"itemId\", \"formId\", \"mode\", \"options\", \"cutoffVersion\"],\r\n        },\r\n        renderListContextMenuData: {\r\n            argNames: [\"CascDelWarnMessage\", \"CustomAction\", \"Field\", \"ID\", \"InplaceFullListSearch\", \"InplaceSearchQuery\", \"IsCSR\", \"IsXslView\", \"ItemId\", \"ListViewPageUrl\", \"OverrideScope\", \"RootFolder\", \"View\", \"ViewCount\"],\r\n        },\r\n        renderListData: {\r\n            argNames: [\"viewXml\"],\r\n            name: \"renderListData(@v)?@v='<View>[[viewXml]]</View>'\",\r\n            requestType: utils_1.RequestType.PostReplace\r\n        },\r\n        renderListDataAsStream: {\r\n            argNames: [\"parameters\", \"CascDelWarnMessage\", \"CustomAction\", \"DrillDown\", \"Field\", \"FieldInternalName\", \"Filter\", \"FilterData\", \"FilterData1\", \"FilterData10\", \"FilterData2\", \"FilterData3\", \"FilterData4\", \"FilterData5\", \"FilterData6\", \"FilterData7\", \"FilterData8\", \"FilterData9\", \"FilterField\", \"FilterField1\", \"FilterField10\", \"FilterField2\", \"FilterField3\", \"FilterField4\", \"FilterField5\", \"FilterField6\", \"FilterField7\", \"FilterField8\", \"FilterField9\", \"FilterFields\", \"FilterFields1\", \"FilterFields10\", \"FilterFields2\", \"FilterFields3\", \"FilterFields4\", \"FilterFields5\", \"FilterFields6\", \"FilterFields7\", \"FilterFields8\", \"FilterFields9\", \"FilterLookupId\", \"FilterLookupId1\", \"FilterLookupId10\", \"FilterLookupId2\", \"FilterLookupId3\", \"FilterLookupId4\", \"FilterLookupId5\", \"FilterLookupId6\", \"FilterLookupId7\", \"FilterLookupId8\", \"FilterLookupId9\", \"FilterOp\", \"FilterOp1\", \"FilterOp10\", \"FilterOp2\", \"FilterOp3\", \"FilterOp4\", \"FilterOp5\", \"FilterOp6\", \"FilterOp7\", \"FilterOp8\", \"FilterOp9\", \"FilterValue\", \"FilterValue1\", \"FilterValue10\", \"FilterValue2\", \"FilterValue3\", \"FilterValue4\", \"FilterValue5\", \"FilterValue6\", \"FilterValue7\", \"FilterValue8\", \"FilterValue9\", \"FilterValues\", \"FilterValues1\", \"FilterValues10\", \"FilterValues2\", \"FilterValues3\", \"FilterValues4\", \"FilterValues5\", \"FilterValues6\", \"FilterValues7\", \"FilterValues8\", \"FilterValues9\", \"GroupString\", \"HasOverrideSelectCommand\", \"ID\", \"InplaceFullListSearch\", \"InplaceSearchQuery\", \"IsCSR\", \"IsGroupRender\", \"IsXslView\", \"ListViewPageUrl\", \"OverrideScope\", \"OverrideSelectCommand\", \"PageFirstRow\", \"PageLastRow\", \"RootFolder\", \"RootFolderUniqueId\", \"SortDir\", \"SortDir1\", \"SortDir10\", \"SortDir2\", \"SortDir3\", \"SortDir4\", \"SortDir5\", \"SortDir6\", \"SortDir7\", \"SortDir8\", \"SortDir9\", \"SortField\", \"SortField1\", \"SortField10\", \"SortField2\", \"SortField3\", \"SortField4\", \"SortField5\", \"SortField6\", \"SortField7\", \"SortField8\", \"SortField9\", \"SortFields\", \"SortFieldValues\", \"View\", \"ViewCount\", \"ViewId\", \"ViewPath\", \"WebPartId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        renderListFilterData: {\r\n            argNames: [\"ExcludeFieldFilteringHtml\", \"FieldInternalName\", \"OverrideScope\", \"ProcessQStringToCAML\", \"ViewId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        renderListFormData: {\r\n            argNames: [\"itemId\", \"formId\", \"mode\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        reserveListItemId: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        resetRoleInheritance: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        saveAsNewView: {\r\n            argNames: [\"oldName\", \"newName\", \"privateView\", \"uri\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        saveAsTemplate: {\r\n            argNames: [\"strFileName\", \"strName\", \"strDescription\", \"bSaveData\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        setExemptFromBlockDownloadOfNonViewableFiles: {\r\n            argNames: [\"value\"],\r\n        },\r\n        syncFlowCallbackUrl: {\r\n            argNames: [\"flowId\"],\r\n        },\r\n        syncFlowInstance: {\r\n            argNames: [\"flowID\"],\r\n        },\r\n        syncFlowInstances: {},\r\n        syncFlowTemplates: {\r\n            argNames: [\"category\"],\r\n        },\r\n        unpublishMappedView: {\r\n            argNames: [\"appId\", \"visualizationTarget\"],\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.List\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        validateAppName: {\r\n            argNames: [\"appDisplayName\"],\r\n        },\r\n    },\r\n    \"SP.List.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: \"SP.List\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        ensureClientRenderedSitePagesLibrary: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        ensureEventsList: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        ensureSiteAssetsLibrary: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        ensureSitePagesLibrary: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.List\"\r\n        },\r\n        getByTitle: {\r\n            argNames: [\"title\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.List\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.ListItem\": {\r\n        properties: [\r\n            \"AttachmentFiles|SP.Attachment.Collection|('[Name]')|SP.Attachment\", \"ContentType|SP.ContentType\", \"FieldValuesAsHtml\", \"FieldValuesAsText\", \"FieldValuesForEdit\",\r\n            \"File|SP.File\", \"FirstUniqueAncestorSecurableObject\", \"Folder|SP.Folder\", \"GetDlpPolicyTip\", \"ParentList\",\r\n            \"Properties\", \"RoleAssignments|SP.RoleAssignment.Collection|roleassignments|([Name])|SP.RoleAssignment\"\r\n        ],\r\n        breakRoleInheritance: {\r\n            argNames: [\"copyRoleAssignments\", \"clearSubscopes\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        deleteWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getChanges: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getHashtags: {},\r\n        getUserEffectivePermissions: {\r\n            argNames: [\"userName\"],\r\n            name: \"getUserEffectivePermissions(@user)?@user='[[userName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getWOPIFrameUrl: {\r\n            argNames: [\"action\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInQS\r\n        },\r\n        mediaServiceUpdate: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        mediaServiceUpdateV2: {\r\n            argNames: [\"parameters\", \"eventFiringEnabled\"],\r\n        },\r\n        overridePolicyTip: {\r\n            argNames: [\"userAction\", \"justification\"],\r\n        },\r\n        parseAndSetFieldValue: {\r\n            argNames: [\"fieldName\", \"value\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recycle: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        recycleWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        resetRoleInheritance: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setCommentsDisabled: {\r\n            argNames: [\"value\"],\r\n        },\r\n        setComplianceTag: {\r\n            argNames: [\"complianceTag\", \"isTagPolicyHold\", \"isTagPolicyRecord\", \"isEventBasedTag\", \"isTagSuperLock\"],\r\n        },\r\n        setComplianceTagWithExplicitMetasUpdate: {\r\n            argNames: [\"complianceTag\", \"complianceFlags\", \"complianceTagWrittenTime\", \"userEmailAddress\"],\r\n        },\r\n        setComplianceTagWithHold: {\r\n            argNames: [\"complianceTag\"],\r\n        },\r\n        setComplianceTagWithMetaInfo: {\r\n            argNames: [\"complianceTag\", \"blockDelete\", \"blockEdit\", \"complianceTagWrittenTime\", \"userEmailAddress\", \"isTagSuperLock\"],\r\n        },\r\n        setComplianceTagWithNoHold: {\r\n            argNames: [\"complianceTag\"],\r\n        },\r\n        setComplianceTagWithRecord: {\r\n            argNames: [\"complianceTag\"],\r\n        },\r\n        systemUpdate: {},\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            inheritMetadataType: true,\r\n            metadataType: function (obj) {\r\n                return (obj.parent && obj.parent[\"ListItemEntityTypeFullName\"]) || \"SP.ListItem\";\r\n            },\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        updateEx: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        updateHashtags: {\r\n            argNames: [\"hashtagsToAdd\", \"hashtagsToRemove\"],\r\n        },\r\n        updateOverwriteVersion: {},\r\n        validateUpdateListItem: {\r\n            argNames: [\"formValues\", \"bNewDocumentUpdate\", \"checkInComment\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n    },\r\n    \"SP.ListItem.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: function (obj) {\r\n                return (obj.parent && obj.parent[\"ListItemEntityTypeFullName\"]) || \"SP.ListItem\";\r\n            },\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"itemId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.ListItem\"\r\n        },\r\n        getByStringId: {\r\n            argNames: [\"sId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.ListItemVersion\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.ListItemVersion.Collection\": {\r\n        getById: {\r\n            argNames: [\"versionId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.ListTemplate\": {\r\n        getGlobalSchemaXml: {},\r\n    },\r\n    \"SP.ListTemplate.Collection\": {\r\n        getByName: {\r\n            argNames: [\"name\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.MicroService.MicroServiceManager\": {\r\n        addMicroserviceWorkItem: {\r\n            argNames: [\"payLoad\", \"minutes\", \"properties\"],\r\n        },\r\n        deleteMicroserviceWorkItem: {\r\n            argNames: [\"workItemId\"],\r\n        },\r\n        deleteMicroserviceWorkItemByContentDbId: {\r\n            argNames: [\"contentDatabaseId\", \"siteId\", \"workItemId\"]\r\n        },\r\n        getServiceInternalUrls: {\r\n            argNames: [\"service\"],\r\n        },\r\n        getServiceUrls: {\r\n            argNames: [\"service\"],\r\n        },\r\n    },\r\n    \"SP.Microfeed.MicrofeedAttachmentStore\": {\r\n        deletePreProcessedAttachment: {\r\n            argNames: [\"attachmentUri\"],\r\n        },\r\n        getImage: {\r\n            argNames: [\"imageUrl\", \"key\", \"iv\"],\r\n        },\r\n        preProcessAttachment: {\r\n            argNames: [\"link\"],\r\n        },\r\n        putFile: {\r\n            argNames: [\"originalFileName\", \"fileData\"],\r\n        },\r\n        putImage: {\r\n            argNames: [\"imageData\"],\r\n        },\r\n    },\r\n    \"SP.Microfeed.MicrofeedData\": {\r\n        addAttachment: {\r\n            argNames: [\"name\", \"bytes\"],\r\n        },\r\n        systemUpdate: {},\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Microfeed.MicrofeedData.Collection\": {\r\n        deleteAll: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Microfeed.MicrofeedManager\": {\r\n        addUserToPostPeopleList: {\r\n            argNames: [\"postIdentifier\", \"UserLoginName\"],\r\n        },\r\n        clearUnreadMentionsCount: {},\r\n        deleteById: {\r\n            argNames: [\"postIdentifier\"],\r\n        },\r\n        deleteUserFromPostPeopleList: {\r\n            argNames: [\"postIdentifier\", \"UserLoginName\"],\r\n        },\r\n        getMyCategoricalFeed: {\r\n            argNames: [\"feedOptions\"],\r\n        },\r\n        getMyConsolidatedFeed: {\r\n            argNames: [\"feedOptions\"],\r\n        },\r\n        getMyPublishedFeed: {\r\n            argNames: [\"feedOptions\", \"typeOfPubFeed\", \"ShowPublicView\"],\r\n        },\r\n        getPublishedFeed: {\r\n            argNames: [\"feedOwner\", \"feedOptions\", \"typeOfPubFeed\"],\r\n        },\r\n        getThread: {\r\n            argNames: [\"postIdentifier\"],\r\n        },\r\n        getUnreadMentionsCount: {},\r\n        like: {\r\n            argNames: [\"postIdentifier\"],\r\n        },\r\n        lockThreadById: {\r\n            argNames: [\"threadIdentifier\"],\r\n        },\r\n        post: {\r\n            argNames: [\"postOptions\"],\r\n        },\r\n        postReply: {\r\n            argNames: [\"postIdentifier\", \"postReplyOptions\"],\r\n        },\r\n        repopulateLMT: {\r\n            argNames: [\"timeStamp\", \"secureHash\"],\r\n        },\r\n        unLike: {\r\n            argNames: [\"postIdentifier\"],\r\n        },\r\n        unLockThreadById: {\r\n            argNames: [\"threadIdentifier\"],\r\n        },\r\n        unsubscribeFromEMail: {\r\n            argNames: [\"postIdentifier\"],\r\n        },\r\n    },\r\n    \"SP.Microfeed.MicrofeedPostDefinitionManager\": {\r\n        deleteMicrofeedPostDefinition: {\r\n            argNames: [\"postDefinition\"],\r\n        },\r\n        getMicrofeedPostDefinition: {\r\n            argNames: [\"definitionName\"],\r\n        },\r\n        getMicrofeedPostDefinitions: {},\r\n        newMicrofeedPostDefinition: {\r\n            argNames: [\"definitionName\"],\r\n        },\r\n        updateMicrofeedPostDefinition: {\r\n            argNames: [\"postDefinition\"],\r\n        },\r\n    },\r\n    \"SP.Microfeed.MicrofeedStore\": {\r\n        addData: {\r\n            argNames: [\"name\", \"data\"],\r\n        },\r\n        addDataAsStream: {\r\n            argNames: [\"name\", \"data\"],\r\n        },\r\n        executePendingOperations: {},\r\n        getItem: {\r\n            argNames: [\"storeIdentifier\"],\r\n        },\r\n        getSocialProperties: {\r\n            argNames: [\"accountName\"],\r\n        },\r\n        incrementUnreadAtMentionCount: {\r\n            argNames: [\"accountName\"],\r\n        },\r\n        newItem: {\r\n            argNames: [\"storeIdentifier\"],\r\n        },\r\n        query: {\r\n            argNames: [\"storeIdentifier\", \"query\"],\r\n        },\r\n        setPostLikeStatus: {\r\n            argNames: [\"accountName\", \"postId\", \"like\"],\r\n        },\r\n    },\r\n    \"SP.MultilingualSettings\": {\r\n        query: { argNames: [\"oData\"] },\r\n        setNotificationRecipients: {\r\n            argNames: [\"request\"],\r\n        },\r\n    },\r\n    \"SP.Navigation\": {\r\n        properties: [\r\n            \"QuickLaunch|SP.NavigationNode.Collection|/../getNodeById([Name])|SP.NavigationNode\",\r\n            \"TopNavigationBar|SP.NavigationNode.Collection|/../getNodeById([Name])|SP.NavigationNode\"\r\n        ],\r\n        getNodeById: {\r\n            argNames: [\"id\"],\r\n            returnType: \"SP.NavigationNode\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.NavigationNode\": {\r\n        properties: [\r\n            \"Children|SP.NavigationNode.Collection|/../getNodeById([Name])|SP.NavigationNode\"\r\n        ],\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            metadataType: \"SP.NavigationNode\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.NavigationNode.Collection\": {\r\n        add: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.NavigationNode\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        getByIndex: {\r\n            argNames: [\"index\"],\r\n        },\r\n        moveAfter: {\r\n            argNames: [\"nodeId\", \"previousNodeId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.OAuth.NativeClient\": {\r\n        authenticate: {},\r\n    },\r\n    \"SP.OAuth.Token\": {\r\n        acquire: {\r\n            argNames: [\"resource\", \"tokenType\"],\r\n        },\r\n    },\r\n    \"SP.ObjectSharingInformation\": {\r\n        getSharedWithUsers: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.OrganizationNews\": {\r\n        sitesReference: {}\r\n    },\r\n    \"SP.Publishing.CommunicationSite\": {\r\n        create: {\r\n            argNames: [\"request\"],\r\n        },\r\n        enable: {\r\n            argNames: [\"designPackageId\"]\r\n        },\r\n        status: {\r\n            argNames: [\"url\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.EmbedService\": {\r\n        embedData: {\r\n            argNames: [\"url\", \"version\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.Navigation.PortalNavigationCacheWrapper\": {\r\n        disable: {},\r\n        enable: {},\r\n        refresh: {},\r\n    },\r\n    \"SP.Publishing.PointPublishingPost\": {\r\n        addImageFromUrl: {\r\n            argNames: [\"fromImageUrl\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.PointPublishingPost.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\", \"publishedOnly\"],\r\n        },\r\n        getByName: {\r\n            argNames: [\"name\", \"publishedOnly\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.PointPublishingPostServiceManager\": {\r\n        addBannerImageFromUrl: {\r\n            argNames: [\"fromImageUrl\"],\r\n        },\r\n        deleteMagazine: {},\r\n        getDocProps: {\r\n            argNames: [\"docUrls\"],\r\n        },\r\n        getPostsQuery: {\r\n            argNames: [\"top\", \"itemIdBoundary\", \"directionAscending\", \"publishedOnly\", \"draftsOnly\"],\r\n        },\r\n        getTopAuthors: {\r\n            argNames: [\"count\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        queryGroupNames: {\r\n            argNames: [\"query\"],\r\n        },\r\n        setMagazineProperties: {\r\n            argNames: [\"title\", \"description\", \"bannerImageUrl\", \"bannerColor\", \"bannerPattern\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.PointPublishingSiteManager\": {\r\n        create: {\r\n            argNames: [\"siteInfo\"],\r\n        },\r\n        getSiteStatus: {\r\n            argNames: [\"siteInfo\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.PointPublishingTenantManager\": {\r\n        isBlogEnabled: {},\r\n    },\r\n    \"SP.Publishing.PointPublishingUser\": {\r\n        deleteUserFromContainerGroup: {},\r\n    },\r\n    \"SP.Publishing.PointPublishingUser.Collection\": {\r\n        addOrUpdateUser: {\r\n            argNames: [\"loginName\", \"isOwner\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"userId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.RepostPage\": {\r\n        checkOut: {},\r\n        checkoutPage: {},\r\n        copy: {},\r\n        createNewsCopy: {},\r\n        demoteFromNews: {},\r\n        discardPage: {},\r\n        getVersion: {\r\n            argNames: [\"versionId\"],\r\n        },\r\n        promoteToNews: {},\r\n        publish: {},\r\n        saveDraft: {\r\n            argNames: [\"sitePage\"],\r\n        },\r\n        savePage: {\r\n            argNames: [\"pageStream\"],\r\n        },\r\n        savePageAsDraft: {\r\n            argNames: [\"pageStream\"],\r\n        },\r\n        savePageAsTemplate: {},\r\n        schedulePublish: {\r\n            argNames: [\"sitePage\"],\r\n        },\r\n        sharePagePreviewByEmail: {\r\n            argNames: [\"message\", \"recipientEmails\"],\r\n        },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Publishing.RepostPage.Collection\": {\r\n        isContentTypeAvailable: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.RichSharing\": {\r\n        sharePageByEmail: {\r\n            argNames: [\"url\", \"message\", \"recipientEmails\"],\r\n        },\r\n        shareSiteByEmail: {\r\n            argNames: [\"CustomDescription\", \"CustomTitle\", \"Message\", \"Url\", \"recipientEmails\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.Search\": {\r\n        newest: {\r\n            argNames: [\"startItemIndex\", \"itemLimit\"],\r\n        },\r\n        popular: {\r\n            argNames: [\"startItemIndex\", \"itemLimit\"],\r\n        },\r\n        query: {\r\n            argNames: [\"queryText\", \"startItemIndex\", \"itemLimit\", \"culture\"],\r\n        },\r\n        queryChannels: {\r\n            argNames: [\"queryText\", \"startItemIndex\", \"itemLimit\", \"culture\"],\r\n        },\r\n        related: {\r\n            argNames: [\"videoId\", \"startItemIndex\", \"itemLimit\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.SharePointHomeServiceManager\": {\r\n        getAcronymsAndColors: {\r\n            argNames: [\"labels\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.SitePage\": {\r\n        checkOut: {},\r\n        checkoutPage: {},\r\n        copy: {},\r\n        createNewsCopy: {},\r\n        demoteFromNews: {},\r\n        discardPage: {},\r\n        getVersion: {\r\n            argNames: [\"versionId\"],\r\n        },\r\n        promoteToNews: {},\r\n        publish: {},\r\n        query: { argNames: [\"oData\"] },\r\n        saveDraft: {\r\n            argNames: [\"sitePage\"],\r\n        },\r\n        savePage: {\r\n            argNames: [\"pageStream\"],\r\n        },\r\n        savePageAsDraft: {\r\n            argNames: [\"pageStream\"],\r\n        },\r\n        savePageAsTemplate: {},\r\n        schedulePublish: {\r\n            argNames: [\"sitePage\"],\r\n        },\r\n        sharePagePreviewByEmail: {\r\n            argNames: [\"message\", \"recipientEmails\"],\r\n        },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Publishing.SitePage.Collection\": {\r\n        createAppPage: {\r\n            argNames: [\"webPartDataAsJson\"]\r\n        },\r\n        createFullPageApp: {\r\n            argNames: [\"webPartDataAsJson\", \"title\", \"addToQuickLaunch\"]\r\n        },\r\n        ensureTitleResource: {},\r\n        feed: {\r\n            argNames: [\"promotedState\", \"published\", \"metadataFilter\", \"languageOverride\"],\r\n        },\r\n        feedTargeted: {\r\n            argNames: [\"promotedState\", \"published\", \"metadataFilter\", \"languageOverride\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        getByUniqueId: {\r\n            argNames: [\"uniqueId\"],\r\n        },\r\n        getByUrl: {\r\n            argNames: [\"url\"],\r\n        },\r\n        getPageColumnState: {\r\n            argNames: [\"url\"],\r\n        },\r\n        isSitePage: {\r\n            argNames: [\"url\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        templates: {},\r\n        updateAppPage: {\r\n            argNames: [\"pageId\", \"webPartDataAsJson\", \"title\", \"includeInNavigation\"]\r\n        },\r\n        updateFullPageApp: {\r\n            argNames: [\"serverRelativeUrl\", \"webPartDataAsJson\"]\r\n        }\r\n    },\r\n    \"SP.Publishing.SitePage3D\": {\r\n        checkOut: {},\r\n        checkoutPage: {},\r\n        copy: {},\r\n        createNewsCopy: {},\r\n        demoteFromNews: {},\r\n        discardPage: {},\r\n        getVersion: {\r\n            argNames: [\"versionId\"],\r\n        },\r\n        promoteToNews: {},\r\n        publish: {},\r\n        saveDraft: {\r\n            argNames: [\"sitePage\"],\r\n        },\r\n        savePage: {\r\n            argNames: [\"pageStream\"],\r\n        },\r\n        savePageAsDraft: {\r\n            argNames: [\"pageStream\"],\r\n        },\r\n        savePageAsTemplate: {},\r\n        schedulePublish: {\r\n            argNames: [\"sitePage\"],\r\n        },\r\n        sharePagePreviewByEmail: {\r\n            argNames: [\"message\", \"recipientEmails\"],\r\n        },\r\n        update: {},\r\n    },\r\n    \"SP.Publishing.SitePageMetadata.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.SitePageService\": {\r\n        addImage: {\r\n            argNames: [\"pageName\", \"imageFileName\", \"imageStream\"],\r\n        },\r\n        addImageFromExternalUrl: {\r\n            argNames: [\"pageName\", \"imageFileName\", \"externalUrl\", \"subFolderName\"],\r\n        },\r\n        canCreatePromotedPage: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Publishing.SpotlightChannel\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Publishing.SpotlightChannel.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.SpotlightVideo\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Publishing.SpotlightVideo.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.SubtitleFile.Collection\": {\r\n        add: {\r\n            argNames: [\"language\", \"extension\", \"stream\"],\r\n        },\r\n        getSubtitleFile: {\r\n            argNames: [\"name\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        remove: {\r\n            argNames: [\"name\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.VideoChannel\": {\r\n        getAllVideos: {\r\n            argNames: [\"skip\", \"limit\"],\r\n        },\r\n        getChannelPageUrl: {\r\n            argNames: [\"viewMode\"],\r\n        },\r\n        getMyVideos: {\r\n            argNames: [\"skip\", \"limit\"],\r\n        },\r\n        getPermissionGroup: {\r\n            argNames: [\"permission\"],\r\n        },\r\n        getVideoCount: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Publishing.VideoChannel.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.VideoItem\": {\r\n        customThumbnail: {},\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        getFile: {},\r\n        getPlaybackMetadata: {\r\n            argNames: [\"sdnConfiguration\"],\r\n        },\r\n        getPlaybackUrl: {\r\n            argNames: [\"videoFormat\"],\r\n        },\r\n        getStreamingKeyAccessToken: {},\r\n        getVideoDetailedViewCount: {},\r\n        getVideoEmbedCode: {\r\n            argNames: [\"width\", \"height\", \"autoplay\", \"showInfo\", \"makeResponsive\"],\r\n        },\r\n        getVideoViewProgressCount: {},\r\n        incrementVideoViewProgressCount: {\r\n            argNames: [\"percentageViewed\"],\r\n        },\r\n        incrementViewCount: {\r\n            argNames: [\"viewOrigin\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        setPeopleInMedia: {\r\n            argNames: [\"loginNames\"],\r\n        },\r\n        setVideoOwner: {\r\n            argNames: [\"id\"],\r\n        },\r\n        subtitles: {},\r\n        thumbnailStream: {\r\n            argNames: [\"preferredWidth\"],\r\n        },\r\n        thumbnails: {\r\n            argNames: [\"preferredWidth\"],\r\n        },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        uploadCustomThumbnail: {\r\n            argNames: [\"fileExtension\", \"customVideoThumbnail\"],\r\n        },\r\n    },\r\n    \"SP.Publishing.VideoItem.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.VideoPermissionGroup\": {\r\n        hasCurrentUser: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.VideoServiceManager\": {\r\n        getChannels: {\r\n            argNames: [\"startIndex\", \"limit\"],\r\n        },\r\n        getPermissionGroup: {\r\n            argNames: [\"permission\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Publishing.VideoThumbnail.Collection\": {\r\n        getByIndex: {\r\n            argNames: [\"choice\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.PushNotificationSubscriber\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.PushNotificationSubscriber.Collection\": {\r\n        getByStoreId: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.RecycleBinItem\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        moveToSecondStage: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        restore: {},\r\n    },\r\n    \"SP.RecycleBinItem.Collection\": {\r\n        deleteAll: {},\r\n        deleteAllSecondStageItems: {},\r\n        deleteByIds: {\r\n            argNames: [\"ids\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        moveAllToSecondStage: {},\r\n        moveToSecondStageByIds: {\r\n            argNames: [\"ids\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        restoreAll: {},\r\n        restoreByIds: {\r\n            argNames: [\"ids\"],\r\n        },\r\n    },\r\n    \"SP.RegionalSettings\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.RelatedField.Collection\": {\r\n        getByFieldId: {\r\n            argNames: [\"fieldId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.RemoteWeb\": {\r\n        getFileByServerRelativePath: {\r\n            argNames: [\"serverRelatvieFilePath\"],\r\n        },\r\n        getFileByServerRelativeUrl: {\r\n            argNames: [\"serverRelativeFileUrl\"],\r\n        },\r\n        getFileByUrl: {\r\n            argNames: [\"fileUrl\"],\r\n        },\r\n        getFolderByServerRelativeUrl: {\r\n            argNames: [\"serverRelativeUrl\"],\r\n        },\r\n        getGroupById: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n        getListById: {\r\n            argNames: [\"listGuid\"],\r\n        },\r\n        getListByServerRelativeUrl: {\r\n            argNames: [\"serverRelativeUrl\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.RequestContext\": {\r\n        getRemoteContext: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.RoleAssignment\": {\r\n        properties: [\r\n            \"Member\", \"RoleDefinitionBindings|SP.RoleDefinition.Collection\"\r\n        ],\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.RoleAssignment\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.RoleAssignment.Collection\": {\r\n        addRoleAssignment: {\r\n            argNames: [\"principalId\", \"roleDefId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        getByPrincipalId: {\r\n            argNames: [\"principalId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.RoleAssignment\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        removeRoleAssignment: {\r\n            argNames: [\"principalId\", \"roleDefId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n    },\r\n    \"SP.RoleDefinition\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.RoleDefinition\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.RoleDefinition.Collection\": {\r\n        add: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.RoleDefinition\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.RoleDefinition\"\r\n        },\r\n        getByName: {\r\n            argNames: [\"name\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.RoleDefinition\"\r\n        },\r\n        getByType: {\r\n            argNames: [\"roleType\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.RoleDefinition\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recreateMissingDefaultRoleDefinitions: {},\r\n        removeAll: {},\r\n    },\r\n    \"SP.ScriptSafeDomain\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n    },\r\n    \"SP.ScriptSafeDomain.Collection\": {\r\n        create: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getByDomainName: {\r\n            argNames: [\"domainName\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.SecurableObject\": {\r\n        breakRoleInheritance: {\r\n            argNames: [\"copyRoleAssignments\", \"clearSubscopes\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        resetRoleInheritance: {},\r\n    },\r\n    \"SP.Site\": {\r\n        properties: [\r\n            \"EventReceivers|SP.EventReceiverDefinition.Collection|('[Name]')|SP.EventReceiverDefinition\", \"Features|SP.Feature.Collection|('[Name]')|SP.Feature\", \"Owner|SP.User\", \"RootWeb|SP.Web\",\r\n            \"UserCustomActions|SP.UserCustomAction.Collection|('[Name]')|SP.UserCustomAction\"\r\n        ],\r\n        createCopyJob: {\r\n            argNames: [\"exportObjectUris\", \"destinationUri\", \"options\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        createCopyJobs: {\r\n            argNames: [\"exportObjectUris\", \"destinationUri\", \"options\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        createMigrationIngestionJob: {\r\n            argNames: [\"gWebId\", \"azureContainerSourceUri\", \"azureContainerManifestUri\", \"azureQueueReportUri\", \"ingestionTaskKey\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        createMigrationJob: {\r\n            argNames: [\"gWebId\", \"azureContainerSourceUri\", \"azureContainerManifestUri\", \"azureQueueReportUri\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        createMigrationJobEncrypted: {\r\n            argNames: [\"gWebId\", \"azureContainerSourceUri\", \"azureContainerManifestUri\", \"azureQueueReportUri\", \"options\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        createPreviewSPSite: {\r\n            argNames: [\"upgrade\", \"sendemail\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        createSPAsyncReadJob: {\r\n            argNames: [\"url\", \"readOptions\", \"encryptionOption\", \"azureContainerManifestUri\", \"azureQueueReportUri\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        deleteMigrationJob: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        extendUpgradeReminderDate: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        getBringYourOwnKeySiteStatus: {},\r\n        getBringYourOwnKeyTenantStatus: {},\r\n        getCatalog: {\r\n            argNames: [\"typeCatalog\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        getChanges: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getCopyJobProgress: {\r\n            argNames: [\"copyJobInfo\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getHubSiteJoinApprovalCorrelationId: {},\r\n        getMigrationJobStatus: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getMigrationStatus: {},\r\n        getRecycleBinItems: {\r\n            argNames: [\"pagingInfo\", \"rowLimit\", \"isAscending\", \"orderBy\", \"itemState\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInBody\r\n        },\r\n        getWebPath: {\r\n            argNames: [\"siteId\", \"webId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getWebTemplates: {\r\n            argNames: [\"LCID\", \"overrideCompatLevel\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        invalidate: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        joinHubSite: {\r\n            argNames: [\"hubSiteId\", \"approvalToken\", \"approvalCorrelationId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInBody\r\n        },\r\n        multiGeoCopyJob: {\r\n            argNames: [\"jobId\", \"userId\", \"binaryPayload\"],\r\n        },\r\n        needsUpgradeByType: {\r\n            argNames: [\"versionUpgrade\", \"recursive\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        onHubSiteJoinRequestApproved: {\r\n            argNames: [\"joiningSiteId\"],\r\n        },\r\n        onHubSiteJoinRequestCanceled: {\r\n            argNames: [\"approvalCorrelationId\"],\r\n        },\r\n        onHubSiteJoinRequestStarted: {\r\n            argNames: [\"approvalCorrelationId\"],\r\n        },\r\n        onboardTenantForBringYourOwnKey: {\r\n            argNames: [\"keyInfo\"],\r\n        },\r\n        openWeb: {\r\n            argNames: [\"strUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        openWebById: {\r\n            argNames: [\"gWebId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        openWebUsingPath: {\r\n            argNames: [\"path\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        provisionMigrationContainers: {},\r\n        provisionMigrationQueue: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        recoverTenantForBringYourOwnKey: {\r\n            argNames: [\"keyInfo\"],\r\n        },\r\n        registerHubSite: {\r\n            argNames: [\"creationInformation\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        rollTenantBringYourOwnKey: {\r\n            argNames: [\"keyType\", \"keyVaultInfo\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        runHealthCheck: {\r\n            argNames: [\"ruleId\", \"bRepair\", \"bRunAlways\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        runUpgradeSiteSession: {\r\n            argNames: [\"versionUpgrade\", \"queueOnly\", \"sendEmail\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        unregisterHubSite: {},\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.Site\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        updateClientObjectModelUseRemoteAPIsPermissionSetting: {\r\n            argNames: [\"requireUseRemoteAPIs\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        validateHubSiteJoinApprovalToken: {\r\n            argNames: [\"joiningSiteId\", \"approvalToken\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n    },\r\n    \"SP.Social.SocialFeedManager\": {\r\n        createFileAttachment: {\r\n            argNames: [\"name\", \"description\", \"fileData\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        createImageAttachment: {\r\n            argNames: [\"name\", \"description\", \"imageData\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        createPost: {\r\n            argNames: [\"targetId\", \"creationData\"],\r\n            requestType: utils_1.RequestType.PostWithArgsAndData\r\n        },\r\n        deletePost: {\r\n            argNames: [\"postId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        getAllLikers: {\r\n            argNames: [\"postId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getFeed: {\r\n            argNames: [\"type\", \"options\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getFeedFor: {\r\n            argNames: [\"actorId\", \"options\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getFullThread: {\r\n            argNames: [\"threadId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getMentions: {\r\n            argNames: [\"clearUnreadMentions\", \"options\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getPreview: {\r\n            argNames: [\"itemUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getPreviewImage: {\r\n            argNames: [\"url\", \"key\", \"iv\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getUnreadMentionCount: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        likePost: {\r\n            argNames: [\"postId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        lockThread: {\r\n            argNames: [\"threadId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        suppressThreadNotifications: {\r\n            argNames: [\"threadId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        unlikePost: {\r\n            argNames: [\"postId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        unlockThread: {\r\n            argNames: [\"threadId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n    },\r\n    \"SP.Social.SocialFollowingManager\": {\r\n        follow: {\r\n            argNames: [\"actor\"],\r\n            name: \"follow(actor=@v)?@v='[[actor]]'\",\r\n            requestType: utils_1.RequestType.PostReplace\r\n        },\r\n        getFollowed: {\r\n            argNames: [\"types\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        getFollowedCount: {\r\n            argNames: [\"types\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        getFollowers: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        getSuggestions: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        isFollowed: {\r\n            argNames: [\"actor\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        stopFollowing: {\r\n            argNames: [\"actor\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n    },\r\n    \"SP.Social.SocialRestActor\": {\r\n        feed: {\r\n            argNames: [\"MaxThreadCount\", \"NewerThan\", \"OlderThan\", \"SortOrder\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        likes: {\r\n            argNames: [\"MaxThreadCount\", \"NewerThan\", \"OlderThan\", \"SortOrder\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        mentionFeed: {\r\n            argNames: [\"MaxThreadCount\", \"NewerThan\", \"OlderThan\", \"SortOrder\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        news: {\r\n            argNames: [\"MaxThreadCount\", \"NewerThan\", \"OlderThan\", \"SortOrder\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        organizationFeed: {\r\n            argNames: [\"MaxThreadCount\", \"NewerThan\", \"OlderThan\", \"SortOrder\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        timelineFeed: {\r\n            argNames: [\"MaxThreadCount\", \"NewerThan\", \"OlderThan\", \"SortOrder\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        unreadMentionCount: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n    },\r\n    \"SP.Social.SocialRestFeed\": {\r\n        clearUnReadMentionCount: {\r\n            argNames: [\"MaxThreadCount\", \"NewerThan\", \"OlderThan\", \"SortOrder\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        post: {\r\n            argNames: [\"restCreationData\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n    },\r\n    \"SP.Social.SocialRestFeedManager\": {\r\n        actor: {\r\n            argNames: [\"item\"],\r\n            name: \"actor(item=@v)?@v='[[item]]'\",\r\n            requestType: utils_1.RequestType.GetReplace,\r\n            returnType: \"SP.Social.SocialRestActor\"\r\n        },\r\n        my: {\r\n            requestType: utils_1.RequestType.Get,\r\n            returnType: \"SP.Social.SocialRestActor\"\r\n        },\r\n        post: {\r\n            argNames: [\"ID\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly,\r\n        },\r\n    },\r\n    \"SP.Social.SocialRestFollowingManager\": {\r\n        follow: {\r\n            argNames: [\"AccountName\", \"ActorType\", \"ContentUri\", \"Id\", \"TagGuid\"],\r\n            name: \"follow(AccountName=@v, ActorType='[[ActorType]]', ContentUri='[[ContentUri]]', Id='[[Id]]', TagGuid='[[TagGuid]]')?@v='[[AccountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        followed: {\r\n            argNames: [\"types\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        followedCount: {\r\n            argNames: [\"types\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        followers: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        isFollowed: {\r\n            argNames: [\"AccountName\", \"ActorType\", \"ContentUri\", \"Id\", \"TagGuid\"],\r\n            name: \"isFollowed(AccountName=@v, ActorType='[[ActorType]]', ContentUri='[[ContentUri]]', Id='[[Id]]', TagGuid='[[TagGuid]]')?@v='[[AccountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        my: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        stopFollowing: {\r\n            argNames: [\"AccountName\", \"ActorType\", \"ContentUri\", \"Id\", \"TagGuid\"],\r\n            name: \"stopFollowing(AccountName=@v, ActorType='[[ActorType]]', ContentUri='[[ContentUri]]', Id='[[Id]]', TagGuid='[[TagGuid]]')?@v='[[AccountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        suggestions: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n    },\r\n    \"SP.Social.SocialRestThread\": {\r\n        delete: {\r\n            argNames: [\"ID\"],\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        like: {\r\n            argNames: [\"ID\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        likers: {\r\n            argNames: [\"ID\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        lock: {\r\n            argNames: [\"ID\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        reply: {\r\n            argNames: [\"restCreationData\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        unLike: {\r\n            argNames: [\"ID\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        unLock: {\r\n            argNames: [\"ID\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n    },\r\n    \"SP.SPAppLicenseManager\": {\r\n        checkLicense: {\r\n            argNames: [\"productId\"],\r\n        }\r\n    },\r\n    \"SP.SPHSite\": {\r\n        details: {}\r\n    },\r\n    \"SP.Taxonomy.TaxonomyField\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        disableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enableIndex: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setShowInDisplayForm: {\r\n            argNames: [\"value\"],\r\n        },\r\n        setShowInEditForm: {\r\n            argNames: [\"value\"],\r\n        },\r\n        setShowInNewForm: {\r\n            argNames: [\"value\"],\r\n        },\r\n    },\r\n    \"SP.ThemeInfo\": {\r\n        getThemeFontByName: {\r\n            argNames: [\"name\", \"lcid\"],\r\n        },\r\n        getThemeShadeByName: {\r\n            argNames: [\"name\"],\r\n        },\r\n    },\r\n    \"SP.TimeZone\": {\r\n        localTimeToUTC: {\r\n            argNames: [\"date\"],\r\n        },\r\n        uTCToLocalTime: {\r\n            argNames: [\"date\"],\r\n        },\r\n    },\r\n    \"SP.TimeZone.Collection\": {\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Translation.SyncTranslator\": {\r\n        translate: {\r\n            argNames: [\"inputFile\", \"outputFile\"],\r\n        },\r\n        translateStream: {\r\n            argNames: [\"inputFile\", \"fileExtension\"],\r\n        },\r\n    },\r\n    \"SP.Translation.TranslationJob\": {\r\n        translateFile: {\r\n            argNames: [\"inputFile\", \"outputFile\"],\r\n        },\r\n        translateFolder: {\r\n            argNames: [\"inputFolder\", \"outputFolder\", \"recursion\"],\r\n        },\r\n        translateLibrary: {\r\n            argNames: [\"inputLibrary\", \"outputLibrary\"],\r\n        },\r\n    },\r\n    \"SP.Translation.TranslationJobStatus\": {\r\n        getAllItems: {},\r\n    },\r\n    \"SP.TranslationStatusCollection\": {\r\n        create: {\r\n            argNames: [\"request\"],\r\n        },\r\n        updateTranslationLanguages: {},\r\n    },\r\n    \"SP.User\": {\r\n        properties: [\r\n            \"Groups|SP.Group.Collection|([Name])|SP.Group\"\r\n        ],\r\n        expire: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.User\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.User.Collection\": {\r\n        add: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.User\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getByEmail: {\r\n            argNames: [\"emailAddress\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.User\"\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.User\"\r\n        },\r\n        getByLoginName: {\r\n            argNames: [\"loginName\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.User\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        removeById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        removeByLoginName: {\r\n            argNames: [\"loginName\"],\r\n            name: \"removeByLoginName(@v)?@v='[[loginName]]'\",\r\n            requestType: utils_1.RequestType.PostReplace\r\n        },\r\n    },\r\n    \"SP.UserCustomAction\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.UserCustomAction\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.UserCustomAction.Collection\": {\r\n        add: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.UserCustomAction\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        clear: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.UserCustomAction\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.UserProfiles.FollowedContent\": {\r\n        findAndUpdateFollowedGroup: {\r\n            argNames: [\"groupId\"],\r\n        },\r\n        findAndUpdateFollowedItem: {\r\n            argNames: [\"url\"],\r\n        },\r\n        followItem: {\r\n            argNames: [\"item\"],\r\n        },\r\n        getFollowedStatus: {\r\n            argNames: [\"url\"],\r\n        },\r\n        getGroups: {\r\n            argNames: [\"rowLimit\"],\r\n        },\r\n        getItem: {\r\n            argNames: [\"url\"],\r\n        },\r\n        getItems: {\r\n            argNames: [\"options\", \"subtype\"],\r\n        },\r\n        hasGroupMembershipChangedAndSyncChanges: {},\r\n        isFollowed: {\r\n            argNames: [\"url\"],\r\n        },\r\n        refreshFollowedItem: {\r\n            argNames: [\"item\"],\r\n        },\r\n        setItemPinState: {\r\n            argNames: [\"uri\", \"groupId\", \"pinState\"],\r\n        },\r\n        stopFollowing: {\r\n            argNames: [\"url\"],\r\n        },\r\n        updateFollowedGroupForUser: {\r\n            argNames: [\"contextUri\", \"groupId\", \"loginName\"],\r\n        },\r\n    },\r\n    \"SP.UserProfiles.PeopleManager\": {\r\n        amIFollowedBy: {\r\n            argNames: [\"accountName\"],\r\n            name: \"amIFollowedBy(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        amIFollowing: {\r\n            argNames: [\"accountName\"],\r\n            name: \"amIFollowing(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        follow: {\r\n            argNames: [\"accountName\"],\r\n            name: \"follow(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.PostReplace\r\n        },\r\n        followTag: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        getDefaultDocumentLibrary: {\r\n            argNames: [\"accountName\", \"createSiteIfNotExists\", \"siteCreationPriority\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getFollowedTags: {\r\n            argNames: [\"cTagsToFetch\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getFollowersFor: {\r\n            argNames: [\"accountName\"],\r\n            name: \"getFollowersFor(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getMyFollowers: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        getMyProperties: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        getMySuggestions: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        getPeopleFollowedBy: {\r\n            argNames: [\"accountName\"],\r\n            name: \"getPeopleFollowedBy(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getPeopleFollowedByMe: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        getPropertiesFor: {\r\n            argNames: [\"accountName\"],\r\n            name: \"getPropertiesFor(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getSPUserInformation: {\r\n            argNames: [\"accountName\", \"siteId\"],\r\n            name: \"getSPUserInformation(accountName=@v, siteId='[[siteId]]')?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getUserProfileProperties: {\r\n            argNames: [\"accountName\"],\r\n            name: \"getUserProfileProperties(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getUserProfilePropertyFor: {\r\n            argNames: [\"accountName\", \"propertyName\"],\r\n            name: \"getUserProfilePropertyFor(accountName=@v, propertyName='[[propertyName]]')?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        hardDeleteUserProfile: {\r\n            argNames: [\"accountName\", \"userId\"],\r\n            name: \"hardDeleteUserProfile(accountName=@v, userId='[[userId]]')?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        hideSuggestion: {\r\n            argNames: [\"accountName\"],\r\n            name: \"hideSuggestion(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.PostReplace\r\n        },\r\n        removeSPUserInformation: {\r\n            argNames: [\"accountName\", \"siteId\", \"redactName\"],\r\n            name: \"removeSPUserInformation(accountName=@v, siteId='[[siteId]]', redactName='[[redactName]]')?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        setMultiValuedProfileProperty: {\r\n            argNames: [\"accountName\", \"propertyName\", \"propertyValues\"],\r\n            name: \"setMultiValuedProfileProperty(accountName=@v, propertyName='[[propertyName]]', propertyValues='[[propertyValues]]')?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        setMyProfilePicture: {\r\n            argNames: [\"picture\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        setSingleValueProfileProperty: {\r\n            argNames: [\"accountName\", \"propertyName\", \"propertyValue\"],\r\n            name: \"setSingleValueProfileProperty(accountName=@v, propertyName='[[propertyName]]', propertyValue='[[propertyValue]]')?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        stopFollowing: {\r\n            argNames: [\"accountName\"],\r\n            name: \"stopFollowing(@v)?@v='[[accountName]]'\",\r\n            requestType: utils_1.RequestType.PostWithArgsInQSAsVar\r\n        },\r\n        stopFollowingTag: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n    },\r\n    \"SP.UserProfiles.PersonalCache\": {\r\n        deleteCacheItemsAsync: {\r\n            argNames: [\"cacheItems\"],\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        deleteCacheItemsAsync2: {\r\n            argNames: [\"cacheItems\", \"mySiteUrl\"],\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        loadUserProfile: {\r\n            argNames: [\"email\"],\r\n        },\r\n        readCache: {\r\n            argNames: [\"folderPath\"],\r\n        },\r\n        readCache2: {\r\n            argNames: [\"folderPath\", \"mySiteUrl\"],\r\n        },\r\n        readCacheOrCreate: {\r\n            argNames: [\"folderPath\", \"requiredCacheKeys\", \"createIfMissing\"],\r\n        },\r\n        readCacheOrCreate2: {\r\n            argNames: [\"folderPath\", \"requiredCacheKeys\", \"createIfMissing\", \"mySiteUrl\"],\r\n        },\r\n        readCacheOrCreateOrderById: {\r\n            argNames: [\"folderPath\", \"requiredCacheKeys\", \"createIfMissing\"],\r\n        },\r\n        readCacheOrCreateOrderById2: {\r\n            argNames: [\"folderPath\", \"requiredCacheKeys\", \"createIfMissing\", \"mySiteUrl\"],\r\n        },\r\n        writeCache: {\r\n            argNames: [\"cacheItems\"],\r\n        },\r\n        writeCache2: {\r\n            argNames: [\"cacheItems\", \"mySiteUrl\"],\r\n        },\r\n    },\r\n    \"SP.UserProfiles.ProfileImageStore\": {\r\n        saveUploadedFile: {\r\n            argNames: [\"profileType\", \"fileNamePrefix\", \"isFeedAttachment\", \"clientFilePath\", \"fileSize\", \"fileStream\"],\r\n        },\r\n    },\r\n    \"SP.UserProfiles.ProfileLoader\": {\r\n        createPersonalSiteEnqueueBulk: {\r\n            argNames: [\"emailIDs\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getUserProfile: {\r\n            requestType: utils_1.RequestType.Post,\r\n            returnType: \"SP.UserProfiles.UserProfile\"\r\n        },\r\n    },\r\n    \"SP.UserProfiles.UserProfile\": {\r\n        properties: [\"PersonalSite|site\"],\r\n        createPersonalSite: {\r\n            argNames: [\"lcid\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        createPersonalSiteEnque: {\r\n            argNames: [\"isInteractive\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        createPersonalSiteFromWorkItem: {\r\n            argNames: [\"workItemType\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        setMySiteFirstRunExperience: {\r\n            argNames: [\"value\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        shareAllSocialData: {\r\n            argNames: [\"shareAll\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n    },\r\n    \"SP.UserProfiles.UserProfilePropertiesForUser\": {\r\n        getPropertyNames: {},\r\n    },\r\n    \"SP.UserResource\": {\r\n        getValueForUICulture: {\r\n            argNames: [\"cultureName\"],\r\n        },\r\n        setValueForUICulture: {\r\n            argNames: [\"cultureName\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.UserSolution.Collection\": {\r\n        add: {\r\n            argNames: [\"solutionGalleryItemId\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Utilities.ThemeManager\": {\r\n        addTenantTheme: {\r\n            argNames: [\"name\", \"themeJson\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        applyTheme: {\r\n            argNames: [\"name\", \"themeJson\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        deleteTenantTheme: {\r\n            argNames: [\"name\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getAvailableThemes: {},\r\n        getHideDefaultThemes: {},\r\n        getTenantTheme: {\r\n            argNames: [\"name\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInBody\r\n        },\r\n        getTenantThemingOptions: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        setHideDefaultThemes: {\r\n            argNames: [\"hideDefaultThemes\"],\r\n        },\r\n        updateTenantTheme: {\r\n            argNames: [\"name\", \"themeJson\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n    },\r\n    \"SP.View\": {\r\n        properties: [\r\n            \"ViewFields|SP.ViewFieldCollection\"\r\n        ],\r\n        addToSpotlight: {\r\n            argNames: [\"itemId\", \"folderPath\", \"afterItemId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        removeFromSpotlight: {\r\n            argNames: [\"itemId\", \"folderPath\"],\r\n        },\r\n        renderAsHtml: {},\r\n        setViewXml: {\r\n            argNames: [\"viewXml\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.View\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.View.Collection\": {\r\n        add: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.View\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"guidId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.View\"\r\n        },\r\n        getByTitle: {\r\n            argNames: [\"strTitle\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.View\"\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.ViewFieldCollection\": {\r\n        addViewField: {\r\n            argNames: [\"strField\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        moveViewFieldTo: {\r\n            argNames: [\"field\", \"index\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        removeAllViewFields: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        removeViewField: {\r\n            argNames: [\"strField\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n    },\r\n    \"SP.Web\": {\r\n        properties: [\r\n            \"AllProperties\", \"AppTiles\", \"AssociatedMemberGroup|SP.Group\", \"AssociatedOwnerGroup|SP.Group\",\r\n            \"AssociatedVisitorGroup|SP.Group\", \"Author|SP.User\", \"AvailableContentTypes|SP.ContentType.Collection\", \"AvailableFields|SP.Field.Collection\",\r\n            \"ClientWebParts\", \"ContentTypes|SP.ContentType.Collection|('[Name]')|SP.ContentType\", \"CurrentUser|SP.User\", \"DataLeakagePreventionStatusInfo\",\r\n            \"DescriptionResource\", \"EffectiveBasePermissions\", \"EventReceivers|SP.EventReceiverDefinition.Collection|('[Name]')|SP.EventReceiverDefinition\",\r\n            \"Features|SP.Feature.Collection|('[Name]')|SP.Feature\", \"Fields|SP.Field.Collection|/getByInternalNameOrTitle('[Name]')|SP.Field\",\r\n            \"FirstUniqueAncestorSecurableObject\", \"Folders|SP.Folder.Collection|/getByUrl('[Name]')|SP.Folder\", \"Lists|SP.List.Collection|/getByTitle('[Name]')|SP.List\",\r\n            \"ListTemplates|SP.ListTemplate.Collection|('[Name]')|SP.ListTemplate\", \"Navigation|SP.Navigation\", \"ParentWeb\",\r\n            \"PushNotificationSubscribers\", \"RecycleBin\", \"RegionalSettings\", \"RoleAssignments|SP.RoleAssignment.Collection|([Name])|SP.RoleAssignment\",\r\n            \"RoleDefinitions|SP.RoleDefinition.Collection|/getByName('[Name]')|SP.RoleDefinition\", \"RootFolder|SP.Folder|/getByUrl('[Name]')|SP.File\",\r\n            \"SiteGroups|SP.Group.Collection|/getByName('[Name]')|SP.Group\", \"SiteUserInfoList\", \"SiteUsers|SP.User.Collection|/getById([Name])|SP.User\",\r\n            \"TenantAppCatalog|tenantappcatalog\", \"ThemeInfo\", \"TitleResource\", \"UserCustomActions|SP.UserCustomAction.Collection|('[Name]')|SP.UserCustomAction\",\r\n            \"WebInfos|SP.WebInformation.Collection\", \"Webs|SP.Web.Collection\", \"WorkflowAssociations\", \"WorkflowTemplates\"\r\n        ],\r\n        addCrossFarmMessage: {\r\n            argNames: [\"messagePayloadBase64\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        addSupportedUILanguage: {\r\n            argNames: [\"lcid\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        applyTheme: {\r\n            argNames: [\"colorPaletteUrl\", \"fontSchemeUrl\", \"backgroundImageUrl\", \"shareGenerated\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        applyWebTemplate: {\r\n            argNames: [\"webTemplate\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInQSAsVar\r\n        },\r\n        breakRoleInheritance: {\r\n            argNames: [\"copyRoleAssignments\", \"clearSubscopes\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        createDefaultAssociatedGroups: {\r\n            argNames: [\"userLogin\", \"userLogin2\", \"groupNameSeed\"],\r\n        },\r\n        defaultDocumentLibrary: {},\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        doesPushNotificationSubscriberExist: {\r\n            argNames: [\"deviceAppInstanceId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        doesUserHavePermissions: {\r\n            argNames: [\"high\", \"low\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQSAsVar\r\n        },\r\n        ensureUser: {\r\n            argNames: [\"logonName\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        executeRemoteLOB: {\r\n            argNames: [\"inputStream\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getAllClientSideComponents: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        getAppBdcCatalog: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        getAppBdcCatalogForAppInstance: {\r\n            argNames: [\"appInstanceId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        getAppInstanceById: {\r\n            argNames: [\"appInstanceId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getAppInstancesByProductId: {\r\n            argNames: [\"productId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        getAvailableWebTemplates: {\r\n            argNames: [\"lcid\", \"doIncludeCrossLanguage\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        getCatalog: {\r\n            argNames: [\"typeCatalog\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.List\"\r\n        },\r\n        getChanges: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getClientSideComponents: {\r\n            argNames: [\"components\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getClientSideComponentsById: {\r\n            argNames: [\"componentIds\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getClientSideWebParts: {\r\n            argNames: [\"includeErrors\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getCustomListTemplates: {},\r\n        getEntity: {\r\n            argNames: [\"namespace\", \"name\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        getFileByGuestUrl: {\r\n            argNames: [\"guestUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFileByGuestUrlEnsureAccess: {\r\n            argNames: [\"guestUrl\", \"ensureAccess\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFileByGuestUrlExtended: {\r\n            argNames: [\"guestUrl\", \"requestSettings\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFileById: {\r\n            argNames: [\"uniqueId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFileByLinkingUrl: {\r\n            argNames: [\"linkingUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFileByServerRelativePath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFileByServerRelativeUrl: {\r\n            argNames: [\"serverRelativeUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.File\"\r\n        },\r\n        getFileByUrl: {\r\n            argNames: [\"fileUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFileByWOPIFrameUrl: {\r\n            argNames: [\"wopiFrameUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFolderByGuestUrl: {\r\n            argNames: [\"guestUrl\", \"ensureAccess\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFolderByGuestUrlExtended: {\r\n            argNames: [\"guestUrl\", \"requestSettings\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFolderById: {\r\n            argNames: [\"uniqueId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFolderByServerRelativePath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getFolderByServerRelativeUrl: {\r\n            argNames: [\"serverRelativeUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.Folder\"\r\n        },\r\n        getList: {\r\n            argNames: [\"strUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.List\"\r\n        },\r\n        getListItem: {\r\n            argNames: [\"strUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getListItemByResourceId: {\r\n            argNames: [\"resourceId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getListItemUsingPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getListUsingPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getNewsList: {\r\n            argNames: [\"allowCreate\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getPushNotificationSubscriber: {\r\n            argNames: [\"deviceAppInstanceId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getPushNotificationSubscribersByArgs: {\r\n            argNames: [\"customArgs\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQSAsVar\r\n        },\r\n        getPushNotificationSubscribersByUser: {\r\n            argNames: [\"userName\"],\r\n            requestType: utils_1.RequestType.GetWithArgsInQSAsVar\r\n        },\r\n        getRecycleBinItems: {\r\n            argNames: [\"pagingInfo\", \"rowLimit\", \"isAscending\", \"orderBy\", \"itemState\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getRecycleBinItemsByQueryInfo: {\r\n            argNames: [\"IsAscending\", \"ItemState\", \"OrderBy\", \"PagingInfo\", \"RowLimit\", \"ShowOnlyMyItems\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getRegionalDateTimeSchema: {},\r\n        getSPAppContextAsStream: {},\r\n        getSharingLinkData: {\r\n            argNames: [\"linkUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getStorageEntity: {\r\n            argNames: [\"key\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getSubwebsFilteredForCurrentUser: {\r\n            argNames: [\"nWebTemplateFilter\", \"nConfigurationFilter\"],\r\n            requestType: utils_1.RequestType.GetWithArgs,\r\n            returnType: \"SP.WebInformation.Collection\"\r\n        },\r\n        getUserById: {\r\n            argNames: [\"userId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n            returnType: \"SP.User\"\r\n        },\r\n        getUserEffectivePermissions: {\r\n            argNames: [\"userName\"],\r\n            name: \"getUserEffectivePermissions(@user)?@user='[[userName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getViewFromPath: {\r\n            argNames: [\"DecodedUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        getViewFromUrl: {\r\n            argNames: [\"listUrl\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        hubSiteData: {\r\n            argNames: [\"forceRefresh\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        hubSiteDataAsStream: {\r\n            argNames: [\"forceRefresh\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly,\r\n        },\r\n        incrementSiteClientTag: {},\r\n        loadAndInstallApp: {\r\n            argNames: [\"appPackageStream\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        loadAndInstallAppInSpecifiedLocale: {\r\n            argNames: [\"appPackageStream\", \"installationLocaleLCID\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        loadApp: {\r\n            argNames: [\"appPackageStream\", \"installationLocaleLCID\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        mapToIcon: {\r\n            argNames: [\"fileName\", \"progId\", \"size\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        pageContextCore: {},\r\n        pageContextInfo: {\r\n            argNames: [\"includeODBSettings\", \"emitNavigationInfo\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        parseDateTime: {\r\n            argNames: [\"value\", \"displayFormat\", \"calendarType\"],\r\n            requestType: utils_1.RequestType.GetWithArgs\r\n        },\r\n        processExternalNotification: {\r\n            argNames: [\"stream\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        registerPushNotificationSubscriber: {\r\n            argNames: [\"deviceAppInstanceId\", \"serviceToken\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        removeStorageEntity: {\r\n            argNames: [\"key\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        removeSupportedUILanguage: {\r\n            argNames: [\"lcid\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        resetRoleInheritance: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        setAccessRequestSiteDescriptionAndUpdate: {\r\n            argNames: [\"description\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        setStorageEntity: {\r\n            argNames: [\"key\", \"value\", \"description\", \"comments\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        setUseAccessRequestDefaultAndUpdate: {\r\n            argNames: [\"useAccessRequestDefault\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        syncFlowInstances: {\r\n            argNames: [\"targetWebUrl\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        syncFlowTemplates: {\r\n            argNames: [\"category\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        syncHubSiteTheme: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        unregisterPushNotificationSubscriber: {\r\n            argNames: [\"deviceAppInstanceId\"],\r\n            requestType: utils_1.RequestType.PostWithArgsValueOnly\r\n        },\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.Web\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        uploadImage: {\r\n            argNames: [\"listTitle\", \"imageName\", \"contentStream\"],\r\n            name: \"uploadImage(listTitle=guid'[[listTitle]]', imageName=[[imageName]])\",\r\n            requestType: utils_1.RequestType.PostReplaceWithData\r\n        },\r\n    },\r\n    \"SP.Web.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: \"SP.Web\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.WebInformation.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n            metadataType: \"SP.WebCreationInformation\",\r\n            name: \"\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.WebParts.LimitedWebPartManager\": {\r\n        properties: [\r\n            \"WebParts|SP.WebParts.WebPartDefinition.Collection|/([Id])|SP.WebParts.WebPartDefinition\"\r\n        ],\r\n        exportWebPart: {\r\n            argNames: [\"webPartId\"],\r\n            requestType: utils_1.RequestType.GetWithArgsValueOnly\r\n        },\r\n        importWebPart: {\r\n            argNames: [\"webPartXml\"],\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.WebParts.WebPartDefinition\": {\r\n        closeWebPart: {},\r\n        deleteWebPart: {},\r\n        moveWebPartTo: {\r\n            argNames: [\"zoneID\", \"zoneIndex\"],\r\n        },\r\n        openWebPart: {\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        saveWebPartChanges: {},\r\n    },\r\n    \"SP.WebParts.WebPartDefinition.Collection\": {\r\n        getByControlId: {\r\n            argNames: [\"controlId\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"id\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.WebTemplate.Collection\": {\r\n        getByName: {\r\n            argNames: [\"name\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.WorkManagement.OM.BaseSession\": {\r\n        addAttributeToTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        beginCacheRefresh: {},\r\n        beginExchangeSync: {},\r\n        createPersonalTaskAndPromoteToProviderTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\"],\r\n        },\r\n        createTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\", \"editUrl\"],\r\n        },\r\n        deleteTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getCalloutInfo: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getRefreshHealthInfo: {},\r\n        getRefreshHistory: {\r\n            argNames: [\"since\"],\r\n        },\r\n        getRefreshStatus: {\r\n            argNames: [\"refreshId\"],\r\n        },\r\n        isExchangeJobPending: {},\r\n        pinTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        promotePersonalTaskToProviderTaskInLocation: {\r\n            argNames: [\"taskKey\", \"locationId\"],\r\n        },\r\n        readAllNonTaskData: {},\r\n        refreshSingleTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        removeAttributeFromTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        removePinOnTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        updateTaskWithLocalizedValue: {\r\n            argNames: [\"taskKey\", \"field\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.WorkManagement.OM.LocationOrientedSortableSession\": {\r\n        addAttributeToTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        beginCacheRefresh: {},\r\n        beginExchangeSync: {},\r\n        createPersonalTaskAndPromoteToProviderTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\"],\r\n        },\r\n        createTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\", \"editUrl\"],\r\n        },\r\n        deleteTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getCalloutInfo: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getRefreshHealthInfo: {},\r\n        getRefreshHistory: {\r\n            argNames: [\"since\"],\r\n        },\r\n        getRefreshStatus: {\r\n            argNames: [\"refreshId\"],\r\n        },\r\n        isExchangeJobPending: {},\r\n        movePersonalTaskToLocation: {\r\n            argNames: [\"taskKey\", \"newLocationKey\"],\r\n        },\r\n        pinTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        promotePersonalTaskToProviderTaskInLocation: {\r\n            argNames: [\"taskKey\", \"locationId\"],\r\n        },\r\n        readAllNonTaskData: {},\r\n        refreshSingleTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        removeAttributeFromTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        removePinOnTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        updateTaskWithLocalizedValue: {\r\n            argNames: [\"taskKey\", \"field\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.WorkManagement.OM.LocationOrientedUserOrderedSession\": {\r\n        addAttributeToTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        beginCacheRefresh: {},\r\n        beginExchangeSync: {},\r\n        createPersonalTaskAndPromoteToProviderTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\"],\r\n        },\r\n        createTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\", \"editUrl\"],\r\n        },\r\n        deleteTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getCalloutInfo: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getRefreshHealthInfo: {},\r\n        getRefreshHistory: {\r\n            argNames: [\"since\"],\r\n        },\r\n        getRefreshStatus: {\r\n            argNames: [\"refreshId\"],\r\n        },\r\n        isExchangeJobPending: {},\r\n        movePersonalTaskToLocation: {\r\n            argNames: [\"taskKey\", \"newLocationKey\"],\r\n        },\r\n        pinTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        promotePersonalTaskToProviderTaskInLocation: {\r\n            argNames: [\"taskKey\", \"locationId\"],\r\n        },\r\n        readAllNonTaskData: {},\r\n        refreshSingleTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        removeAttributeFromTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        removePinOnTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        reorderTask: {\r\n            argNames: [\"taskKey\", \"newAfterTaskKey\"],\r\n        },\r\n        updateTaskWithLocalizedValue: {\r\n            argNames: [\"taskKey\", \"field\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.WorkManagement.OM.SortableSession\": {\r\n        addAttributeToTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        beginCacheRefresh: {},\r\n        beginExchangeSync: {},\r\n        createPersonalTaskAndPromoteToProviderTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\"],\r\n        },\r\n        createTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\", \"editUrl\"],\r\n        },\r\n        deleteTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getCalloutInfo: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getRefreshHealthInfo: {},\r\n        getRefreshHistory: {\r\n            argNames: [\"since\"],\r\n        },\r\n        getRefreshStatus: {\r\n            argNames: [\"refreshId\"],\r\n        },\r\n        isExchangeJobPending: {},\r\n        pinTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        promotePersonalTaskToProviderTaskInLocation: {\r\n            argNames: [\"taskKey\", \"locationId\"],\r\n        },\r\n        readAllNonTaskData: {},\r\n        refreshSingleTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        removeAttributeFromTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        removePinOnTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        updateTaskWithLocalizedValue: {\r\n            argNames: [\"taskKey\", \"field\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.WorkManagement.OM.SortableSessionManager\": {\r\n        createLocationOrientedSession: {},\r\n        createSession: {},\r\n    },\r\n    \"SP.WorkManagement.OM.UserOrderedSession\": {\r\n        addAttributeToTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        beginCacheRefresh: {},\r\n        beginExchangeSync: {},\r\n        createPersonalTaskAndPromoteToProviderTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\"],\r\n        },\r\n        createTask: {\r\n            argNames: [\"taskName\", \"description\", \"localizedStartDate\", \"localizedDueDate\", \"completed\", \"pinned\", \"locationKey\", \"editUrl\"],\r\n        },\r\n        deleteTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getCalloutInfo: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        getRefreshHealthInfo: {},\r\n        getRefreshHistory: {\r\n            argNames: [\"since\"],\r\n        },\r\n        getRefreshStatus: {\r\n            argNames: [\"refreshId\"],\r\n        },\r\n        isExchangeJobPending: {},\r\n        pinTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        promotePersonalTaskToProviderTaskInLocation: {\r\n            argNames: [\"taskKey\", \"locationId\"],\r\n        },\r\n        readAllNonTaskData: {},\r\n        refreshSingleTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        removeAttributeFromTask: {\r\n            argNames: [\"taskKey\", \"attribute\"],\r\n        },\r\n        removePinOnTask: {\r\n            argNames: [\"taskKey\"],\r\n        },\r\n        reorderTask: {\r\n            argNames: [\"taskKey\", \"newAfterTaskKey\"],\r\n        },\r\n        updateTaskWithLocalizedValue: {\r\n            argNames: [\"taskKey\", \"field\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.WorkManagement.OM.UserOrderedSessionManager\": {\r\n        createLocationOrientedSession: {},\r\n        createSession: {},\r\n    },\r\n    \"SP.WorkManagement.OM.UserSettingsManager\": {\r\n        getAllLocations: {},\r\n        getExchangeSyncInfo: {},\r\n        getImportantLocations: {},\r\n        getLocations: {\r\n            argNames: [\"locationsId\"],\r\n        },\r\n        getPersistedProperties: {},\r\n        getUserSettings: {},\r\n        isExchangeJobPending: {},\r\n        optIntoExchangeSync: {},\r\n        optOutOfExchangeSync: {},\r\n    },\r\n    \"SP.Workflow.SPWorkflowTask\": {\r\n        breakRoleInheritance: {\r\n            argNames: [\"copyRoleAssignments\", \"clearSubscopes\"],\r\n        },\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        deleteWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getChanges: {\r\n            argNames: [\"query\"],\r\n            metadataType: \"SP.ChangeQuery\",\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        getHashtags: {},\r\n        getUserEffectivePermissions: {\r\n            argNames: [\"userName\"],\r\n            name: \"getUserEffectivePermissions(@user)?@user='[[userName]]'\",\r\n            requestType: utils_1.RequestType.GetReplace\r\n        },\r\n        getWOPIFrameUrl: {\r\n            argNames: [\"action\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInQS\r\n        },\r\n        mediaServiceUpdate: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        mediaServiceUpdateV2: {\r\n            argNames: [\"parameters\", \"eventFiringEnabled\"],\r\n        },\r\n        overridePolicyTip: {\r\n            argNames: [\"userAction\", \"justification\"],\r\n        },\r\n        parseAndSetFieldValue: {\r\n            argNames: [\"fieldName\", \"value\"],\r\n        },\r\n        recycle: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        recycleWithParameters: {\r\n            argNames: [\"parameters\"],\r\n            requestType: utils_1.RequestType.PostWithArgsInBody\r\n        },\r\n        resetRoleInheritance: {},\r\n        setCommentsDisabled: {\r\n            argNames: [\"value\"],\r\n        },\r\n        setComplianceTag: {\r\n            argNames: [\"complianceTag\", \"isTagPolicyHold\", \"isTagPolicyRecord\", \"isEventBasedTag\", \"isTagSuperLock\"],\r\n        },\r\n        setComplianceTagWithExplicitMetasUpdate: {\r\n            argNames: [\"complianceTag\", \"complianceFlags\", \"complianceTagWrittenTime\", \"userEmailAddress\"],\r\n        },\r\n        setComplianceTagWithHold: {\r\n            argNames: [\"complianceTag\"],\r\n        },\r\n        setComplianceTagWithMetaInfo: {\r\n            argNames: [\"complianceTag\", \"blockDelete\", \"blockEdit\", \"complianceTagWrittenTime\", \"userEmailAddress\", \"isTagSuperLock\"],\r\n        },\r\n        setComplianceTagWithNoHold: {\r\n            argNames: [\"complianceTag\"],\r\n        },\r\n        setComplianceTagWithRecord: {\r\n            argNames: [\"complianceTag\"],\r\n        },\r\n        systemUpdate: {},\r\n        update: {\r\n            argNames: [\"properties\"],\r\n            metadataType: \"SP.Workflow.SPWorkflowTask\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n        updateEx: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        updateHashtags: {\r\n            argNames: [\"hashtagsToAdd\", \"hashtagsToRemove\"],\r\n        },\r\n        updateOverwriteVersion: {},\r\n        validateUpdateListItem: {\r\n            argNames: [\"formValues\", \"bNewDocumentUpdate\", \"checkInComment\"],\r\n        },\r\n    },\r\n    \"SP.Workflow.WorkflowAssociation\": {\r\n        delete: {\r\n            requestType: utils_1.RequestType.Delete\r\n        },\r\n        update: {\r\n            metadataType: \"\",\r\n            name: \"\",\r\n            requestMethod: \"MERGE\",\r\n            requestType: utils_1.RequestType.PostBodyNoArgs\r\n        },\r\n    },\r\n    \"SP.Workflow.WorkflowAssociation.Collection\": {\r\n        add: {\r\n            argNames: [\"parameters\"],\r\n        },\r\n        getById: {\r\n            argNames: [\"associationId\"],\r\n        },\r\n        getByName: {\r\n            argNames: [\"name\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.Workflow.WorkflowTemplate.Collection\": {\r\n        getById: {\r\n            argNames: [\"templateId\"],\r\n        },\r\n        getByName: {\r\n            argNames: [\"name\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.WorkflowServices.InteropService\": {\r\n        cancelWorkflow: {\r\n            argNames: [\"instanceId\"],\r\n        },\r\n        disableEvents: {\r\n            argNames: [\"listId\", \"itemGuid\"],\r\n        },\r\n        enableEvents: {\r\n            argNames: [\"listId\", \"itemGuid\"],\r\n        },\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        startWorkflow: {\r\n            argNames: [\"associationName\", \"correlationId\", \"listId\", \"itemGuid\", \"workflowParameters\"],\r\n        },\r\n    },\r\n    \"SP.WorkflowServices.WorkflowDefinition\": {\r\n        setProperty: {\r\n            argNames: [\"propertyName\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.WorkflowServices.WorkflowDefinition.Collection\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        sort: {},\r\n    },\r\n    \"SP.WorkflowServices.WorkflowDeploymentService\": {\r\n        deleteCollateral: {\r\n            argNames: [\"workflowDefinitionId\", \"leafFileName\"],\r\n        },\r\n        deleteDefinition: {\r\n            argNames: [\"definitionId\"],\r\n        },\r\n        deprecateDefinition: {\r\n            argNames: [\"definitionId\"],\r\n        },\r\n        enumerateDefinitions: {\r\n            argNames: [\"publishedOnly\"],\r\n        },\r\n        enumerateIntegratedApps: {},\r\n        getActivitySignatures: {\r\n            argNames: [\"lastChanged\"],\r\n        },\r\n        getCollateralUri: {\r\n            argNames: [\"workflowDefinitionId\", \"leafFileName\"],\r\n        },\r\n        getDefinition: {\r\n            argNames: [\"definitionId\"],\r\n        },\r\n        isIntegratedApp: {},\r\n        packageDefinition: {\r\n            argNames: [\"definitionId\", \"packageDefaultFilename\", \"packageTitle\", \"packageDescription\"],\r\n        },\r\n        publishDefinition: {\r\n            argNames: [\"definitionId\"],\r\n        },\r\n        saveCollateral: {\r\n            argNames: [\"workflowDefinitionId\", \"leafFileName\", \"fileContent\"],\r\n        },\r\n        validateActivity: {\r\n            argNames: [\"activityXaml\"],\r\n        },\r\n    },\r\n    \"SP.WorkflowServices.WorkflowInstanceService\": {\r\n        enumerateInstancesForListItem: {\r\n            argNames: [\"listId\", \"itemId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        enumerateInstancesForListItemWithOffset: {\r\n            argNames: [\"listId\", \"itemId\", \"offset\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        enumerateInstancesForSite: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enumerateInstancesForSiteWithOffset: {\r\n            argNames: [\"offset\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        getInstance: {\r\n            argNames: [\"instanceId\"],\r\n            requestType: utils_1.RequestType.Get\r\n        },\r\n        query: {\r\n            argNames: [\"oData\"],\r\n            requestType: utils_1.RequestType.OData\r\n        },\r\n        startWorkflowOnListItemBySubscriptionId: {\r\n            argNames: [\"subscriptionId\", \"itemId\", \"payload\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        }\r\n    },\r\n    \"SP.WorkflowServices.WorkflowMessagingService\": {\r\n        publishEvent: {\r\n            argNames: [\"eventSourceId\", \"eventName\", \"payload\"],\r\n        },\r\n    },\r\n    \"SP.WorkflowServices.WorkflowServicesManager\": {\r\n        getWorkflowDeploymentService: {},\r\n        getWorkflowInstanceService: {},\r\n        getWorkflowInteropService: {},\r\n        getWorkflowSubscriptionService: {},\r\n        isIntegratedApp: {},\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n    },\r\n    \"SP.WorkflowServices.WorkflowSubscription\": {\r\n        getExternalVariable: {\r\n            argNames: [\"name\"],\r\n        },\r\n        setExternalVariable: {\r\n            argNames: [\"name\", \"value\"],\r\n        },\r\n        setProperty: {\r\n            argNames: [\"name\", \"value\"],\r\n        },\r\n    },\r\n    \"SP.WorkflowServices.WorkflowSubscription.Collection\": {\r\n        query: { argNames: [\"oData\"], requestType: utils_1.RequestType.OData },\r\n        sort: {},\r\n    },\r\n    \"SP.WorkflowServices.WorkflowSubscriptionService\": {\r\n        deleteSubscription: {\r\n            argNames: [\"subscriptionId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        enumerateSubscriptions: {\r\n            requestType: utils_1.RequestType.Post\r\n        },\r\n        enumerateSubscriptionsByDefinition: {\r\n            argNames: [\"definitionId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        enumerateSubscriptionsByEventSource: {\r\n            argNames: [\"eventSourceId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        enumerateSubscriptionsByList: {\r\n            argNames: [\"listId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        enumerateSubscriptionsByListAndParentContentType: {\r\n            argNames: [\"listId\", \"parentContentTypeId\", \"includeNoContentTypeSpecified\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        enumerateSubscriptionsByListWithContentType: {\r\n            argNames: [\"listId\", \"includeContentTypeSpecified\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        getSubscription: {\r\n            argNames: [\"subscriptionId\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        query: {\r\n            argNames: [\"oData\"],\r\n            requestType: utils_1.RequestType.OData\r\n        },\r\n        registerInterestInHostWebList: {\r\n            argNames: [\"listId\", \"eventName\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        registerInterestInList: {\r\n            argNames: [\"listId\", \"eventName\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        unregisterInterestInHostWebList: {\r\n            argNames: [\"listId\", \"eventName\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        },\r\n        unregisterInterestInList: {\r\n            argNames: [\"listId\", \"eventName\"],\r\n            requestType: utils_1.RequestType.PostWithArgs\r\n        }\r\n    },\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/def.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Mapper_Custom = exports.Mapper = void 0;\r\n// TO DO:\r\n// 1) Merge mapper files into mapper.ts file\r\n// 2) Reference the main mapper.ts during the merge, so the reference is still there\r\n// 3) Update the method adder helper function to reference the mapper using the raw metadata type, use old code as a backup\r\n// 4) Test if mapper files is still needed (Lots of testing here...), but references will ensure library won't break\r\n// 5) Remove the mapper files and code used as a backup\r\nvar Mapper_Custom = __webpack_require__(/*! ./custom */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/custom/index.js\");\r\nexports.Mapper_Custom = Mapper_Custom;\r\nvar def_1 = __webpack_require__(/*! ./def */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/def.js\");\r\nObject.defineProperty(exports, \"Mapper\", ({ enumerable: true, get: function () { return def_1.Mapper; } }));\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/rest.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/rest.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.$REST = void 0;\r\nvar Helper = __webpack_require__(/*! ./helper */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/helper/index.js\");\r\nvar Lib = __webpack_require__(/*! ./lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar sptypes_1 = __webpack_require__(/*! ./sptypes */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/index.js\");\r\n/**\r\n * SharePoint REST Library\r\n */\r\nexports.$REST = {\r\n    __ver: 6.42,\r\n    AppContext: function (siteUrl) { return Lib.Site.getAppContext(siteUrl); },\r\n    Apps: Lib.Apps,\r\n    ContextInfo: Lib.ContextInfo,\r\n    DefaultRequestToHostFl: false,\r\n    Graph: Lib.Graph,\r\n    GroupService: Lib.GroupService,\r\n    GroupSiteManager: Lib.GroupSiteManager,\r\n    Helper: Helper,\r\n    HubSites: Lib.HubSites,\r\n    HubSitesUtility: Lib.HubSitesUtility,\r\n    List: Lib.List,\r\n    ListByEntityName: Lib.List.getByEntityName,\r\n    ListDataAsStream: Lib.List.getDataAsStream,\r\n    Navigation: Lib.Navigation,\r\n    PeopleManager: Lib.PeopleManager,\r\n    PeoplePicker: Lib.PeoplePicker,\r\n    ProfileLoader: Lib.ProfileLoader,\r\n    RemoteWeb: function (requestUrl) { return Lib.Web.getRemoteWeb(requestUrl); },\r\n    Search: Lib.Search,\r\n    Site: Lib.Site,\r\n    SiteManager: Lib.SiteManager,\r\n    SiteExists: function (url) { return Lib.Site.exists(url); },\r\n    SiteUrl: function (id) { return Lib.Site.getUrlById(id); },\r\n    SPTypes: sptypes_1.SPTypes,\r\n    SocialFeed: Lib.SocialFeed,\r\n    ThemeManager: Lib.ThemeManager,\r\n    UserProfile: Lib.UserProfile,\r\n    Utility: Lib.Utility,\r\n    Web: Lib.Web,\r\n    WebTemplateExtensions: Lib.WebTemplateExtensions,\r\n    WorkflowInstanceService: Lib.WorkflowInstanceService,\r\n    WorkflowSubscriptionService: Lib.WorkflowSubscriptionService\r\n};\r\n// See if the library doesn't exist, or is an older version\r\nvar global = Lib.ContextInfo.window.$REST;\r\nif (global == null || global.__ver == null || global.__ver < exports.$REST.__ver) {\r\n    // Set the global variable\r\n    Lib.ContextInfo.window.$REST = exports.$REST;\r\n    // Ensure the SP lib exists\r\n    if (Lib.ContextInfo.window.SP) {\r\n        // If MDS is turned on in a SP2013 environment, it may throw an error\r\n        try {\r\n            // Alert other scripts this library is loaded\r\n            Lib.ContextInfo.window.SP.SOD.notifyScriptLoadedAndExecuteWaitingJobs(\"gd-sprest\");\r\n            Lib.ContextInfo.window.SP.SOD.notifyScriptLoadedAndExecuteWaitingJobs(\"gd-sprest.js\");\r\n        }\r\n        catch (_a) {\r\n            // Log\r\n            console.error(\"[gd-sprest] Error notifying scripts using the SP SOD library.\");\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/rest.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SPTypes = void 0;\r\nvar SPTypes = __webpack_require__(/*! ./sptypes */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/sptypes.js\");\r\nexports.SPTypes = SPTypes;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/sptypes.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/sptypes.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebTemplateType = exports.ViewType = exports.UserCustomActionRegistrationType = exports.URLZones = exports.UrlFormatType = exports.StatusPriColor = exports.RoleType = exports.ReorderingRuleMatchType = exports.RenderListDataOptions = exports.RelationshipDeleteBehaviorType = exports.PrincipalTypes = exports.PrincipalSources = exports.PersonalSiteCapabilities = exports.PersonalizationScope = exports.PageType = exports.ModalDialogResult = exports.LocaleLCIDType = exports.ListTemplateType = exports.FriendlyDateFormat = exports.FileTemplateType = exports.FileLevelType = exports.FieldUserSelectionType = exports.FieldType = exports.FieldResultType = exports.FieldNumberType = exports.FieldNoteType = exports.EventReceiverType = exports.EventReceiverSynchronizationType = exports.DraftVisibilityType = exports.DateFormat = exports.ControlMode = exports.ClientTemplatesUtility = exports.ChoiceFormatType = exports.CheckOutType = exports.CheckInType = exports.CalendarTypes = exports.BasePermissionTypes = void 0;\r\n/**\r\n * Base Permission Types\r\n */\r\nexports.BasePermissionTypes = {\r\n    EmptyMask: 0,\r\n    ViewListItems: 1,\r\n    AddListItems: 2,\r\n    EditListItems: 3,\r\n    DeleteListItems: 4,\r\n    ApproveItems: 5,\r\n    OpenItems: 6,\r\n    ViewVersions: 7,\r\n    DeleteVersions: 8,\r\n    CancelCheckout: 9,\r\n    ManagePersonalViews: 10,\r\n    ManageLists: 12,\r\n    ViewFormPages: 13,\r\n    AnonymousSearchAccessList: 14,\r\n    Open: 17,\r\n    ViewPages: 18,\r\n    AddAndCustomizePages: 19,\r\n    ApplyThemeAndBorder: 20,\r\n    ApplyStyleSheets: 21,\r\n    ViewUsageData: 22,\r\n    CreateSSCSite: 23,\r\n    ManageSubwebs: 24,\r\n    CreateGroups: 25,\r\n    ManagePermissions: 26,\r\n    BrowseDirectories: 27,\r\n    BrowseUserInfo: 28,\r\n    AddDelPrivateWebParts: 29,\r\n    UpdatePersonalWebParts: 30,\r\n    ManageWeb: 31,\r\n    AnonymousSearchAccessWebLists: 32,\r\n    UseClientIntegration: 37,\r\n    UseRemoteAPIs: 38,\r\n    ManageAlerts: 39,\r\n    CreateAlerts: 40,\r\n    EditMyUserInfo: 41,\r\n    EnumeratePermissions: 63,\r\n    FullMask: 65\r\n};\r\n/**\r\n * Calendar Types\r\n */\r\nexports.CalendarTypes = {\r\n    Gregorian: 1,\r\n    JapaneseEmperorEra: 3,\r\n    TaiwanCalendar: 4,\r\n    KoreanTangunEra: 5,\r\n    Hijri: 6,\r\n    Thai: 7,\r\n    HebrewLunar: 8,\r\n    GregorianMiddleEastFrench: 9,\r\n    GregorianArabic: 10,\r\n    GregorianTransliteratedEnglish: 11,\r\n    GregorianTransliteratedFrench: 12,\r\n    KoreanandJapaneseLunar: 14,\r\n    ChineseLunar: 15,\r\n    SakaEra: 16\r\n};\r\n/**\r\n * Check In Types\r\n */\r\nexports.CheckInType = { MinorCheckIn: 0, MajorCheckIn: 1, OverwriteCheckIn: 2 };\r\n/**\r\n * Check Out Types\r\n */\r\nexports.CheckOutType = { Online: 0, Offline: 1, None: 2 };\r\n/**\r\n * Choice Format Types\r\n */\r\nexports.ChoiceFormatType = { Dropdown: 0, RadioButtons: 1 };\r\n/**\r\n * Client Template Utility\r\n */\r\nexports.ClientTemplatesUtility = {\r\n    UserLookupDelimitString: \";#\",\r\n    UserMultiValueDelimitString: \",#\"\r\n};\r\n/**\r\n * Control Modes\r\n */\r\nexports.ControlMode = {\r\n    Invalid: 0,\r\n    Display: 1,\r\n    Edit: 2,\r\n    New: 3,\r\n    View: 4\r\n};\r\n/**\r\n * Date Format\r\n */\r\nexports.DateFormat = { DateOnly: 0, DateTime: 1 };\r\n/**\r\n * Draft Visibility Types\r\n */\r\nexports.DraftVisibilityType = { Reader: 0, Author: 1, Approver: 2 };\r\n/**\r\n * Event Receiver Synchronization Types\r\n */\r\nexports.EventReceiverSynchronizationType = { Synchronization: 1, Asynchronous: 2 };\r\n/**\r\n * Event Receiver Types\r\n */\r\nexports.EventReceiverType = {\r\n    ItemAdding: 1,\r\n    ItemUpdating: 2,\r\n    ItemDeleting: 3,\r\n    ItemCheckingIn: 4,\r\n    ItemCheckingOut: 5,\r\n    ItemUncheckingOut: 6,\r\n    ItemAttachmentAdding: 7,\r\n    ItemAttachmentDeleting: 8,\r\n    ItemFileMoving: 9,\r\n    ItemVersionDeleting: 11,\r\n    FieldAdding: 101,\r\n    FieldUpdating: 102,\r\n    FieldDeleting: 103,\r\n    ListAdding: 104,\r\n    ListDeleting: 105,\r\n    SiteDeleting: 201,\r\n    WebDeleting: 202,\r\n    WebMoving: 203,\r\n    WebAdding: 204,\r\n    GroupAdding: 301,\r\n    GroupUpdating: 302,\r\n    GroupDeleting: 303,\r\n    GroupUserAdding: 304,\r\n    GroupUserDeleting: 305,\r\n    RoleDefinitionAdding: 306,\r\n    RoleDefinitionUpdating: 307,\r\n    RoleDefinitionDeleting: 308,\r\n    RoleAssignmentAdding: 309,\r\n    RoleAssignmentDeleting: 310,\r\n    InheritanceBreaking: 311,\r\n    InheritanceResetting: 312,\r\n    WorkflowStarting: 501,\r\n    ItemAdded: 10001,\r\n    ItemUpdated: 10002,\r\n    ItemDeleted: 10003,\r\n    ItemCheckedIn: 10004,\r\n    ItemCheckedOut: 10005,\r\n    ItemUncheckedOut: 10006,\r\n    ItemAttachmentAdded: 10007,\r\n    ItemAttachmentDeleted: 10008,\r\n    ItemFileMoved: 10009,\r\n    ItemFileConverted: 10010,\r\n    ItemVersionDeleted: 10011,\r\n    FieldAdded: 10101,\r\n    FieldUpdated: 10102,\r\n    FieldDeleted: 10103,\r\n    ListAdded: 10104,\r\n    ListDeleted: 10105,\r\n    SiteDeleted: 10201,\r\n    WebDeleted: 10202,\r\n    WebMoved: 10203,\r\n    WebProvisioned: 10204,\r\n    GroupAdded: 10301,\r\n    GroupUpdated: 10302,\r\n    GroupDeleted: 10303,\r\n    GroupUserAdded: 10304,\r\n    GroupUserDeleted: 10305,\r\n    RoleDefinitionAdded: 10306,\r\n    RoleDefinitionUpdated: 10307,\r\n    RoleDefinitionDeleted: 10308,\r\n    RoleAssignmentAdded: 10309,\r\n    RoleAssignmentDeleted: 10310,\r\n    InheritanceBroken: 10311,\r\n    InheritanceReset: 10312,\r\n    WorkflowStarted: 10501,\r\n    WorkflowPostponed: 10502,\r\n    WorkflowCompleted: 10503,\r\n    EntityInstanceAdded: 10601,\r\n    EntityInstanceUpdated: 10602,\r\n    EntityInstanceDeleted: 10603,\r\n    AppInstalled: 10701,\r\n    AppUpgraded: 10702,\r\n    AppUninstalling: 10703,\r\n    EmailReceived: 20000,\r\n    ContextEvent: 32766\r\n};\r\n/**\r\n * Field Note Types\r\n */\r\nexports.FieldNoteType = {\r\n    /** Enhance Rich Text */\r\n    EnhancedRichText: 0,\r\n    /** Rich Text */\r\n    RichText: 1,\r\n    /** Text Only */\r\n    TextOnly: 2\r\n};\r\n/**\r\n * Field Number Type\r\n */\r\nexports.FieldNumberType = {\r\n    /** Decimal */\r\n    Decimal: 0,\r\n    /** Integer */\r\n    Integer: 1,\r\n    /** Percentage */\r\n    Percentage: 2,\r\n};\r\n/**\r\n * Field Result Types\r\n */\r\nexports.FieldResultType = {\r\n    /** Boolean */\r\n    Boolean: \"Boolean\",\r\n    /** Currency */\r\n    Currency: \"Currency\",\r\n    /** Date Only */\r\n    DateOnly: \"DateOnly\",\r\n    /** Date & Time */\r\n    DateTime: \"DateTime\",\r\n    /** Number */\r\n    Number: \"Number\",\r\n    /** Text */\r\n    Text: \"Text\"\r\n};\r\n/**\r\n * Field Types\r\n */\r\nexports.FieldType = {\r\n    AllDayEvent: 29,\r\n    Attachments: 19,\r\n    Boolean: 8,\r\n    Calculated: 17,\r\n    Choice: 6,\r\n    Computed: 12,\r\n    ContentTypeId: 25,\r\n    Counter: 5,\r\n    CrossProjectLink: 22,\r\n    Currency: 10,\r\n    DateTime: 4,\r\n    Error: 24,\r\n    File: 18,\r\n    Geolocation: 31,\r\n    GridChoice: 16,\r\n    Guid: 14,\r\n    Integer: 1,\r\n    Invalid: 0,\r\n    Lookup: 7,\r\n    MaxItems: 31,\r\n    ModStat: 23,\r\n    MultiChoice: 15,\r\n    Note: 3,\r\n    Number: 9,\r\n    PageSeparator: 26,\r\n    Recurrence: 21,\r\n    Text: 2,\r\n    ThreadIndex: 27,\r\n    Threading: 13,\r\n    URL: 11,\r\n    User: 20,\r\n    WorkflowEventType: 30,\r\n    WorkflowStatus: 28\r\n};\r\n/**\r\n * Field User Selection Types\r\n */\r\nexports.FieldUserSelectionType = { PeopleOnly: 0, PeopleAndGroups: 1 };\r\n/**\r\n * File Level\r\n */\r\nexports.FileLevelType = { Published: 1, Draft: 2, Checkout: 3 };\r\n/**\r\n * File Template Types\r\n*/\r\nexports.FileTemplateType = { StandardPage: 0, WikiPage: 1, FormPage: 2 };\r\n/**\r\n * Friendly Date Format\r\n */\r\nexports.FriendlyDateFormat = {\r\n    Unspecified: 0,\r\n    Disabled: 1,\r\n    Relative: 2\r\n};\r\n/**\r\n * List Template Types\r\n*/\r\nexports.ListTemplateType = {\r\n    AccessRequest: 160,\r\n    AdminTasks: 1200,\r\n    Agenda: 201,\r\n    AppDataCatalog: 125,\r\n    Announcements: 104,\r\n    CallTrack: 404,\r\n    Categories: 303,\r\n    Circulation: 405,\r\n    Comments: 302,\r\n    Contacts: 105,\r\n    CustomGrid: 120,\r\n    DataConnectionLibrary: 130,\r\n    DataSources: 110,\r\n    Decision: 204,\r\n    DesignCatalog: 124,\r\n    DeveloperSiteDraftApps: 1230,\r\n    DiscussionBoard: 108,\r\n    DocumentLibrary: 101,\r\n    Events: 106,\r\n    ExternalList: 600,\r\n    Facility: 402,\r\n    GanttTasks: 150,\r\n    GenericList: 100,\r\n    HealthReports: 1221,\r\n    HealthRules: 1220,\r\n    HelpLibrary: 151,\r\n    Holidays: 421,\r\n    HomePageLibrary: 212,\r\n    IMEDic: 499,\r\n    IssueTracking: 1100,\r\n    Links: 103,\r\n    ListTemplateCatalog: 114,\r\n    MasterPageCatalog: 116,\r\n    MaintenanceLogs: 175,\r\n    MeetingObjective: 207,\r\n    Meetings: 200,\r\n    MeetingUser: 202,\r\n    MySiteDocumentLibrary: 700,\r\n    Posts: 301,\r\n    NoCodePublic: 122,\r\n    NoCodeWorkflows: 117,\r\n    PictureLibrary: 109,\r\n    SolutionCatalog: 121,\r\n    Survey: 102,\r\n    Tasks: 107,\r\n    TasksWithTimelineAndHierarchy: 171,\r\n    TextBox: 210,\r\n    ThemeCatalog: 123,\r\n    ThingsToBring: 211,\r\n    Timecard: 420,\r\n    UserInformation: 112,\r\n    WebPageLibrary: 119,\r\n    WebPartCatalog: 113,\r\n    WebTemplateCatalog: 111,\r\n    Whereabouts: 403,\r\n    WorkflowHistory: 140,\r\n    WorkflowProcess: 118,\r\n    XMLForm: 115\r\n};\r\n/**\r\n * Locale LCID Types\r\n */\r\nexports.LocaleLCIDType = {\r\n    Afrikaans: 1078,\r\n    Albanian: 1052,\r\n    ArabicAlgeria: 5121,\r\n    ArabicBahrain: 15361,\r\n    ArabicEgypt: 3073,\r\n    ArabicIraq: 2049,\r\n    ArabicJordan: 11265,\r\n    ArabicLebanon: 12289,\r\n    ArabicLibya: 4097,\r\n    ArabicMorocco: 6145,\r\n    ArabicOman: 8193,\r\n    ArabicQatar: 16385,\r\n    ArabicSaudiArabia: 1025,\r\n    ArabicSyria: 10241,\r\n    ArabicTunisia: 7169,\r\n    ArabicUAE: 14337,\r\n    ArabicYemen: 9217,\r\n    Armenian: 1067,\r\n    AzeriCyrillic: 2092,\r\n    AzeriLatin: 1068,\r\n    Basque: 1069,\r\n    Belarusian: 1059,\r\n    Bulgarian: 1026,\r\n    Catalan: 1027,\r\n    ChineseHongKongSAR: 3076,\r\n    ChineseMacaoSAR: 5124,\r\n    ChinesePRC: 2052,\r\n    ChineseSingapore: 4100,\r\n    ChineseTaiwan: 1028,\r\n    CroatianCroatia: 1050,\r\n    Czech: 1029,\r\n    Danish: 1030,\r\n    Divehi: 1125,\r\n    DutchBelgium: 2067,\r\n    DutchNetherlands: 1043,\r\n    EnglishAustralia: 3081,\r\n    EnglishBelize: 10249,\r\n    EnglishCanada: 4105,\r\n    EnglishCaribbean: 9225,\r\n    EnglishIreland: 6153,\r\n    EnglishJamaica: 8201,\r\n    EnglishNewZealand: 5129,\r\n    EnglishPhilippines: 13321,\r\n    EnglishSouthAfrica: 7177,\r\n    EnglishTrinidad: 11273,\r\n    EnglishUnitedKingdom: 2057,\r\n    EnglishUnitedStates: 1033,\r\n    EnglishZimbabwe: 12297,\r\n    Estonian: 1061,\r\n    Faeroese: 1080,\r\n    Finnish: 1035,\r\n    FrenchBelgium: 2060,\r\n    FrenchCanada: 3084,\r\n    FrenchFrance: 1036,\r\n    FrenchLuxembourg: 5132,\r\n    FrenchMonaco: 6156,\r\n    FrenchSwitzerland: 4108,\r\n    Galician: 1110,\r\n    Georgian: 1079,\r\n    GermanAustria: 3079,\r\n    GermanGermany: 1031,\r\n    GermanLiechtenstein: 5127,\r\n    GermanLuxembourg: 4103,\r\n    GermanSwitzerland: 2055,\r\n    Greek: 1032,\r\n    Gujarati: 1095,\r\n    HebrewIsrael: 1037,\r\n    HindiIndia: 1081,\r\n    Hungarian: 1038,\r\n    Icelandic: 1039,\r\n    Indonesian: 1057,\r\n    ItalianItaly: 1040,\r\n    ItalianSwitzerland: 2064,\r\n    Japanese: 1041,\r\n    Kannada: 1099,\r\n    Kazakh: 1087,\r\n    Konkani: 1111,\r\n    Korean: 1042,\r\n    KyrgyzCyrillic: 1088,\r\n    Latvian: 1062,\r\n    Lithuanian: 1063,\r\n    MacedonianFYROM: 1071,\r\n    Malay: 1086,\r\n    MalayBruneiDarussalam: 2110,\r\n    Marathi: 1102,\r\n    MongolianCyrillic: 1104,\r\n    NorwegianBokmal: 1044,\r\n    NorwegianNynorsk: 2068,\r\n    PersianIran: 1065,\r\n    Polish: 1045,\r\n    PortugueseBrazil: 1046,\r\n    PortuguesePortugal: 2070,\r\n    Punjabi: 1094,\r\n    Romanian: 1048,\r\n    Russian: 1049,\r\n    Sanskrit: 1103,\r\n    SerbianCyrillic: 3098,\r\n    SerbianLatin: 2074,\r\n    Slovak: 1051,\r\n    Slovenian: 1060,\r\n    SpanishArgentina: 11274,\r\n    SpanishBolivia: 16394,\r\n    SpanishChile: 13322,\r\n    SpanishColombia: 9226,\r\n    SpanishCostaRica: 5130,\r\n    SpanishDominicanRepublic: 7178,\r\n    SpanishEcuador: 12298,\r\n    SpanishElSalvador: 17418,\r\n    SpanishGuatemala: 4106,\r\n    SpanishHonduras: 18442,\r\n    SpanishMexico: 2058,\r\n    SpanishNicaragua: 19466,\r\n    SpanishPanama: 6154,\r\n    SpanishParaguay: 15370,\r\n    SpanishPeru: 10250,\r\n    SpanishPuertoRico: 20490,\r\n    SpanishSpain: 3082,\r\n    SpanishUruguay: 14346,\r\n    SpanishVenezuela: 8202,\r\n    Swahili: 1089,\r\n    Swedish: 1053,\r\n    SwedishFinland: 2077,\r\n    Syriac: 1114,\r\n    Tamil: 1097,\r\n    Tatar: 1092,\r\n    Telugu: 1098,\r\n    ThaiThailand: 1054,\r\n    Turkish: 1055,\r\n    Ukrainian: 1058,\r\n    UrduPakistan: 1056,\r\n    UzbekCyrillic: 2115,\r\n    UzbekLatin: 1091,\r\n    Vietnamese: 1066,\r\n};\r\n/**\r\n * Modal Dialog Results\r\n */\r\nexports.ModalDialogResult = {\r\n    Invalid: -1,\r\n    Cancel: 0,\r\n    OK: 1\r\n};\r\n/**\r\n * Page Types\r\n */\r\nexports.PageType = {\r\n    DefaultView: 0,\r\n    DialogView: 2,\r\n    DisplayForm: 4,\r\n    DisplayFormDialog: 5,\r\n    EditForm: 6,\r\n    EditFormDialog: 7,\r\n    Invalid: -1,\r\n    NewForm: 8,\r\n    NewFormDialog: 9,\r\n    NormalView: 1,\r\n    Page_MAXITEMS: 11,\r\n    SolutionForm: 10,\r\n    View: 3\r\n};\r\n/**\r\n * Personalization Scope\r\n */\r\nexports.PersonalizationScope = {\r\n    Shared: 1,\r\n    User: 0\r\n};\r\n/**\r\n * Personal Site Capabilities\r\n */\r\nexports.PersonalSiteCapabilities = {\r\n    Education: 16,\r\n    Guest: 32,\r\n    MyTasksDashboard: 8,\r\n    None: 0,\r\n    Profile: 1,\r\n    Social: 2,\r\n    Storage: 4\r\n};\r\n/**\r\n * Principal Sources\r\n */\r\nexports.PrincipalSources = {\r\n    All: 15,\r\n    MembershipProvider: 4,\r\n    None: 0,\r\n    RoleProvider: 8,\r\n    UserInfoList: 1,\r\n    Windows: 2\r\n};\r\n/**\r\n * Principal Types\r\n */\r\nexports.PrincipalTypes = {\r\n    All: 15,\r\n    DistributionList: 2,\r\n    None: 0,\r\n    SecurityGroup: 4,\r\n    SharePointGroup: 8,\r\n    User: 1\r\n};\r\n/**\r\n * Relationship Delete Behavior Types\r\n */\r\nexports.RelationshipDeleteBehaviorType = { None: 0, Cascade: 1, Restrict: 2 };\r\n/**\r\n * Render List Data Options\r\n */\r\nexports.RenderListDataOptions = {\r\n    None: 0,\r\n    ContextInfo: 1,\r\n    ListData: 2,\r\n    ListSchema: 4,\r\n    MenuView: 8,\r\n    ListContentType: 16,\r\n    FileSystemItemId: 32,\r\n    ClientFormSchema: 64,\r\n    QuickLaunch: 128,\r\n    Spotlight: 256,\r\n    Visualization: 512,\r\n    ViewMetadata: 1024,\r\n    DisableAutoHyperlink: 2048,\r\n    EnableMediaTAUrls: 4096,\r\n    ParentInfo: 8192,\r\n    PageContextInfo: 16384,\r\n    ClientSideComponentManifest: 32768\r\n};\r\n/**\r\n * Reordering Rule Match Types\r\n */\r\nexports.ReorderingRuleMatchType = {\r\n    ContentTypeIs: 5,\r\n    FileExtensionMatches: 6,\r\n    ManualCondition: 8,\r\n    ResultContainsKeyword: 0,\r\n    ResultHasTag: 7,\r\n    TitleContainsKeyword: 1,\r\n    TitleMatchesKeyword: 2,\r\n    UrlExactlyMatches: 4,\r\n    UrlStartsWith: 3\r\n};\r\n/**\r\n * Role Types\r\n */\r\nexports.RoleType = {\r\n    Administrator: 5,\r\n    Contributor: 3,\r\n    Editor: 6,\r\n    Guest: 1,\r\n    None: 0,\r\n    Reader: 2,\r\n    WebDesigner: 4\r\n};\r\n/**\r\n * Status Pri Color\r\n */\r\nexports.StatusPriColor = {\r\n    Blue: \"blue\",\r\n    Green: \"green\",\r\n    Red: \"red\",\r\n    Yellow: \"yellow\"\r\n};\r\n/**\r\n * URL Format Types\r\n */\r\nexports.UrlFormatType = { Hyperlink: 0, Image: 1 };\r\n/**\r\n * URL Zones\r\n */\r\nexports.URLZones = { Default: 0, Intranet: 1, Internet: 2, Custom: 3, Extranet: 4 };\r\n/**\r\n * User Custom Action Registration Types\r\n */\r\nexports.UserCustomActionRegistrationType = { None: 0, List: 1, ContentType: 2, ProgId: 3, FileType: 4 };\r\n/**\r\n * View Types\r\n */\r\nexports.ViewType = {\r\n    Calendar: 524288,\r\n    Chart: 131072,\r\n    Gantt: 67108864,\r\n    Grid: 2048,\r\n    Html: 1,\r\n    Recurrence: 8193\r\n};\r\n/**\r\n * Web Template Types\r\n */\r\nexports.WebTemplateType = {\r\n    AcademicLibrary: \"DOCMARKETPLACESITE\",\r\n    App: \"APP\",\r\n    AppCatalog: \"APPCATALOG\",\r\n    BasicSearch: \"SRCHCENTERLITE\",\r\n    Blog: \"BLOG\",\r\n    BusinessIntelligenceCenter: \"BICenterSite\",\r\n    CentralAdmin: \"CENTRALADMIN\",\r\n    Community: \"COMMUNITY\",\r\n    CommunityPortal: \"COMMUNITYPORTAL\",\r\n    Dev: \"DEV\",\r\n    DocumentCenter: \"BDR\",\r\n    eDiscoveryCenter: \"EDISC\",\r\n    EnterpriseSearch: \"SRCHCEN\",\r\n    EnterpriseWiki: \"ENTERWIKI\",\r\n    Global: \"GLOBAL\",\r\n    GroupWorkSite: \"SGS\",\r\n    Meetings: \"MEETINGS\",\r\n    MeetingWorkspace: \"MPS\",\r\n    PerformancePoint: \"PPMASite\",\r\n    ProductCatalog: \"PRODUCTCATALOG\",\r\n    Profiles: \"PROFILES\",\r\n    ProjectSite: \"PROJECTSITE\",\r\n    Publishing: \"BLANKINTERNET\",\r\n    PublishingSite: \"CMSPUBLISHING\",\r\n    RecordsCenter: \"OFFILE\",\r\n    SharedServicesAdminSite: \"OSRV\",\r\n    Site: \"STS\",\r\n    TeamCollaborationSite: \"TEAM\",\r\n    TenantAdmin: \"TENANTADMIN\",\r\n    Wiki: \"WIKI\"\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/sptypes/sptypes.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/base.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/base.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Base = void 0;\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/*********************************************************************************************************************************/\r\n// Base\r\n// This is the base class for all objects.\r\n/*********************************************************************************************************************************/\r\nvar Base = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param targetInfo - The target information.\r\n     */\r\n    function Base(targetInfo) {\r\n        // Default the properties\r\n        this.targetInfo = Object.create(targetInfo || {});\r\n        this.responses = [];\r\n        this.requestType = 0;\r\n        this.waitFlags = [];\r\n    }\r\n    // Method to update the object functions, based on the type\r\n    Base.prototype.addMethods = function (data, context) { return _1.Request.addMethods(this, data, context); };\r\n    // Method to execute this request as a batch request\r\n    Base.prototype.batch = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return _1.Batch.execute(this, args);\r\n    };\r\n    // Method to wait for the requests to complete\r\n    Base.prototype.done = function (resolve) { return _1.Helper.done(this, resolve); };\r\n    // Method to execute the request\r\n    Base.prototype.execute = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return _1.Request.execute(this, args);\r\n    };\r\n    // Method to execute a method\r\n    Base.prototype.executeMethod = function (methodName, methodConfig, args) { return _1.Helper.executeMethod(this, methodName, methodConfig, args); };\r\n    // Method to execute the request synchronously\r\n    Base.prototype.executeAndWait = function () { return _1.Request.executeRequest(this, false); };\r\n    // Method to return a collection\r\n    Base.prototype.getCollection = function (method, args) { return _1.Helper.getCollection(this, method, args); };\r\n    // Method to get the request information\r\n    Base.prototype.getInfo = function () { return _1.Helper.getRequestInfo(this); };\r\n    // Method to get the next set of results\r\n    Base.prototype.getNextSetOfResults = function () { return _1.Helper.getNextSetOfResults(this); };\r\n    // Method to return a property of the base object\r\n    Base.prototype.getProperty = function (propertyName, requestType) { return _1.Helper.getProperty(this, propertyName, requestType); };\r\n    // Method to stringify the object\r\n    Base.prototype.stringify = function () { return _1.Helper.stringify(this); };\r\n    // Method to update the metadata uri\r\n    Base.prototype.updateMetadataUri = function (metadata, targetInfo) { return _1.Helper.updateMetadataUri(this, metadata, targetInfo); };\r\n    // Method to wait for the parent requests to complete\r\n    Base.prototype.waitForRequestsToComplete = function (callback, requestIdx) { _1.Request.waitForRequestsToComplete(this, callback, requestIdx); };\r\n    return Base;\r\n}());\r\nexports.Base = Base;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/base.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/batch.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/batch.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Batch = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Batch Requests\r\n */\r\nvar Batch = /** @class */ (function () {\r\n    function Batch() {\r\n    }\r\n    // Method to execute a batch request\r\n    Batch.execute = function (base, args) {\r\n        var appendFl = false;\r\n        var callback = null;\r\n        // Parse the arguments\r\n        for (var i = 0; i < args.length; i++) {\r\n            var arg = args[i];\r\n            // Check the type\r\n            switch (typeof (arg)) {\r\n                case \"boolean\":\r\n                    // Set the append flag\r\n                    appendFl = arg;\r\n                    break;\r\n                case \"function\":\r\n                    // Set the callback method\r\n                    callback = arg;\r\n                    break;\r\n            }\r\n        }\r\n        // Set the base\r\n        base.base = base.base ? base.base : base;\r\n        // See if we are appending this request\r\n        if (appendFl && base.base.batchRequests) {\r\n            // Append the request\r\n            base.base.batchRequests[base.base.batchRequests.length - 1].push({\r\n                callback: callback,\r\n                targetInfo: new _1.TargetInfo(base.targetInfo)\r\n            });\r\n        }\r\n        else {\r\n            // Ensure the batch requests exist\r\n            base.base.batchRequests = base.base.batchRequests || [];\r\n            // Create the request\r\n            base.base.batchRequests.push([{\r\n                    callback: callback,\r\n                    targetInfo: new _1.TargetInfo(base.targetInfo)\r\n                }]);\r\n        }\r\n        // Return this object\r\n        return base;\r\n    };\r\n    // Method to generate a batch request\r\n    Batch.getTargetInfo = function (requests) {\r\n        var batchId = \"batch_\" + lib_1.ContextInfo.generateGUID();\r\n        var batchRequests = [];\r\n        // Parse the requests\r\n        for (var i = 0; i < requests.length; i++) {\r\n            // Create the batch request\r\n            batchRequests.push(Batch.createBatch(batchId, requests[i]));\r\n        }\r\n        // End the batch request\r\n        batchRequests.push(\"--\" + batchId + \"--\");\r\n        // Return the target info\r\n        return new _1.TargetInfo({\r\n            endpoint: \"$batch\",\r\n            method: \"POST\",\r\n            data: batchRequests.join(\"\\r\\n\"),\r\n            requestHeader: {\r\n                \"Content-Type\": 'multipart/mixed; boundary=\"' + batchId + '\"'\r\n            }\r\n        });\r\n    };\r\n    // Method to generate a batch request\r\n    Batch.createBatch = function (batchId, requests) {\r\n        var batch = [];\r\n        // Parse the requests\r\n        for (var i = 0; i < requests.length; i++) {\r\n            var request_1 = requests[i];\r\n            // Create the batch request\r\n            batch.push(\"--\" + batchId);\r\n            // Determine if the batch requires a change set\r\n            var requiresChangeset = request_1 && request_1.targetInfo.requestMethod != \"GET\";\r\n            if (requiresChangeset) {\r\n                var changesetId = \"changeset_\" + lib_1.ContextInfo.generateGUID();\r\n                // Create a change set\r\n                batch.push(\"Content-Type: multipart/mixed; boundary=\" + changesetId);\r\n                batch.push(\"\");\r\n                batch.push(\"--\" + changesetId);\r\n                batch.push(\"Content-Type: application/http\");\r\n                batch.push(\"Content-Transfer-Encoding: binary\");\r\n                batch.push(\"\");\r\n                batch.push(\"POST \" + request_1.targetInfo.requestUrl + \" HTTP/1.1\");\r\n                batch.push(\"Content-Type: application/json;odata=verbose\");\r\n                batch.push(\"\");\r\n                request_1.targetInfo.requestData ? batch.push(request_1.targetInfo.requestData) : null;\r\n                batch.push(\"\");\r\n                batch.push(\"--\" + changesetId + \"--\");\r\n            }\r\n            else {\r\n                // Create a change set\r\n                batch.push(\"Content-Type: application/http\");\r\n                batch.push(\"Content-Transfer-Encoding: binary\");\r\n                batch.push(\"\");\r\n                batch.push(\"GET \" + request_1.targetInfo.requestUrl + \" HTTP/1.1\");\r\n                batch.push(\"Accept: application/json;odata=verbose\");\r\n                batch.push(\"\");\r\n                request_1.targetInfo.requestData ? batch.push(request_1.targetInfo.requestData) : null;\r\n                batch.push(\"\");\r\n            }\r\n        }\r\n        // Add the change set information to the batch\r\n        var batchRequest = batch.join(\"\\r\\n\");\r\n        var request = [];\r\n        request.push(\"Content-Type: multipart/mixed; boundary=\" + batchId);\r\n        request.push(\"Content-Length: \" + batchRequest.length);\r\n        request.push(\"\");\r\n        request.push(batchRequest);\r\n        request.push(\"\");\r\n        // Return the batch request\r\n        return request.join(\"\\r\\n\");\r\n    };\r\n    // Process the batch request callbacks\r\n    Batch.processCallbacks = function (requests) {\r\n        if (requests === void 0) { requests = []; }\r\n        // Parse the requests\r\n        for (var i = 0; i < requests.length; i++) {\r\n            var request = requests[i];\r\n            // Parse the batch request\r\n            for (var j = 0; j < request.length; j++) {\r\n                var batchRequest = request[j];\r\n                // See if a callback exists\r\n                if (batchRequest.callback) {\r\n                    // Execute the callback\r\n                    batchRequest.callback(batchRequest.response, batchRequest.targetInfo);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return Batch;\r\n}());\r\nexports.Batch = Batch;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/batch.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/helper.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/helper.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Helper = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\nvar xhrRequest_1 = __webpack_require__(/*! ./xhrRequest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/xhrRequest.js\");\r\n/**\r\n * Request Helper\r\n */\r\nexports.Helper = {\r\n    // Method to add the base references\r\n    addBaseMethods: function (base, obj) {\r\n        // Add the base references\r\n        obj[\"addMethods\"] = base.addMethods;\r\n        obj[\"base\"] = base.base;\r\n        obj[\"done\"] = base.done;\r\n        obj[\"execute\"] = base.execute;\r\n        obj[\"executeAndWait\"] = base.executeAndWait;\r\n        obj[\"executeMethod\"] = base.executeMethod;\r\n        obj[\"existsFl\"] = true;\r\n        obj[\"getCollection\"] = base.getCollection;\r\n        obj[\"getProperty\"] = base.getProperty;\r\n        obj[\"parent\"] = base;\r\n        obj[\"targetInfo\"] = base.targetInfo;\r\n        obj[\"updateMetadataUri\"] = base.updateMetadataUri;\r\n        obj[\"waitForRequestsToComplete\"] = base.waitForRequestsToComplete;\r\n    },\r\n    // Method to wait for all requests to complete, before resolving the request\r\n    done: function (base, resolve) {\r\n        // Ensure the base is set\r\n        base.base = base.base ? base.base : base;\r\n        // Ensure the response index is set\r\n        base.responseIndex = base.responseIndex >= 0 ? base.responseIndex : 0;\r\n        // Wait for the responses to execute\r\n        _1.Request.waitForRequestsToComplete(base, function () {\r\n            var responses = base.base.responses;\r\n            // Clear the responses\r\n            base.base.responses = [];\r\n            // Clear the wait flags\r\n            base.base.waitFlags = [];\r\n            // Resolve the request\r\n            resolve ? resolve.apply(base, responses) : null;\r\n        });\r\n    },\r\n    // Method to execute a method\r\n    executeMethod: function (base, methodName, methodConfig, args) {\r\n        var targetInfo = null;\r\n        // See if the metadata is defined for the base object\r\n        var metadata = base[\"d\"] ? base[\"d\"].__metadata : base[\"__metadata\"];\r\n        if (metadata && metadata.uri) {\r\n            // Create the target information and use the url defined for the base object\r\n            targetInfo = {\r\n                url: metadata.uri\r\n            };\r\n            // See if we are inheriting the metadata type\r\n            if (methodConfig.inheritMetadataType && metadata.type) {\r\n                // Copy the metadata type\r\n                methodConfig.metadataType = metadata.type;\r\n            }\r\n            // Update the metadata uri\r\n            exports.Helper.updateMetadataUri(base, metadata, targetInfo);\r\n        }\r\n        else {\r\n            // Copy the target information\r\n            targetInfo = Object.create(base.targetInfo);\r\n        }\r\n        // Get the method information\r\n        var methodInfo = new _1.MethodInfo(methodName, methodConfig, args);\r\n        // Update the target information\r\n        targetInfo.bufferFl = methodConfig.requestType == _1.RequestType.GetBuffer;\r\n        targetInfo.data = methodInfo.body;\r\n        targetInfo.defaultToWebFl = typeof (targetInfo.defaultToWebFl) === \"undefined\" && base.base ? base.base.targetInfo.defaultToWebFl : targetInfo.defaultToWebFl;\r\n        targetInfo.method = methodInfo.requestMethod;\r\n        targetInfo.requestDigest = typeof (targetInfo.requestDigest) === \"undefined\" && base.base && base.base.targetInfo.requestDigest ? base.base.targetInfo.requestDigest : targetInfo.requestDigest;\r\n        targetInfo.requestType = methodConfig.requestType;\r\n        // See if we are appending the endpoint\r\n        if (methodInfo.appendEndpointFl) {\r\n            // Append to the endpoint\r\n            targetInfo.endpoint += \".\" + methodInfo.url;\r\n        }\r\n        // Else, see if we are replacing the endpoint\r\n        else if (methodInfo.replaceEndpointFl) {\r\n            // Replace the endpoint\r\n            targetInfo.endpoint = methodInfo.url;\r\n        }\r\n        // Else, ensure the method url exists\r\n        else if (methodInfo.url && methodInfo.url.length > 0) {\r\n            // Ensure the end point exists\r\n            targetInfo.endpoint = targetInfo.endpoint ? targetInfo.endpoint : \"\";\r\n            // See if the endpoint exists, and the method is not a query string\r\n            if (targetInfo.endpoint && methodInfo.url && methodInfo.url.indexOf(\"?\") != 0) {\r\n                // Add a \"/\" separator to the url\r\n                targetInfo.endpoint += \"/\";\r\n            }\r\n            // Append the url\r\n            targetInfo.endpoint += methodInfo.url;\r\n        }\r\n        // Create a new object\r\n        var obj = new _1.Base(targetInfo);\r\n        // Set the properties\r\n        obj.base = base.base ? base.base : base;\r\n        obj.getAllItemsFl = methodInfo.getAllItemsFl;\r\n        obj.parent = base;\r\n        obj.requestType = methodConfig.requestType;\r\n        // Ensure the return type exists\r\n        if (methodConfig.returnType) {\r\n            // Add the methods\r\n            _1.Request.addMethods(obj, { __metadata: { type: methodConfig.returnType } });\r\n        }\r\n        // Return the object\r\n        return obj;\r\n    },\r\n    // Method to return a collection\r\n    getCollection: function (base, method, args) {\r\n        // Copy the target information\r\n        var targetInfo = Object.create(base.targetInfo);\r\n        // Clear the target information properties from any previous requests\r\n        targetInfo.data = null;\r\n        targetInfo.method = null;\r\n        // See if the metadata is defined for the base object\r\n        var metadata = base[\"d\"] ? base[\"d\"].__metadata : base[\"__metadata\"];\r\n        if (metadata && metadata.uri) {\r\n            // Update the url of the target information\r\n            targetInfo.url = metadata.uri;\r\n            // Update the metadata uri\r\n            exports.Helper.updateMetadataUri(base, metadata, targetInfo);\r\n            // Set the endpoint\r\n            targetInfo.endpoint = method;\r\n        }\r\n        else {\r\n            // Append the method to the endpoint\r\n            targetInfo.endpoint += \"/\" + method;\r\n        }\r\n        // Update the callback\r\n        targetInfo.callback = args && typeof (args[0]) === \"function\" ? args[0] : null;\r\n        // Create a new object\r\n        var obj = new _1.Base(targetInfo);\r\n        // Set the properties\r\n        obj.base = base.base ? base.base : base;\r\n        obj.parent = base;\r\n        // Return the object\r\n        return obj;\r\n    },\r\n    // Method to get the next set of results\r\n    getNextSetOfResults: function (base) {\r\n        // Create the target information to query the next set of results\r\n        var targetInfo = Object.create(base.targetInfo);\r\n        targetInfo.endpoint = \"\";\r\n        targetInfo.url = base[\"d\"].__next;\r\n        // Create a new object\r\n        var obj = new _1.Base(targetInfo);\r\n        // Set the properties\r\n        obj.base = base.base ? base.base : base;\r\n        obj.parent = base;\r\n        // Return the object\r\n        return obj;\r\n    },\r\n    // Method to return a property of the base object\r\n    getProperty: function (base, propertyName, requestType) {\r\n        // Copy the target information\r\n        var targetInfo = Object.create(base.targetInfo);\r\n        // See if this is a graph request\r\n        if (requestType.indexOf(\"graph\") == 0) {\r\n            // Default the request type\r\n            targetInfo.requestType = _1.RequestType.GraphGet;\r\n        }\r\n        // Clear the target information properties from any previous requests\r\n        targetInfo.data = null;\r\n        targetInfo.method = null;\r\n        // See if the metadata is defined for the base object\r\n        var metadata = base[\"d\"] ? base[\"d\"].__metadata : base[\"__metadata\"];\r\n        if (metadata && metadata.uri) {\r\n            // Update the url of the target information\r\n            targetInfo.url = metadata.uri;\r\n            // Update the metadata uri\r\n            exports.Helper.updateMetadataUri(base, metadata, targetInfo);\r\n            // Set the endpoint\r\n            targetInfo.endpoint = propertyName;\r\n        }\r\n        else {\r\n            // Append the property name to the endpoint\r\n            targetInfo.endpoint += \"/\" + propertyName;\r\n        }\r\n        // Create a new object\r\n        var obj = new _1.Base(targetInfo);\r\n        // Set the properties\r\n        obj.base = base.base ? base.base : base;\r\n        obj.parent = base;\r\n        // Add the methods\r\n        requestType ? _1.Request.addMethods(obj, { __metadata: { type: requestType } }) : null;\r\n        // Return the object\r\n        return obj;\r\n    },\r\n    // Method to get the request information\r\n    getRequestInfo: function (base) {\r\n        // Create the request, but don't execute it\r\n        var xhr = new xhrRequest_1.XHRRequest(true, new _1.TargetInfo(base.targetInfo), null, false);\r\n        // Return the request information\r\n        return xhr.requestInfo;\r\n    },\r\n    // Method to stringify the object\r\n    stringify: function (base) {\r\n        // Stringify the object\r\n        return JSON.stringify({\r\n            response: base.response,\r\n            status: base.status,\r\n            targetInfo: {\r\n                accessToken: base.targetInfo.accessToken,\r\n                bufferFl: base.targetInfo.bufferFl,\r\n                defaultToWebFl: base.targetInfo.defaultToWebFl,\r\n                endpoint: base.targetInfo.endpoint,\r\n                method: base.targetInfo.method,\r\n                overrideDefaultRequestToHostFl: base.targetInfo.overrideDefaultRequestToHostFl,\r\n                requestDigest: base.targetInfo.requestDigest,\r\n                requestHeader: base.targetInfo.requestHeader,\r\n                requestInfo: base.targetInfo.requestInfo,\r\n                requestType: base.targetInfo.requestType,\r\n                url: base.targetInfo.url\r\n            }\r\n        });\r\n    },\r\n    // Method to update a collection object\r\n    updateDataCollection: function (obj, results) {\r\n        // Ensure the base is a collection\r\n        if (results) {\r\n            // Save the results\r\n            obj[\"results\"] = obj[\"results\"] ? obj[\"results\"].concat(results) : results;\r\n            // See if only one object exists\r\n            if (obj[\"results\"].length > 0) {\r\n                var results_2 = obj[\"results\"];\r\n                // Parse the results\r\n                for (var _i = 0, results_1 = results_2; _i < results_1.length; _i++) {\r\n                    var result = results_1[_i];\r\n                    // Add the base methods\r\n                    exports.Helper.addBaseMethods(obj, result);\r\n                    // Update the metadata\r\n                    exports.Helper.updateMetadata(obj, result);\r\n                    // Add the methods\r\n                    _1.Request.addMethods(result, result);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    // Method to update the expanded properties\r\n    updateExpandedProperties: function (base) {\r\n        // Ensure this is an OData request\r\n        if (base[\"results\"] == null || base.requestType != _1.RequestType.OData) {\r\n            return;\r\n        }\r\n        // Parse the results\r\n        for (var i = 0; i < base[\"results\"].length; i++) {\r\n            var result = base[\"results\"][i];\r\n            // Parse the properties\r\n            for (var key in result) {\r\n                var prop = result[key];\r\n                // See if this property was expanded\r\n                if (prop && prop[\"__metadata\"]) {\r\n                    // Add the base methods\r\n                    exports.Helper.addBaseMethods(result, prop);\r\n                    // Update the metadata\r\n                    exports.Helper.updateMetadata(result, prop);\r\n                    // Add the methods\r\n                    _1.Request.addMethods(prop, prop);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    // Method to update the metadata\r\n    updateMetadata: function (base, data) {\r\n        // See if this is the app web\r\n        if (lib_1.ContextInfo.isAppWeb) {\r\n            // Get the url information\r\n            var hostUrl = lib_1.ContextInfo.webAbsoluteUrl.toLowerCase();\r\n            var requestUrl = data && data.__metadata && data.__metadata.uri ? data.__metadata.uri.toLowerCase() : null;\r\n            var targetUrl = base.targetInfo && base.targetInfo.url ? base.targetInfo.url.toLowerCase() : null;\r\n            // Ensure the urls exist\r\n            if (hostUrl == null || requestUrl == null || targetUrl == null) {\r\n                return;\r\n            }\r\n            // See if we need to make an update\r\n            if (targetUrl.indexOf(hostUrl) == 0) {\r\n                return;\r\n            }\r\n            // Update the metadata uri\r\n            data.__metadata.uri = requestUrl.replace(hostUrl, targetUrl);\r\n        }\r\n        // See if this is a webpart definition\r\n        if (data.__metadata && /SP.WebParts.WebPartDefinition/.test(data.__metadata.type)) {\r\n            // Update the metadata uri\r\n            data.__metadata.uri = data.__metadata.uri.replace(/SP.WebParts.WebPartDefinition/, base.targetInfo.endpoint + \"/getById('\") + \"')\";\r\n        }\r\n    },\r\n    // Method to update the metadata uri\r\n    updateMetadataUri: function (base, metadata, targetInfo) {\r\n        // See if this is a field\r\n        if (/^SP.Field/.test(metadata.type) || /^SP\\..*Field$/.test(metadata.type)) {\r\n            // Fix the url reference\r\n            targetInfo.url = targetInfo.url.replace(/AvailableFields/, \"fields\");\r\n        }\r\n        // Else, see if this is an event receiver\r\n        else if (/SP.EventReceiverDefinition/.test(metadata.type)) {\r\n            // Fix the url reference\r\n            targetInfo.url = targetInfo.url.replace(/\\/EventReceiver\\//, \"/EventReceivers/\");\r\n        }\r\n        // Else, see if this is a tenant app\r\n        else if (/Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata/.test(targetInfo.url)) {\r\n            // Fix the url reference\r\n            targetInfo.url = targetInfo.url.split(\"Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata\")[0] + \"web/tenantappcatalog/availableapps/getbyid('\" + base[\"ID\"] + \"')\";\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/helper.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./requestType */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/requestType.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./helper */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/helper.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./base */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/base.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./batch */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/batch.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./methodInfo */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/methodInfo.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./oData */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/oData.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./request */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/request.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./targetInfo */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/targetInfo.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./xhrRequest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/xhrRequest.js\"), exports);\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/methodInfo.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/methodInfo.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodInfo = void 0;\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/*********************************************************************************************************************************/\r\n// Method Information\r\n// This class will create the method information for the request.\r\n/*********************************************************************************************************************************/\r\nvar MethodInfo = /** @class */ (function () {\r\n    /*********************************************************************************************************************************/\r\n    // Constructor\r\n    /*********************************************************************************************************************************/\r\n    function MethodInfo(methodName, methodInfo, args) {\r\n        // Default the properties\r\n        this.methodInfo = methodInfo;\r\n        this.methodInfo.argValues = args;\r\n        this.methodInfo.name = typeof (this.methodInfo.name) === \"string\" ? this.methodInfo.name : methodName;\r\n        // Generate the parameters\r\n        this.generateParams();\r\n        // Generate the url\r\n        this.methodUrl = this.generateUrl();\r\n    }\r\n    Object.defineProperty(MethodInfo.prototype, \"appendEndpointFl\", {\r\n        /*********************************************************************************************************************************/\r\n        // Public Properties\r\n        /*********************************************************************************************************************************/\r\n        // Flag to determine if this method replaces the endpoint\r\n        get: function () { return this.methodInfo.appendEndpointFl ? true : false; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"body\", {\r\n        // The data passed through the body of the request\r\n        get: function () { return this.methodData; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"getAllItemsFl\", {\r\n        // Flag to determine if we are getting all items\r\n        get: function () { return this.methodInfo.getAllItemsFl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"replaceEndpointFl\", {\r\n        // Flag to determine if this method replaces the endpoint\r\n        get: function () { return this.methodInfo.replaceEndpointFl ? true : false; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"requestMethod\", {\r\n        // The request method\r\n        get: function () {\r\n            // Return the request method if it exists\r\n            if (typeof (this.methodInfo.requestMethod) === \"string\") {\r\n                return this.methodInfo.requestMethod;\r\n            }\r\n            // Determine the request method, based on the request type\r\n            switch (this.methodInfo.requestType) {\r\n                case _1.RequestType.Delete:\r\n                case _1.RequestType.Post:\r\n                case _1.RequestType.PostBodyNoArgs:\r\n                case _1.RequestType.PostWithArgs:\r\n                case _1.RequestType.PostWithArgsAndData:\r\n                case _1.RequestType.PostWithArgsInBody:\r\n                case _1.RequestType.PostWithArgsInQS:\r\n                case _1.RequestType.PostWithArgsInQSAsVar:\r\n                case _1.RequestType.PostWithArgsValueOnly:\r\n                case _1.RequestType.PostReplace:\r\n                    return \"POST\";\r\n                default:\r\n                    return \"GET\";\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"url\", {\r\n        // The url of the method and parameters\r\n        get: function () { return this.methodUrl; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"passDataInBody\", {\r\n        /*********************************************************************************************************************************/\r\n        // Private Variables\r\n        /*********************************************************************************************************************************/\r\n        get: function () { return this.methodInfo.requestType == _1.RequestType.GetWithArgsInBody || this.methodInfo.requestType == _1.RequestType.PostBodyNoArgs || this.methodInfo.requestType == _1.RequestType.PostWithArgsInBody; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"passDataInQS\", {\r\n        get: function () { return this.methodInfo.requestType == _1.RequestType.GetWithArgsInQS || this.methodInfo.requestType == _1.RequestType.PostWithArgsInQS; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"passDataInQSAsVar\", {\r\n        get: function () { return this.methodInfo.requestType == _1.RequestType.GetWithArgsInQSAsVar || this.methodInfo.requestType == _1.RequestType.PostWithArgsInQSAsVar; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"isTemplate\", {\r\n        get: function () { return this.methodInfo.data ? true : false; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MethodInfo.prototype, \"replace\", {\r\n        get: function () { return this.methodInfo.requestType == _1.RequestType.GetReplace || this.methodInfo.requestType == _1.RequestType.PostReplace; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /*********************************************************************************************************************************/\r\n    // Private Methods\r\n    /*********************************************************************************************************************************/\r\n    // Method to generate the method input parameters\r\n    MethodInfo.prototype.generateParams = function () {\r\n        var maxArgNames = 0;\r\n        var params = {};\r\n        // Ensure values exist\r\n        if (this.methodInfo.argValues == null) {\r\n            return;\r\n        }\r\n        // See if the argument names exist\r\n        if (this.methodInfo.argNames) {\r\n            // Set the max arguments\r\n            maxArgNames = this.methodInfo.argNames.length -\r\n                (this.methodInfo.requestType == _1.RequestType.PostWithArgsAndData || this.methodInfo.requestType == _1.RequestType.PostReplaceWithData ? 1 : 0);\r\n            // Parse the argument names\r\n            for (var i = 0; i < maxArgNames && i < this.methodInfo.argValues.length; i++) {\r\n                var name_1 = this.methodInfo.argNames[i];\r\n                var value = this.methodInfo.argValues[i];\r\n                // Copy the parameter value\r\n                switch (typeof (this.methodInfo.argValues[i])) {\r\n                    case \"boolean\":\r\n                        params[name_1] = this.methodInfo.argValues[i] ? \"true\" : \"false\";\r\n                        break;\r\n                    case \"number\":\r\n                        params[name_1] = this.methodInfo.argValues[i];\r\n                        break;\r\n                    //case \"string\":\r\n                    //params[name] = this.isTemplate || this.replace ? value : \"'\" + value + \"'\";\r\n                    //break;\r\n                    default:\r\n                        params[name_1] = value;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        // See if the method has parameters\r\n        var isEmpty = true;\r\n        for (var k in params) {\r\n            isEmpty = false;\r\n            break;\r\n        }\r\n        this.methodParams = isEmpty ? null : params;\r\n        // See if method parameters exist\r\n        if (this.methodParams) {\r\n            // See if a template is defined for the method data\r\n            if (this.isTemplate) {\r\n                // Ensure the object is a string\r\n                if (typeof (this.methodInfo.data) !== \"string\") {\r\n                    // Stringify the object\r\n                    this.methodInfo.data = JSON.stringify(this.methodInfo.data);\r\n                }\r\n                // Parse the arguments\r\n                for (var key in this.methodParams) {\r\n                    // Replace the argument in the template\r\n                    this.methodInfo.data = this.methodInfo.data.replace(\"[[\" + key + \"]]\", this.methodParams[key].replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\"));\r\n                }\r\n                // Set the method data\r\n                this.methodData = JSON.parse(this.methodInfo.data);\r\n            }\r\n        }\r\n        // See if argument values exist\r\n        if (this.methodInfo.argValues && this.methodInfo.argValues.length > 0) {\r\n            // See if argument names exist\r\n            if (this.methodInfo.argNames == null || this.methodInfo.requestType == _1.RequestType.PostBodyNoArgs) {\r\n                // Set the method data to first argument value\r\n                this.methodData = this.methodInfo.argValues[0];\r\n            }\r\n            // Else, see if we are passing arguments outside of the parameters\r\n            else if (this.methodInfo.argValues.length > maxArgNames) {\r\n                // Set the method data to the next available argument value\r\n                this.methodData = this.methodInfo.argValues[maxArgNames];\r\n            }\r\n        }\r\n        // See if the metadata type exists\r\n        if (this.methodInfo.metadataType) {\r\n            // See if parameters exist\r\n            if (this.methodInfo.argNames && this.methodInfo.requestType != _1.RequestType.PostBodyNoArgs) {\r\n                // Append the metadata to the first parameter, if it doesn't exist\r\n                (this.methodData || this.methodParams)[this.methodInfo.argNames[0]][\"__metadata\"] =\r\n                    (this.methodData || this.methodParams)[this.methodInfo.argNames[0]][\"__metadata\"] || { \"type\": this.methodInfo.metadataType };\r\n            }\r\n            else {\r\n                // Append the metadata to the parameters, if it doesn't exist\r\n                (this.methodData || this.methodParams)[\"__metadata\"] =\r\n                    (this.methodData || this.methodParams)[\"__metadata\"] || { \"type\": this.methodInfo.metadataType };\r\n            }\r\n        }\r\n    };\r\n    // Method to generate the method and parameters as a url\r\n    MethodInfo.prototype.generateUrl = function () {\r\n        var url = this.methodInfo.name;\r\n        // See if we are deleting the object\r\n        if (this.methodInfo.requestType == _1.RequestType.Delete) {\r\n            // Update the url\r\n            url = \"deleteObject\";\r\n        }\r\n        // See if we are passing the data in the body\r\n        if (this.passDataInBody) {\r\n            var data = this.methodData || this.methodParams;\r\n            // Stringify the data to be passed in the body\r\n            this.methodData = JSON.stringify(data);\r\n        }\r\n        // See if we are passing the data in the query string as a variable\r\n        if (this.passDataInQSAsVar) {\r\n            var data = this.methodParams || this.methodData;\r\n            // Append the parameters in the query string\r\n            url += \"(@v)?@v=\" + (typeof (data) === \"string\" ? \"'\" + encodeURIComponent(data) + \"'\" : JSON.stringify(data));\r\n        }\r\n        // See if we are replacing the arguments\r\n        if (this.replace) {\r\n            // Parse the arguments\r\n            for (var key in this.methodParams) {\r\n                // Replace the argument in the url\r\n                url = url.replace(\"[[\" + key + \"]]\", encodeURIComponent(this.methodParams[key]));\r\n            }\r\n        }\r\n        // Else, see if this is an odata request\r\n        else if (this.methodInfo.requestType == _1.RequestType.OData) {\r\n            var oData = new _1.OData(this.methodParams[\"oData\"]);\r\n            // Update the url\r\n            url = \"?\" + oData.QueryString;\r\n            // Set the get all items Flag\r\n            this.methodInfo.getAllItemsFl = oData.GetAllItems;\r\n        }\r\n        // Else, see if we are not passing the data in the body or query string as a variable\r\n        else if (!this.passDataInBody && !this.passDataInQSAsVar) {\r\n            var params = \"\";\r\n            // Ensure data exists\r\n            var data = this.methodParams || this.methodData;\r\n            if (data) {\r\n                // Ensure the data is an object\r\n                data = data && typeof (data) === \"object\" ? data : { value: data };\r\n                // Parse the parameters\r\n                for (var name_2 in data) {\r\n                    var value = data[name_2];\r\n                    value = typeof (value) === \"string\" ? \"'\" + value + \"'\" : value;\r\n                    switch (this.methodInfo.requestType) {\r\n                        // Append the value only\r\n                        case _1.RequestType.GetWithArgsValueOnly:\r\n                        case _1.RequestType.PostWithArgsValueOnly:\r\n                            params += value + \", \";\r\n                            break;\r\n                        // Append the parameter and value\r\n                        default:\r\n                            params += name_2 + \"=\" + value + \", \";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            // See if we are passing data in the query string\r\n            if (this.passDataInQS) {\r\n                // Set the url\r\n                url += params.length > 0 ? \"?\" + params.replace(/, $/, \"&\") : \"\";\r\n            }\r\n            else {\r\n                // Set the url\r\n                url += params.length > 0 ? \"(\" + params.replace(/, $/, \"\") + \")\" : \"\";\r\n            }\r\n        }\r\n        // Return the url\r\n        return url;\r\n    };\r\n    return MethodInfo;\r\n}());\r\nexports.MethodInfo = MethodInfo;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/methodInfo.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/oData.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/oData.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OData = void 0;\r\n/**\r\n * OData\r\n */\r\nvar OData = /** @class */ (function () {\r\n    /*********************************************************************************************************************************/\r\n    // Constructor\r\n    /*********************************************************************************************************************************/\r\n    // The class constructor\r\n    function OData(oData) {\r\n        // Default the Variables\r\n        this._custom = oData && oData.Custom ? oData.Custom : null;\r\n        this._expand = oData && oData.Expand ? oData.Expand : [];\r\n        this._filter = oData && oData.Filter ? oData.Filter : null;\r\n        this._getAllItems = oData && oData.GetAllItems ? oData.GetAllItems : false;\r\n        this._orderBy = oData && oData.OrderBy ? oData.OrderBy : [];\r\n        this._select = oData && oData.Select ? oData.Select : [];\r\n        this._skip = oData && oData.Skip ? oData.Skip : null;\r\n        this._top = oData && oData.Top ? oData.Top : null;\r\n    }\r\n    Object.defineProperty(OData.prototype, \"Custom\", {\r\n        /*********************************************************************************************************************************/\r\n        // Properties\r\n        /*********************************************************************************************************************************/\r\n        // Custom\r\n        get: function () { return this._custom; },\r\n        set: function (value) { this._custom = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"Expand\", {\r\n        // Expand\r\n        get: function () { return this._expand; },\r\n        set: function (value) { this._expand = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"Filter\", {\r\n        // Filter\r\n        get: function () { return this._filter; },\r\n        set: function (value) { this._filter = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"GetAllItems\", {\r\n        // Flag to get all items\r\n        get: function () { return this._getAllItems; },\r\n        set: function (value) { this._getAllItems = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"OrderBy\", {\r\n        // Order By\r\n        get: function () { return this._orderBy; },\r\n        set: function (value) { this._orderBy = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"QueryString\", {\r\n        // Query String\r\n        get: function () {\r\n            var qs = \"\";\r\n            var values = [];\r\n            // Get the query string values for the properties\r\n            values.push(this.getQSValue(\"$select\", this._select));\r\n            values.push(this.getQSValue(\"$orderby\", this._orderBy));\r\n            this._top ? values.push(\"$top=\" + this._top) : null;\r\n            this._skip ? values.push(\"$skip=\" + this._skip) : null;\r\n            this._filter ? values.push(\"$filter=\" + this._filter) : null;\r\n            values.push(this.getQSValue(\"$expand\", this._expand));\r\n            this._custom ? values.push(this._custom) : null;\r\n            // Parse the values\r\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\r\n                var value = values_1[_i];\r\n                // Ensure a value exists\r\n                if (value && value != \"\") {\r\n                    // Append the query string value\r\n                    qs += (qs == \"\" ? \"\" : \"&\") + value;\r\n                }\r\n            }\r\n            // Return the query string\r\n            return qs;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"Select\", {\r\n        // Select\r\n        get: function () { return this._select; },\r\n        set: function (value) { this._select = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"Skip\", {\r\n        // Skip\r\n        get: function () { return this._skip; },\r\n        set: function (value) { this._skip = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OData.prototype, \"Top\", {\r\n        // Top\r\n        get: function () { return this._top; },\r\n        set: function (value) { this._top = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /*********************************************************************************************************************************/\r\n    // Methods\r\n    /*********************************************************************************************************************************/\r\n    // Method to convert the array of strings to a query string value.\r\n    OData.prototype.getQSValue = function (qsKey, keys) {\r\n        // Return the query string\r\n        return keys.length > 0 ? qsKey + \"=\" + keys.join(\",\") : \"\";\r\n    };\r\n    return OData;\r\n}());\r\nexports.OData = OData;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/oData.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/request.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/request.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Request = void 0;\r\nvar base_1 = __webpack_require__(/*! ./base */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/base.js\");\r\nvar batch_1 = __webpack_require__(/*! ./batch */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/batch.js\");\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar helper_1 = __webpack_require__(/*! ./helper */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/helper.js\");\r\nvar mapper_1 = __webpack_require__(/*! ../mapper */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/mapper/index.js\");\r\nvar requestType_1 = __webpack_require__(/*! ./requestType */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/requestType.js\");\r\nvar targetInfo_1 = __webpack_require__(/*! ./targetInfo */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/targetInfo.js\");\r\nvar xhrRequest_1 = __webpack_require__(/*! ./xhrRequest */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/xhrRequest.js\");\r\n/**\r\n * Request\r\n */\r\nexports.Request = {\r\n    // Method to add the methods to base object\r\n    addMethods: function (base, data, graphType) {\r\n        var obj = base;\r\n        var isCollection = data.results && data.results.length > 0;\r\n        var methods = null;\r\n        // Determine the metadata\r\n        var metadata = isCollection ? data.results[0].__metadata : data.__metadata;\r\n        // Get the object type\r\n        var objType = metadata && metadata.type ? metadata.type : obj.targetInfo.endpoint;\r\n        // Get the methods from the default mapper, otherwise get it from the custom mapper\r\n        if ((methods = mapper_1.Mapper[objType + (isCollection ? \".Collection\" : \"\")]) == null) {\r\n            // Determine the object type\r\n            objType = objType.split('/');\r\n            objType = (objType[objType.length - 1]);\r\n            objType = objType.split('.');\r\n            objType = (objType[objType.length - 1]).toLowerCase();\r\n            objType += isCollection ? \"s\" : \"\";\r\n            // See if this is a graph request\r\n            if (/^graph/.test(objType)) {\r\n                // Do nothing\r\n            }\r\n            // Else, see if the base is a field\r\n            else if ((/^field/.test(objType) || /fields?$/.test(objType)) && objType != \"fieldlinks\" && objType != \"fields\") {\r\n                // Update the type\r\n                objType = \"field\" + (isCollection ? \"s\" : \"\");\r\n            }\r\n            // Else, see if the base is an item\r\n            else if (/item$/.test(objType)) {\r\n                // Update the type\r\n                objType = \"listitem\";\r\n            }\r\n            // Else, see if the base is an item collection\r\n            else if (/items$/.test(objType)) {\r\n                // Update the type\r\n                objType = \"items\";\r\n            }\r\n            // Else, see if this is a tenant app\r\n            else if (/corporatecatalogappmetadata/.test(objType)) {\r\n                // Update the type\r\n                objType = \"tenantapp\";\r\n            }\r\n            // Else, see if this is a tenant app collection\r\n            else if (/corporatecatalogappmetadatas/.test(objType)) {\r\n                // Update the type\r\n                objType = \"tenantapps\";\r\n            }\r\n            // Get the methods for the base object\r\n            methods = mapper_1.Mapper_Custom[objType];\r\n        }\r\n        // Ensure methods exist\r\n        if (methods) {\r\n            // Parse the methods\r\n            for (var methodName in methods) {\r\n                // Get the method information\r\n                var methodInfo = methods[methodName] ? methods[methodName] : {};\r\n                // See if the base is the \"Properties\" definition for the object\r\n                if (methodName == \"properties\") {\r\n                    // Parse the properties\r\n                    for (var _i = 0, methodInfo_1 = methodInfo; _i < methodInfo_1.length; _i++) {\r\n                        var property = methodInfo_1[_i];\r\n                        var propInfo = property.split(\"|\");\r\n                        // Get the metadata type\r\n                        var propName = propInfo[0];\r\n                        var propType = propInfo.length > 1 ? propInfo[1] : null;\r\n                        var subPropName = propInfo.length > 2 ? propInfo[2] : null;\r\n                        var subPropType = propInfo.length > 3 ? propInfo[3] : null;\r\n                        // See if the property is null or is a collection\r\n                        if (obj[propName] == null || (obj[propName].__deferred && obj[propName].__deferred.uri)) {\r\n                            // See if the base property has a sub-property defined for it\r\n                            if (propInfo.length == 4) {\r\n                                // Update the ' char in the property name\r\n                                subPropName = subPropName.replace(/'/g, \"\\\\'\");\r\n                                // Add the property\r\n                                obj[propName] = new Function(\"name\", \"name = name ? '\" + propName + subPropName + \"'.replace(/\\\\[Name\\\\]/g, name.toString().replace(/\\'/g, \\\"''\\\")) : null;\" +\r\n                                    \"return this.getProperty(name ? name : '\" + propName + \"', name ? '\" + subPropType + \"' : '\" + propType + \"');\");\r\n                            }\r\n                            else {\r\n                                // Add the property\r\n                                obj[propName] = new Function(\"return this.getProperty('\" + propName + \"', '\" + propType + \"');\");\r\n                            }\r\n                        }\r\n                    }\r\n                    // Continue the loop\r\n                    continue;\r\n                }\r\n                // See if the base object has a dynamic metadata type\r\n                if (typeof (methodInfo.metadataType) === \"function\") {\r\n                    // Clone the object properties\r\n                    methodInfo = JSON.parse(JSON.stringify(methodInfo));\r\n                    // Set the metadata type\r\n                    methodInfo.metadataType = methods[methodName].metadataType(obj);\r\n                }\r\n                // Add the method to the object\r\n                obj[methodName] = new Function(\"return this.executeMethod('\" + methodName + \"', \" + JSON.stringify(methodInfo) + \", arguments);\");\r\n            }\r\n        }\r\n    },\r\n    // Method to add properties to the base object\r\n    addProperties: function (base, data) {\r\n        // Parse the data properties\r\n        for (var key in data) {\r\n            var value = data[key];\r\n            // Skip properties\r\n            if (key == \"__metadata\" || key == \"results\") {\r\n                continue;\r\n            }\r\n            // See if the base is a collection property\r\n            if (value && value.__deferred && value.__deferred.uri) {\r\n                // Generate a method for the base property\r\n                base[\"get_\" + key] = base[\"get_\" + key] ? base[\"get_\" + key] : new Function(\"return this.getCollection('\" + key + \"', arguments);\");\r\n            }\r\n            else {\r\n                // Set the property, based on the property name\r\n                switch (key) {\r\n                    case \"ClientPeoplePickerResolveUser\":\r\n                    case \"ClientPeoplePickerSearchUser\":\r\n                        base[key] = JSON.parse(value);\r\n                        break;\r\n                    default:\r\n                        // Append the property to the base object\r\n                        base[key] = value;\r\n                        break;\r\n                }\r\n                // See if the base is a collection\r\n                if (base[key] && base[key].results) {\r\n                    // Ensure the collection is an object\r\n                    if (base[key].results.length == 0 || typeof (base[key].results[0]) === \"object\") {\r\n                        // Create the base property as a new request\r\n                        var objCollection = new base_1.Base(base.targetInfo);\r\n                        objCollection[\"results\"] = base[key].results;\r\n                        // See no results exist\r\n                        if (objCollection[\"results\"].length == 0) {\r\n                            // Set the metadata type to the key\r\n                            objCollection[\"__metadata\"] = { type: key };\r\n                        }\r\n                        // Update the endpoint for the base request to point to the base property\r\n                        objCollection.targetInfo.endpoint = (objCollection.targetInfo.endpoint.split(\"?\")[0] + \"/\" + key).replace(/\\//g, \"/\");\r\n                        // Add the methods\r\n                        exports.Request.addMethods(objCollection, objCollection);\r\n                        // Update the data collection\r\n                        helper_1.Helper.updateDataCollection(base, objCollection[\"results\"]);\r\n                        // Update the expanded properties\r\n                        helper_1.Helper.updateExpandedProperties(base);\r\n                        // Update the property\r\n                        base[key] = objCollection;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    // Method to execute the request\r\n    execute: function (base, args) {\r\n        var reject = null;\r\n        var resolve = null;\r\n        var waitFl = false;\r\n        // Parse the arguments\r\n        for (var i = 0; i < args.length; i++) {\r\n            var arg = args[i];\r\n            // Check the type\r\n            switch (typeof (arg)) {\r\n                case \"boolean\":\r\n                    // Set the wait flag\r\n                    waitFl = arg;\r\n                    break;\r\n                case \"function\":\r\n                    // See if the resolve method exists\r\n                    if (resolve) {\r\n                        // Set the reject method\r\n                        reject = arg;\r\n                    }\r\n                    else {\r\n                        // Set the resolve method\r\n                        resolve = arg;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        // Set the base\r\n        base.base = base.base || base;\r\n        // Set the base responses\r\n        base.base.responses = base.base.responses || [];\r\n        // Set the base wait flags\r\n        base.base.waitFlags = base.base.waitFlags || [];\r\n        // Set the response index\r\n        base.responseIndex = base.base.responses.length;\r\n        // Add this object to the responses\r\n        base.base.responses.push(base);\r\n        // See if we are waiting for the responses to complete\r\n        if (waitFl) {\r\n            // Wait for the responses to execute\r\n            exports.Request.waitForRequestsToComplete(base, function () {\r\n                // Execute this request\r\n                exports.Request.executeRequest(base, true, function (response, errorFl) {\r\n                    // See if there was an error\r\n                    if (errorFl) {\r\n                        // Set the wait flag\r\n                        base.base.waitFlags[base.responseIndex] = true;\r\n                        // Reject the request\r\n                        reject ? reject(response) : null;\r\n                    }\r\n                    // Else, see if there is a resolve method\r\n                    else if (resolve) {\r\n                        // Execute the callback and see if it returns a promise\r\n                        var returnVal = resolve(response);\r\n                        var waitFunc = returnVal ? returnVal.done || returnVal.then : null;\r\n                        if (waitFunc && typeof (waitFunc) === \"function\") {\r\n                            // Wait for the promise to complete\r\n                            waitFunc(function () {\r\n                                // Set the wait flag\r\n                                base.base.waitFlags[base.responseIndex] = true;\r\n                                // Set the base to this object, and clear requests\r\n                                // This will ensure requests from this object do not conflict w/ this request\r\n                                base.base = base;\r\n                                base.base.responses = [];\r\n                                base.base.waitFlags = [];\r\n                                // Reset the base\r\n                                base.base = (base.parent ? base.parent.base : null) || base.base;\r\n                            });\r\n                            // Do nothing\r\n                            return;\r\n                        }\r\n                        // Set the wait flag\r\n                        base.base.waitFlags[base.responseIndex] = true;\r\n                        // Set the base to this object, and clear requests\r\n                        // This will ensure requests from this object do not conflict w/ this request\r\n                        base.base = base;\r\n                        base.base.responses = [];\r\n                        base.base.waitFlags = [];\r\n                        // Reset the base\r\n                        base.base = (base.parent ? base.parent.base : null) || base.base;\r\n                    }\r\n                    else {\r\n                        // Set the wait flag\r\n                        base.base.waitFlags[base.responseIndex] = true;\r\n                    }\r\n                });\r\n            }, base.responseIndex);\r\n        }\r\n        else {\r\n            // Execute this request\r\n            exports.Request.executeRequest(base, true, function (response, errorFl) {\r\n                // See if there was an error\r\n                if (errorFl) {\r\n                    // Set the wait flag\r\n                    base.base.waitFlags[base.responseIndex] = true;\r\n                    // Reject the request\r\n                    reject ? reject(response) : null;\r\n                }\r\n                else {\r\n                    // Execute the resolve and see if it returns a promise\r\n                    var returnVal = resolve ? resolve(response) : null;\r\n                    if (returnVal && typeof (returnVal.done) === \"function\") {\r\n                        // Wait for the promise to complete\r\n                        returnVal.done(function () {\r\n                            // Set the wait flag\r\n                            base.base.waitFlags[base.responseIndex] = true;\r\n                        });\r\n                    }\r\n                    else {\r\n                        // Set the wait flag\r\n                        base.base.waitFlags[base.responseIndex] = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        // See if this is a query request\r\n        if (base.targetInfo.requestType == requestType_1.RequestType.OData) {\r\n            // Return the parent for chaining purposes\r\n            return base.parent;\r\n        }\r\n        // Return this object\r\n        return base;\r\n    },\r\n    // Method to execute the request\r\n    executeRequest: function (base, asyncFl, callback) {\r\n        var isBatchRequest = base.base && base.base.batchRequests && base.base.batchRequests.length > 0;\r\n        var targetInfo = isBatchRequest ? batch_1.Batch.getTargetInfo(base.base.batchRequests) : new targetInfo_1.TargetInfo(base.targetInfo);\r\n        // See if this is an asynchronous request\r\n        if (asyncFl) {\r\n            // See if the not a batch request, and it already exists\r\n            if (base.xhr && !isBatchRequest) {\r\n                // Execute the callback\r\n                callback ? callback(base, false) : null;\r\n            }\r\n            else {\r\n                // Create the request\r\n                base.xhr = new xhrRequest_1.XHRRequest(asyncFl, targetInfo, function () {\r\n                    // Update the response and status\r\n                    base.response = base.xhr.response;\r\n                    base.status = base.xhr.status;\r\n                    var errorFl = !(base.status >= 200 && base.status < 300);\r\n                    // See if we are returning a file buffer\r\n                    if (base.requestType == requestType_1.RequestType.GetBuffer) {\r\n                        // Execute the callback\r\n                        callback ? callback(base.response, errorFl) : null;\r\n                    }\r\n                    else {\r\n                        // Update the data object\r\n                        exports.Request.updateDataObject(base, isBatchRequest, callback);\r\n                        // Ensure this isn't a batch request\r\n                        if (!isBatchRequest) {\r\n                            // See if this is an xml response\r\n                            if (base.xml) {\r\n                                // Execute the callback\r\n                                callback ? callback(base, errorFl) : null;\r\n                            }\r\n                            else {\r\n                                // Validate the data collection\r\n                                exports.Request.validateDataCollectionResults(base).then(function () {\r\n                                    // Execute the callback\r\n                                    callback ? callback(base, errorFl) : null;\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        // Else, see if we already executed this request\r\n        else if (base.xhr) {\r\n            return base;\r\n        }\r\n        // Else, we haven't executed this request\r\n        else {\r\n            // Create the request\r\n            base.xhr = new xhrRequest_1.XHRRequest(asyncFl, targetInfo);\r\n            // Update the response and status\r\n            base.response = base.xhr.response;\r\n            base.status = base.xhr.status;\r\n            // See if we are returning a file buffer\r\n            if (base.requestType == requestType_1.RequestType.GetBuffer) {\r\n                // Return the response\r\n                return base.response;\r\n            }\r\n            // Update the base object\r\n            exports.Request.updateDataObject(base, isBatchRequest, callback);\r\n            // See if the base is a collection and has more results\r\n            if (base[\"d\"] && base[\"d\"].__next) {\r\n                // Add the \"next\" method to get the next set of results\r\n                base[\"next\"] = new Function(\"return this.getNextSetOfResults();\");\r\n            }\r\n            // Return the base object\r\n            return base;\r\n        }\r\n    },\r\n    // Method to parse the xml\r\n    parseXML: function (xml) {\r\n        var objData = {};\r\n        // Parse the properties\r\n        do {\r\n            // Get the index of the property\r\n            var idxStart = xml.indexOf(\"<d:\");\r\n            var idxEnd = xml.indexOf(\">\", idxStart);\r\n            if (idxEnd > idxStart && idxStart > -1) {\r\n                // Get the property\r\n                var propName = xml.substr(idxStart + 3, idxEnd - idxStart - 3);\r\n                propName = propName.split(' ')[0];\r\n                // Skip the \"element\" property\r\n                if (propName == \"element\") {\r\n                    // Skip this element\r\n                    idxEnd = xml.indexOf(\"</d:\" + propName, idxStart);\r\n                    xml = xml.substr(idxEnd + propName.length + 4);\r\n                    continue;\r\n                }\r\n                // See if this is a null value\r\n                if (xml[idxEnd - 1] == \"/\") {\r\n                    // Set the value\r\n                    objData[propName] = null;\r\n                    // Clear this property\r\n                    xml = xml.substr(idxEnd + 1);\r\n                }\r\n                else {\r\n                    // Get the value\r\n                    idxStart = idxEnd;\r\n                    idxEnd = xml.indexOf(\"</d:\" + propName, idxStart);\r\n                    // Set the value\r\n                    var value = xml.substr(idxStart + 1, idxEnd - idxStart - 1);\r\n                    if (value.indexOf(\"<d:\") == 0 && idxEnd > idxStart) {\r\n                        // Set the value\r\n                        objData[propName] = exports.Request.parseXML(value);\r\n                    }\r\n                    else {\r\n                        // Set the value\r\n                        objData[propName] = value;\r\n                    }\r\n                    // Clear this property\r\n                    idxEnd = xml.indexOf(\">\", idxStart + 1);\r\n                    xml = xml.substr(idxEnd + 1);\r\n                }\r\n            }\r\n            // Else, break from the loop\r\n            else {\r\n                break;\r\n            }\r\n        } while (xml.length > 0);\r\n        // Return the base object\r\n        return objData;\r\n    },\r\n    // Method to convert the input arguments into an object\r\n    updateDataObject: function (base, isBatchRequest, batchCallback) {\r\n        if (isBatchRequest === void 0) { isBatchRequest = false; }\r\n        // Ensure the request was successful\r\n        if (base.status >= 200 && base.status < 300) {\r\n            // Return if we are expecting a buffer\r\n            if (base.requestType == requestType_1.RequestType.GetBuffer) {\r\n                return;\r\n            }\r\n            // Parse the responses\r\n            var batchIdx = 0;\r\n            var batchRequestIdx = 0;\r\n            var responses = isBatchRequest ? base.response.split(\"\\n\") : [base.response];\r\n            for (var i = 0; i < responses.length; i++) {\r\n                var data = null;\r\n                // Set the response\r\n                var response = responses[i];\r\n                response = response === \"\" && !isBatchRequest ? \"{}\" : response;\r\n                // Set the xml flag\r\n                var isXML = response.indexOf(\"<?xml\") == 0;\r\n                if (isXML) {\r\n                    // Append the response while data exists\r\n                    while (responses[i + 1] && responses[i + 1].indexOf(\"--batchresponse\") != 0) {\r\n                        // Append the response\r\n                        response += responses[++i];\r\n                    }\r\n                }\r\n                // Try to convert the response\r\n                try {\r\n                    data = isXML ? response : JSON.parse(response);\r\n                }\r\n                catch (ex) {\r\n                    continue;\r\n                }\r\n                // Set the object based on the request type\r\n                var obj = isBatchRequest ? Object.create(base) : base;\r\n                // Set the exists flag\r\n                obj[\"existsFl\"] = typeof (obj[\"Exists\"]) === \"boolean\" ? obj[\"Exists\"] : data.error == null;\r\n                // See if this is xml\r\n                if (isXML) {\r\n                    var objData = void 0;\r\n                    // Get the response properties\r\n                    var idxStart = data.indexOf(\"<m:properties>\");\r\n                    var idxEnd = data.indexOf(\"</m:properties\");\r\n                    var idxDelStart = data.indexOf(\"<d:DeleteObject\");\r\n                    var idxDelEnd = data.indexOf('m:null=\"true\" />');\r\n                    var properties = idxEnd > idxStart ? data.substr(idxStart, idxEnd) : null;\r\n                    properties = properties == null && idxDelEnd > idxDelStart ? data.substr(idxDelStart, idxDelEnd) : properties;\r\n                    if (properties) {\r\n                        // Set the data object\r\n                        objData = exports.Request.parseXML(properties);\r\n                        // Update the metadata\r\n                        helper_1.Helper.updateMetadata(obj, objData);\r\n                        // Update the base object's properties\r\n                        exports.Request.addProperties(obj, objData);\r\n                        // Add the methods\r\n                        exports.Request.addMethods(obj, objData, objData[\"@odata.context\"]);\r\n                        // Update the data collection\r\n                        helper_1.Helper.updateDataCollection(obj, objData[\"results\"]);\r\n                        // Update the expanded properties\r\n                        helper_1.Helper.updateExpandedProperties(obj);\r\n                    }\r\n                    else {\r\n                        // Update the object to the raw data\r\n                        obj = data;\r\n                    }\r\n                }\r\n                // Else, see if the data properties exists\r\n                else if (data.d) {\r\n                    // Save a reference to it\r\n                    obj[\"d\"] = data.d;\r\n                    // Update the metadata\r\n                    helper_1.Helper.updateMetadata(obj, data.d);\r\n                    // Update the base object's properties\r\n                    exports.Request.addProperties(obj, data.d);\r\n                    // Add the methods\r\n                    exports.Request.addMethods(obj, data.d, data[\"@odata.context\"]);\r\n                    // Update the data collection\r\n                    helper_1.Helper.updateDataCollection(obj, data.d.results);\r\n                    // Update the expanded properties\r\n                    helper_1.Helper.updateExpandedProperties(obj);\r\n                }\r\n                else {\r\n                    // Update the base object's properties\r\n                    exports.Request.addProperties(obj, data);\r\n                }\r\n                // See if the batch request exists\r\n                if (isBatchRequest) {\r\n                    // Get the batch request\r\n                    var batchRequest = base.base.batchRequests[batchIdx][batchRequestIdx++];\r\n                    if (batchRequest == null) {\r\n                        // Update the batch indexes\r\n                        batchIdx++;\r\n                        batchRequestIdx = 0;\r\n                        // Ensure the requests exist\r\n                        if (base.base.batchRequests[batchIdx]) {\r\n                            // Update the batch request\r\n                            var batch = base.base.batchRequests[batchIdx];\r\n                            batchRequest = batch ? batch[batchRequestIdx++] : null;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    // Ensure the batch request exists\r\n                    if (batchRequest) {\r\n                        // Set the response object\r\n                        batchRequest.response = obj;\r\n                    }\r\n                }\r\n            }\r\n            // See if this was a batch request\r\n            if (isBatchRequest) {\r\n                // Process the callbacks\r\n                batch_1.Batch.processCallbacks(base.base.batchRequests);\r\n                // Execute the callback if it exists\r\n                batchCallback ? batchCallback(base.base.batchRequests) : null;\r\n                // Clear the batch requests\r\n                base.base.batchRequests = null;\r\n            }\r\n        }\r\n    },\r\n    // Method to validate the data collection results\r\n    validateDataCollectionResults: function (base) {\r\n        // Return a promise\r\n        return new Promise(function (resolve, reject) {\r\n            // Method to validate the request\r\n            var request = function (xhr, resolve) {\r\n                // Validate the response\r\n                if (xhr && xhr.status < 400 && typeof (xhr.response) === \"string\" && xhr.response.length > 0) {\r\n                    // Convert the response and ensure the data property exists\r\n                    var data = JSON.parse(xhr.response);\r\n                    // Set the next item flag\r\n                    base.nextFl = data.d && data.d.__next;\r\n                    // See if there are more items to get\r\n                    if (base.nextFl) {\r\n                        // See if we are getting all items in the base request\r\n                        if (base.getAllItemsFl) {\r\n                            // Create the target information to query the next set of results\r\n                            var targetInfo = Object.create(base.targetInfo);\r\n                            targetInfo.endpoint = \"\";\r\n                            targetInfo.url = data.d.__next;\r\n                            // Create a new object\r\n                            new xhrRequest_1.XHRRequest(true, new targetInfo_1.TargetInfo(targetInfo), function (xhr) {\r\n                                // Convert the response and ensure the data property exists\r\n                                var data = JSON.parse(xhr.response);\r\n                                if (data.d) {\r\n                                    // Update the data collection\r\n                                    helper_1.Helper.updateDataCollection(base, data.d.results);\r\n                                    // Update the expanded properties\r\n                                    helper_1.Helper.updateExpandedProperties(base);\r\n                                    // Append the raw data results\r\n                                    base[\"d\"].results = base[\"d\"].results.concat(data.d.results);\r\n                                    // Validate the data collection\r\n                                    request(xhr, resolve);\r\n                                }\r\n                                else {\r\n                                    // Resolve the promise\r\n                                    resolve();\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            // Add a method to get the next set of results\r\n                            base[\"next\"] = new Function(\"return this.getNextSetOfResults();\");\r\n                            // Resolve the promise\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Resolve the promise\r\n                        resolve();\r\n                    }\r\n                }\r\n                else {\r\n                    // Resolve the promise\r\n                    resolve();\r\n                }\r\n            };\r\n            // Execute the request\r\n            request(base.xhr, resolve);\r\n        });\r\n    },\r\n    // Method to wait for the parent requests to complete\r\n    waitForRequestsToComplete: function (base, callback, requestIdx) {\r\n        // Ensure a callback exists and is a function\r\n        if (typeof (callback) === \"function\") {\r\n            // Loop until the requests have completed\r\n            var intervalId_1 = lib_1.ContextInfo.window.setInterval(function () {\r\n                var counter = 0;\r\n                // Parse the responses to the requests\r\n                for (var i = 0; i < base.base.responses.length; i++) {\r\n                    var response = base.base.responses[i];\r\n                    // See if we are waiting until a specified index\r\n                    if (requestIdx == counter++) {\r\n                        break;\r\n                    }\r\n                    // Return if the request hasn't completed\r\n                    if (response.xhr == null || !response.xhr.completedFl) {\r\n                        return;\r\n                    }\r\n                    // Ensure the wait flag is set for the previous request\r\n                    if (counter > 0 && base.base.waitFlags[counter - 1] != true) {\r\n                        return;\r\n                    }\r\n                }\r\n                // Clear the interval\r\n                lib_1.ContextInfo.window.clearInterval(intervalId_1);\r\n                // Execute the callback\r\n                callback();\r\n            }, 10);\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/request.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/requestType.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/requestType.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RequestType = void 0;\r\n/**\r\n * Request Type\r\n */\r\nexports.RequestType = {\r\n    // Requests\r\n    Custom: 0,\r\n    Delete: 1,\r\n    Merge: 2,\r\n    OData: 3,\r\n    // Get Requests\r\n    Get: 10,\r\n    GetBuffer: 11,\r\n    GetWithArgs: 12,\r\n    GetWithArgsInBody: 13,\r\n    GetWithArgsInQS: 14,\r\n    GetWithArgsInQSAsVar: 15,\r\n    GetWithArgsValueOnly: 16,\r\n    GetReplace: 17,\r\n    // Graph Requests\r\n    GraphGet: 20,\r\n    GraphPost: 21,\r\n    // Post Requests\r\n    Post: 30,\r\n    PostBodyNoArgs: 31,\r\n    PostWithArgs: 32,\r\n    PostWithArgsAndData: 33,\r\n    PostWithArgsInBody: 34,\r\n    PostWithArgsInQS: 35,\r\n    PostWithArgsInQSAsVar: 36,\r\n    PostWithArgsValueOnly: 37,\r\n    PostReplace: 38,\r\n    PostReplaceWithData: 39\r\n};\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/requestType.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/targetInfo.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/targetInfo.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TargetInfo = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/index.js\");\r\n/**\r\n * Target Information\r\n */\r\nvar TargetInfo = /** @class */ (function () {\r\n    /*********************************************************************************************************************************/\r\n    // Constructor\r\n    /*********************************************************************************************************************************/\r\n    function TargetInfo(props) {\r\n        // Default the properties\r\n        this.props = props || {};\r\n        this.requestData = this.props.data;\r\n        this.requestHeaders = this.props.requestHeader;\r\n        this.requestMethod = this.props.method ? this.props.method : \"GET\";\r\n        // Set the request url\r\n        this.isGraph ? this.setGraphRequestUrl() : this.setRESTRequestUrl();\r\n    }\r\n    Object.defineProperty(TargetInfo.prototype, \"isBatchRequest\", {\r\n        // Flag to determine if this is a batch request\r\n        get: function () { return this.props.endpoint == \"$batch\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TargetInfo.prototype, \"isGraph\", {\r\n        // Flag to determine if this is a graph request\r\n        get: function () { return this.props.requestType == _1.RequestType.GraphGet || this.props.requestType == _1.RequestType.GraphPost; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /*********************************************************************************************************************************/\r\n    // Methods\r\n    /*********************************************************************************************************************************/\r\n    // Method to get the domain url\r\n    TargetInfo.prototype.getDomainUrl = function () {\r\n        var url = lib_1.ContextInfo.document ? lib_1.ContextInfo.document.location.href : \"\";\r\n        // See if this is an app web\r\n        if (lib_1.ContextInfo.isAppWeb) {\r\n            // Set the url to the host url\r\n            url = TargetInfo.getQueryStringValue(\"SPHostUrl\") + \"\";\r\n        }\r\n        // Split the url and validate it\r\n        url = url.split('/');\r\n        if (url && url.length >= 2) {\r\n            // Set the url\r\n            url = url[0] + \"//\" + url[2];\r\n        }\r\n        // Return the url\r\n        return url;\r\n    };\r\n    // Method to get a query string value\r\n    TargetInfo.getQueryStringValue = function (key) {\r\n        // Get the query string\r\n        var queryString = lib_1.ContextInfo.existsFl && lib_1.ContextInfo.document ? lib_1.ContextInfo.document.location.href.split('?') : [\"\"];\r\n        queryString = queryString.length > 1 ? queryString[1] : queryString[0];\r\n        // Parse the values\r\n        var values = queryString.split('&');\r\n        for (var i = 0; i < values.length; i++) {\r\n            var keyValue = values[i].split('=');\r\n            // Ensure a value exists\r\n            if (keyValue.length == 1) {\r\n                continue;\r\n            }\r\n            // See if this is the key we are looking for\r\n            if (decodeURIComponent(keyValue[0]) == key) {\r\n                return decodeURIComponent(keyValue[1]);\r\n            }\r\n        }\r\n        // Key was not found\r\n        return null;\r\n    };\r\n    // Method to set the request url for the Graph API\r\n    TargetInfo.prototype.setGraphRequestUrl = function () {\r\n        // Return the request url\r\n        this.requestUrl = \"https://graph.microsoft.com/\" + this.props.endpoint;\r\n    };\r\n    // Method to set the request url for the REST API\r\n    TargetInfo.prototype.setRESTRequestUrl = function () {\r\n        var endpoint = this.props.endpoint ? \"/\" + this.props.endpoint : \"\";\r\n        var hostUrl = TargetInfo.getQueryStringValue(\"SPHostUrl\");\r\n        var qs = (endpoint.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"@target='{{Target}}'\";\r\n        var template = \"{{Url}}\" + (this.props.endpoint ? \"/_api/{{EndPoint}}{{TargetUrl}}\" : \"\");\r\n        // See if we are defaulting the url for the app web\r\n        if (lib_1.ContextInfo.existsFl && lib_1.ContextInfo.window.$REST && lib_1.ContextInfo.window.$REST.DefaultRequestToHostFl && lib_1.ContextInfo.isAppWeb && !this.props.overrideDefaultRequestToHostFl && this.props.url == null) {\r\n            // Default the url to the host web\r\n            this.props.url = hostUrl;\r\n        }\r\n        // Ensure the url exists\r\n        if (this.props.url == null) {\r\n            // Default the url to the current site/web url\r\n            this.props.url = this.props.defaultToWebFl == false ? lib_1.ContextInfo.siteAbsoluteUrl : lib_1.ContextInfo.webAbsoluteUrl;\r\n        }\r\n        // Else, see if the url already contains the full request\r\n        else if (/\\/_api\\//.test(this.props.url)) {\r\n            // Get the url\r\n            var url = this.props.url.toLowerCase().split(\"/_api/\");\r\n            // See if this is the app web and we are executing against a different web\r\n            if (lib_1.ContextInfo.isAppWeb && url[0] != lib_1.ContextInfo.webAbsoluteUrl.toLowerCase()) {\r\n                // Set the request url\r\n                this.requestUrl = lib_1.ContextInfo.webAbsoluteUrl + \"/_api/SP.AppContextSite(@target)/\" +\r\n                    url[1] + endpoint + qs.replace(/{{Target}}/g, url[0]);\r\n            }\r\n            else {\r\n                // Set the request url\r\n                this.requestUrl = this.props.url + (this.props.endpoint ? \"/\" + this.props.endpoint : \"\");\r\n            }\r\n            return;\r\n        }\r\n        // See if this is a relative url\r\n        if (this.props.url.indexOf(\"http\") != 0) {\r\n            // Add the domain\r\n            this.props.url = this.getDomainUrl() + this.props.url;\r\n        }\r\n        // See if this is the app web, and we are executing against a different web\r\n        if (lib_1.ContextInfo.isAppWeb && this.props.url != lib_1.ContextInfo.webAbsoluteUrl) {\r\n            // Set the request url\r\n            this.requestUrl = template\r\n                .replace(/{{Url}}/g, lib_1.ContextInfo.webAbsoluteUrl)\r\n                .replace(/{{EndPoint}}/g, \"SP.AppContextSite(@target)\" + endpoint)\r\n                .replace(/{{TargetUrl}}/g, qs.replace(/{{Target}}/g, this.props.url));\r\n        }\r\n        else {\r\n            // Set the request url\r\n            this.requestUrl = template\r\n                .replace(/{{Url}}/g, this.props.url)\r\n                .replace(/{{EndPoint}}/g, this.props.endpoint)\r\n                .replace(/{{TargetUrl}}/g, \"\");\r\n        }\r\n    };\r\n    return TargetInfo;\r\n}());\r\nexports.TargetInfo = TargetInfo;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/targetInfo.js?");

/***/ }),

/***/ "./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/xhrRequest.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/xhrRequest.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.XHRRequest = void 0;\r\nvar lib_1 = __webpack_require__(/*! ../lib */ \"./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/lib/index.js\");\r\n/**\r\n * XML HTTP Request Class\r\n */\r\nvar XHRRequest = /** @class */ (function () {\r\n    /*********************************************************************************************************************************/\r\n    // Constructor\r\n    /*********************************************************************************************************************************/\r\n    function XHRRequest(asyncFl, targetInfo, callback, executeFl) {\r\n        if (executeFl === void 0) { executeFl = true; }\r\n        // Default the properties\r\n        this.asyncFl = asyncFl;\r\n        this.executeFl = executeFl;\r\n        this.headers = {};\r\n        this.onRequestCompleted = callback || targetInfo.props.callback;\r\n        this.targetInfo = targetInfo;\r\n        // Create the request\r\n        this.xhr = this.createXHR();\r\n        if (this.xhr) {\r\n            // Execute the request\r\n            this.execute();\r\n        }\r\n        else {\r\n            // Default the headers\r\n            this.defaultHeaders();\r\n        }\r\n    }\r\n    Object.defineProperty(XHRRequest.prototype, \"completedFl\", {\r\n        /*********************************************************************************************************************************/\r\n        // Public Properties\r\n        /*********************************************************************************************************************************/\r\n        // Flag indicating the request has completed\r\n        get: function () { return this.xhr ? this.xhr.readyState == 4 : false; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XHRRequest.prototype, \"response\", {\r\n        // The response\r\n        get: function () { return this.xhr ? this.xhr.response : null; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XHRRequest.prototype, \"request\", {\r\n        // The xml http request\r\n        get: function () { return this.xhr ? this.xhr : null; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XHRRequest.prototype, \"requestData\", {\r\n        // The data send in the body of the request\r\n        get: function () { return this.targetInfo.requestData; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XHRRequest.prototype, \"requestHeaders\", {\r\n        // The request headers\r\n        get: function () { return this.headers; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XHRRequest.prototype, \"requestInfo\", {\r\n        // The request information\r\n        get: function () {\r\n            // Return the request information\r\n            return {\r\n                data: this.targetInfo.requestData,\r\n                headers: this.headers,\r\n                method: this.targetInfo.requestMethod,\r\n                url: this.targetInfo.requestUrl\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XHRRequest.prototype, \"requestUrl\", {\r\n        // The request url\r\n        get: function () { return this.xhr ? this.xhr.responseURL : null; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XHRRequest.prototype, \"status\", {\r\n        // The request status\r\n        get: function () { return this.xhr ? this.xhr.status : null; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /*********************************************************************************************************************************/\r\n    // Private Methods\r\n    /*********************************************************************************************************************************/\r\n    // Method to create the xml http request\r\n    XHRRequest.prototype.createXHR = function () {\r\n        // See if the generic object doesn't exist\r\n        if (typeof (XMLHttpRequest) !== \"undefined\") {\r\n            // Create an instance of the xml http request object\r\n            return new XMLHttpRequest();\r\n        }\r\n        // Try to create the request\r\n        try {\r\n            return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\r\n        }\r\n        catch (e) { }\r\n        // Try to create the request\r\n        try {\r\n            return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\r\n        }\r\n        catch (e) { }\r\n        // Try to create the request\r\n        try {\r\n            return new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n        catch (e) { }\r\n        // Log an error\r\n        console.error(\"This browser does not support xml http requests.\");\r\n    };\r\n    // Method to default the request headers\r\n    XHRRequest.prototype.defaultHeaders = function (requestDigest) {\r\n        var ifMatchExists = false;\r\n        // See if the custom headers exist\r\n        if (this.targetInfo.requestHeaders) {\r\n            // Parse the custom headers\r\n            for (var header in this.targetInfo.requestHeaders) {\r\n                // Add the header\r\n                this.xhr ? this.xhr.setRequestHeader(header, this.targetInfo.requestHeaders[header]) : null;\r\n                this.headers[header] = this.targetInfo.requestHeaders[header];\r\n                // See if this is the \"IF-MATCH\" header\r\n                ifMatchExists = ifMatchExists || header.toUpperCase() == \"IF-MATCH\";\r\n            }\r\n        }\r\n        else {\r\n            // See if this is a graph request\r\n            if (this.targetInfo.isGraph) {\r\n                // Set the default headers\r\n                this.xhr ? this.xhr.setRequestHeader(\"Accept\", \"application/json\") : null;\r\n                this.xhr ? this.xhr.setRequestHeader(\"Content-Type\", \"application/json\") : null;\r\n                this.headers[\"Accept\"] = \"application/json\";\r\n                this.headers[\"Content-Type\"] = \"application/json\";\r\n            }\r\n            else {\r\n                // Set the default headers\r\n                this.xhr ? this.xhr.setRequestHeader(\"Accept\", \"application/json;odata=verbose\") : null;\r\n                this.xhr ? this.xhr.setRequestHeader(\"Content-Type\", \"application/json;odata=verbose\") : null;\r\n                this.headers[\"Accept\"] = \"application/json;odata=verbose\";\r\n                this.headers[\"Content-Type\"] = \"application/json;odata=verbose\";\r\n            }\r\n        }\r\n        // See if we are disabling cache\r\n        if (this.targetInfo.props.disableCache) {\r\n            // Add the header\r\n            this.xhr ? this.xhr.setRequestHeader(\"Cache-Control\", \"no-cache\") : null;\r\n            this.headers[\"Cache-Control\"] = \"no-cache\";\r\n        }\r\n        // See if this is a graph request\r\n        if (this.targetInfo.isGraph) {\r\n            // Set the authorization\r\n            this.xhr ? this.xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.targetInfo.props.accessToken) : null;\r\n            this.headers[\"Authorization\"] = \"Bearer \" + this.targetInfo.props.accessToken;\r\n        }\r\n        else {\r\n            // See if custom headers were not defined\r\n            if (this.targetInfo.requestHeaders == null) {\r\n                // Set the method by default\r\n                this.xhr ? this.xhr.setRequestHeader(\"X-HTTP-Method\", this.targetInfo.requestMethod) : null;\r\n                this.headers[\"X-HTTP-Method\"] = this.targetInfo.requestMethod;\r\n            }\r\n            // Set the request digest\r\n            this.xhr ? this.xhr.setRequestHeader(\"X-RequestDigest\", requestDigest) : null;\r\n            requestDigest ? this.headers[\"X-RequestDigest\"] = requestDigest : null;\r\n            // See if we are deleting or updating the data\r\n            if (this.targetInfo.requestMethod == \"DELETE\" || this.targetInfo.requestMethod == \"MERGE\" && !ifMatchExists) {\r\n                // Append the header for deleting/updating\r\n                this.xhr ? this.xhr.setRequestHeader(\"IF-MATCH\", \"*\") : null;\r\n                this.headers[\"IF-MATCH\"] = \"*\";\r\n            }\r\n        }\r\n    };\r\n    // Method to execute the xml http request\r\n    XHRRequest.prototype.execute = function () {\r\n        var _this = this;\r\n        // Set the request digest\r\n        var requestDigest = this.targetInfo.props.requestDigest || \"\";\r\n        if (requestDigest == \"\") {\r\n            // Get the request digest\r\n            requestDigest = lib_1.ContextInfo.document ? lib_1.ContextInfo.document.querySelector(\"#__REQUESTDIGEST\") : \"\";\r\n            requestDigest = requestDigest ? requestDigest.value : lib_1.ContextInfo.formDigestValue;\r\n        }\r\n        // See if we are targeting the context endpoint\r\n        if (this.targetInfo.props.endpoint == \"contextinfo\") {\r\n            // Execute the request\r\n            this.executeRequest(requestDigest);\r\n        }\r\n        // See if this is a post request and the request digest does not exist\r\n        else if (this.targetInfo.requestMethod != \"GET\" && requestDigest == \"\") {\r\n            // See if this is a synchronous request\r\n            if (!this.asyncFl) {\r\n                // Log\r\n                console.info(\"[gd-sprest] POST requests must include the request digest information for synchronous requests. This is due to the modern page not including this information on the page.\");\r\n            }\r\n            else {\r\n                // Get the context information\r\n                lib_1.ContextInfo.getWeb(this.targetInfo.props.url || document.location.pathname.substr(0, document.location.pathname.lastIndexOf('/'))).execute(function (contextInfo) {\r\n                    // Execute the request\r\n                    _this.executeRequest(contextInfo.GetContextWebInformation.FormDigestValue);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Execute the request\r\n            this.executeRequest(requestDigest);\r\n        }\r\n    };\r\n    // Method to execute the xml http request\r\n    XHRRequest.prototype.executeRequest = function (requestDigest) {\r\n        var _this = this;\r\n        // Ensure the xml http request exists\r\n        if (this.xhr == null) {\r\n            return null;\r\n        }\r\n        // Open the request\r\n        this.xhr.open(this.targetInfo.requestMethod == \"GET\" ? \"GET\" : \"POST\", this.targetInfo.requestUrl, this.asyncFl);\r\n        // See if we are making an asynchronous request\r\n        if (this.asyncFl) {\r\n            // Set the state change event\r\n            this.xhr.onreadystatechange = function () {\r\n                // See if the request has finished\r\n                if (_this.xhr.readyState == 4) {\r\n                    // Execute the request completed event\r\n                    _this.onRequestCompleted ? _this.onRequestCompleted(_this) : null;\r\n                }\r\n            };\r\n        }\r\n        // See if we the response type is an array buffer\r\n        // Note - Updating the response type is only allow for asynchronous requests. Any error will be thrown otherwise.\r\n        if (this.targetInfo.props.bufferFl && this.asyncFl) {\r\n            // Set the response type\r\n            this.xhr.responseType = \"arraybuffer\";\r\n        }\r\n        else {\r\n            // Default the headers\r\n            this.defaultHeaders(requestDigest);\r\n            // Ensure the arguments passed is defaulted as a string, unless it's an array buffer\r\n            if (this.targetInfo.requestData && typeof (this.targetInfo.requestData) !== \"string\") {\r\n                // Stringify the data object, if it's not an array buffer\r\n                this.targetInfo.requestData = this.targetInfo.requestData.byteLength ? this.targetInfo.requestData : JSON.stringify(this.targetInfo.requestData);\r\n            }\r\n        }\r\n        // See if we are executing the request\r\n        if (this.executeFl) {\r\n            // Execute the request\r\n            this.targetInfo.props.bufferFl || this.targetInfo.requestData == null ? this.xhr.send() : this.xhr.send(this.targetInfo.requestData);\r\n        }\r\n    };\r\n    return XHRRequest;\r\n}());\r\nexports.XHRRequest = XHRRequest;\r\n\n\n//# sourceURL=webpack://gd-sprest-bs/./node_modules/.pnpm/gd-sprest@6.4.2/node_modules/gd-sprest/build/utils/xhrRequest.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./build/index.js");
/******/ 	
/******/ })()
;