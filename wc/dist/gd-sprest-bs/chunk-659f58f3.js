/*! Built with http://stenciljs.com */
const{h:t}=window.GdSprestBs;class e{componentDidLoad(){let t=this.el.getAttribute("onRender");this.el.removeAttribute("id");let e=[];if(this.options)try{e=JSON.parse(this.options)}catch(t){e=[],console.log("Error parsing the JSON string."),console.log(this.options)}return GD.Components.Collapse({className:this.className,content:this.content,el:this.el.children[0],id:this.id,isMulti:this.isMulti,options:e,onRender:(...e)=>{t&&window[t]&&window[t].apply(this,e)}})}render(){return t("div",null)}static get is(){return"bs-collapse"}static get properties(){return{className:{type:String,attr:"class-name"},content:{type:String,attr:"content"},el:{elementRef:!0},id:{type:String,attr:"id"},isMulti:{type:Boolean,attr:"is-multi"},options:{type:String,attr:"options"}}}}class i{componentDidLoad(){let t=this.el.getAttribute("onChange");this.el.removeAttribute("id");let e=[];if(this.items)try{e=JSON.parse(this.items)}catch(t){e=[],console.log("Error parsing the JSON string."),console.log(this.items)}return GD.Components.Dropdown({className:this.className,dropLeft:this.dropLeft,dropRight:this.dropRight,dropUp:this.dropUp,el:this.el.children[0],formFl:this.formFl,id:this.id,isSplit:this.isSplit,items:e,label:this.label,menuOnly:this.menuOnly,multi:this.multi,type:this.type,value:this.value,onChange:(...e)=>{t&&window[t]&&window[t].apply(this,e)}})}render(){return t("div",null)}static get is(){return"bs-dropdown"}static get properties(){return{className:{type:String,attr:"class-name"},dropLeft:{type:Boolean,attr:"drop-left"},dropRight:{type:Boolean,attr:"drop-right"},dropUp:{type:Boolean,attr:"drop-up"},el:{elementRef:!0},formFl:{type:Boolean,attr:"form-fl"},id:{type:String,attr:"id"},isSplit:{type:Boolean,attr:"is-split"},items:{type:String,attr:"items"},label:{type:String,attr:"label"},menuOnly:{type:Boolean,attr:"menu-only"},multi:{type:Boolean,attr:"multi"},type:{type:Number,attr:"type"},value:{type:String,attr:"value"}}}}class r{componentDidLoad(){let t=[];if(this.rows)try{t=JSON.parse(this.rows)}catch(e){t=[],console.log("Error parsing the JSON string."),console.log(this.rows)}let e=null;if(this.value)try{e=JSON.parse(this.value)}catch(t){e=null,console.log("Error parsing the JSON string."),console.log(this.value)}return GD.Components.Form({el:this.el.children[0],rows:t,value:e})}render(){return t("div",null)}static get is(){return"bs-form"}static get properties(){return{el:{elementRef:!0},rows:{type:String,attr:"rows"},value:{type:String,attr:"value"}}}}export{e as a,i as b,r as c};