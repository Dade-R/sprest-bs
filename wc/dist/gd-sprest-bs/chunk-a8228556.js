/*! Built with http://stenciljs.com */
const{h:t}=window.GdSprestBs;class e{componentDidLoad(){let t=this.el.getAttribute("onChange"),e=this.el.getAttribute("onClear");this.el.removeAttribute("id");let n=[];if(this.appendedButtons)try{n=JSON.parse(this.appendedButtons)}catch(t){n=[],console.log("Error parsing the JSON string."),console.log(this.appendedButtons)}let i=[];if(this.prependedButtons)try{i=JSON.parse(this.prependedButtons)}catch(t){i=[],console.log("Error parsing the JSON string."),console.log(this.prependedButtons)}return GD.Components.InputGroup({appendedButtons:n,appendedLabel:this.appendedLabel,className:this.className,description:this.description,el:this.el.children[0],id:this.id,isLarge:this.isLarge,isPlainText:this.isPlainText,isReadonly:this.isReadonly,isSmall:this.isSmall,label:this.label,placeholder:this.placeholder,prependedButtons:i,prependedLabel:this.prependedLabel,rows:this.rows,type:this.type,value:this.value,onChange:(...e)=>{t&&window[t]&&window[t].apply(this,e)},onClear:(...t)=>{e&&window[e]&&window[e].apply(this,t)}})}render(){return t("div",null)}static get is(){return"bs-inputGroup"}static get properties(){return{appendedButtons:{type:String,attr:"appended-buttons"},appendedLabel:{type:String,attr:"appended-label"},className:{type:String,attr:"class-name"},description:{type:String,attr:"description"},el:{elementRef:!0},id:{type:String,attr:"id"},isLarge:{type:Boolean,attr:"is-large"},isPlainText:{type:Boolean,attr:"is-plain-text"},isReadonly:{type:Boolean,attr:"is-readonly"},isSmall:{type:Boolean,attr:"is-small"},label:{type:String,attr:"label"},placeholder:{type:String,attr:"placeholder"},prependedButtons:{type:String,attr:"prepended-buttons"},prependedLabel:{type:String,attr:"prepended-label"},rows:{type:Number,attr:"rows"},type:{type:Number,attr:"type"},value:{type:String,attr:"value"}}}}class n{componentDidLoad(){let t=this.el.getAttribute("onRenderContent");return GD.Components.Jumbotron({className:this.className,content:this.content,el:this.el.children[0],isFluid:this.isFluid,lead:this.lead,title:this.el.getAttribute("title"),onRenderContent:(...e)=>{t&&window[t]&&window[t].apply(this,e)}})}render(){return t("div",null)}static get is(){return"bs-jumbotron"}static get properties(){return{className:{type:String,attr:"class-name"},content:{type:String,attr:"content"},el:{elementRef:!0},isFluid:{type:Boolean,attr:"is-fluid"},lead:{type:String,attr:"lead"}}}}export{e as a,n as b};