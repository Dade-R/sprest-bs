/*! Built with http://stenciljs.com */
const{h:t}=window.GdSprestBs;class e{componentDidLoad(){let t=this.el.getAttribute("onClick");return GD.Components.Pagination({alignment:this.alignment,className:this.className,el:this.el.children[0],icon:this.icon,isLarge:this.isLarge,isSmall:this.isSmall,label:this.label,numberOfPages:this.numberOfPages,onClick:(...e)=>{t&&window[t]&&window[t].apply(this,e)}})}render(){return t("div",null)}static get is(){return"bs-pagination"}static get properties(){return{alignment:{type:Number,attr:"alignment"},className:{type:String,attr:"class-name"},el:{elementRef:!0},icon:{type:String,attr:"icon"},isLarge:{type:Boolean,attr:"is-large"},isSmall:{type:Boolean,attr:"is-small"},label:{type:String,attr:"label"},numberOfPages:{type:Number,attr:"number-of-pages"}}}}class s{componentDidLoad(){let t={};if(this.btnProps)try{t=JSON.parse(this.btnProps)}catch(e){t={},console.log("Error parsing the JSON string."),console.log(this.btnProps)}let e={};if(this.options)try{e=JSON.parse(this.options)}catch(t){e={},console.log("Error parsing the JSON string."),console.log(this.options)}return GD.Components.Popover({btnProps:t,className:this.className,el:this.el.children[0],isDismissible:this.isDismissible,options:e,type:this.type})}render(){return t("div",null)}static get is(){return"bs-popover"}static get properties(){return{btnProps:{type:String,attr:"btn-props"},className:{type:String,attr:"class-name"},el:{elementRef:!0},isDismissible:{type:Boolean,attr:"is-dismissible"},options:{type:String,attr:"options"},type:{type:Number,attr:"type"}}}}class i{componentDidLoad(){return GD.Components.Progress({className:this.className,el:this.el.children[0],isAnimated:this.isAnimated,isStriped:this.isStriped,label:this.label,max:this.max,min:this.min,size:this.size})}render(){return t("div",null)}static get is(){return"bs-progress"}static get properties(){return{className:{type:String,attr:"class-name"},el:{elementRef:!0},isAnimated:{type:Boolean,attr:"is-animated"},isStriped:{type:Boolean,attr:"is-striped"},label:{type:String,attr:"label"},max:{type:Number,attr:"max"},min:{type:Number,attr:"min"},size:{type:Number,attr:"size"}}}}export{e as a,s as b,i as c};